Generate a model checker11: 0x7f9369603140 0
Load schedule from file: 
Solver path: /Users/yiqiuping/installed/z3/bin/z3
Formula file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
end set parameters!
command: /Users/yiqiuping/installed/z3/bin/z3 -smt2 -in 
Create a Schedule: 0x7f93696031f0
Generate a new Executor: 0x7f9369400130 0x7f93696031f0

In checker_thread_begin: 0x7fff72793000
before enter lock: thread create 0x7fff72793000
in thread_begin_action: 0x7f9369400130 0x7fff72793000 main ~0~~
before addAction lock: 0x7f9369603440 0x7f93696036b0
thread: 0x7f9369603440 0x7f93696036b0
thread add end: 0x7f9369603440 0x7f93696036b0 2 0
enabled threads: 0
In add action: main-0
End add action! main-0
BBB: 0x7f9369400130 0x7f93694002c0 0x7fff72793000

bbbb0: 0x7fff72793000 0x7f9369603440
BeginFunc: 0x7f9369400130
checker_addUses: 83 1 82

update load: 83 0
82 0 

checker_addUses: 84 1 83

update load: 84 0
83 0 

checker_addUses: 85 1 82

update load: 85 0
82 0 

checker_addUses: 86 1 85

update load: 86 0
85 0 

checker_addUses: 87 1 86

update load: 87 0
86 0 

checker_addUses: 88 1 87

update load: 88 0
87 0 

In atomic checker_preStore: 0x7f9369603624 0 7!
In write: 0x7fff72793000 0x7f9369603440 0x7f9369603aa0
Before add action: 0x7f9369603440 0x7f9369603aa0
before addAction lock: 0x7f9369603440 0x7f9369603aa0
thread: 0x7f9369603440 0x7f9369603aa0
thread add end: 0x7f9369603440 0x7f9369603aa0 8 1
enabled threads: 1
0x7fff72793000
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1

set load:  main-1 0

update buf1: 0x7f9369603440 0x7f9369603624 0
update buf1 end: 0x7f9369603440

Write value1: main-1 0x7f9369603624 0!
checker_addUses: 89 1 86

update load: 89 0
86 0 

checker_addUses: 90 1 82

update load: 90 0
82 0 

checker_addUses: 91 1 90

update load: 91 0
90 0 

checker_addUses: 92 1 91

update load: 92 0
91 0 

checker_addUses: 93 1 92

update load: 93 0
92 0 

In atomic checker_preStore: 0x7f9369603628 0 7!
In write: 0x7fff72793000 0x7f9369603440 0x7f9369603d70
Before add action: 0x7f9369603440 0x7f9369603d70
before addAction lock: 0x7f9369603440 0x7f9369603d70
thread: 0x7f9369603440 0x7f9369603d70
thread add end: 0x7f9369603440 0x7f9369603d70 8 2
enabled threads: 1
0x7fff72793000
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2

set load:  main-2 0

update buf1: 0x7f9369603440 0x7f9369603628 0
update buf1 end: 0x7f9369603440

Write value1: main-2 0x7f9369603628 0!
checker_addUses: 94 1 91

update load: 94 0
91 0 

checker_addUses: 95 1 82

update load: 95 0
82 0 

checker_addUses: 96 1 78

update load: 96 0
78 0 

checker_addUses: 98 1 78

update load: 98 0
78 0 

BeginFunc: 0x7f9369400130
BeginFunc: 0x7f9369400130
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 192 1 191

update load: 192 0
191 0 

checker_addUses: 99 1 79

update load: 99 0
79 0 

checker_addUses: 101 1 79
checker_addUses: 233 1 232

update load: 101 0
79 0 

checker_addUses: 234 1 231
BeginFunc: 0x7f9369400130
checker_addUses: 235 1 230
checker_addUses: 236 1 235
checker_addUses: 179 1 178
checker_addUses: 237 2 236

update load: 179 0
178 0 

checker_addUses: 180 1 179
checker_addUses: 239 1 238

update load: 180 0
179 0 

checker_addUses: 240 1 239
checker_addUses: 241 1 240
checker_addUses: 182 1 178

In checker_thread_begin: 0x700000081000

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 192 1 191

update load: 192 0
191 0 

Waitting for create thread 0x700000081000
checker_addUses: 102 1 78

update load: 102 0
78 0 

checker_addUses: 233 1 232
checker_addUses: 103 1 102
checker_addUses: 234 1 231
checker_addUses: 235 1 230
checker_addUses: 236 1 235

update load: 103 0
102 0 

checker_addUses: 237 2 236
checker_addUses: 104 1 103
checker_addUses: 239 1 238
checker_addUses: 240 1 239

update load: 104 0
103 0 

checker_addUses: 241 1 240

In checker_thread_create: 0x7fff72793000 0x700000081000

In checker_thread_begin: 0x700000104000
before addAction lock: 0x7f9369603440 0x7f93697001a0
thread: Waitting for create thread 0x7f93696034400x700000081000 
0x7f93697001a0
thread add end: 0x7f9369603440 0x7f93697001a0 1 3
enabled threads: 1
0x7fff72793000
In add action: main-3
End add action! main-3
checker_addUses: 105 1 79

update load: 105 0
79 0 

checker_addUses: 106 1 105

update load: 106 0
105 0 

checker_addUses: 107 1 106
Waitting for create thread 0x700000104000

update load: 107 0
106 0 

Waitting for create thread 0x700000081000
before enter lock: thread create 0x700000081000

In checker_thread_create: 0x7fff72793000 0x700000104000
in thread_begin_action: 0x7f9369400130 0x700000081000 threadA ~1~~
update buf2: 0x7f93694008e0 2
before addAction lock: 0x7f93694008e0 0x7f9369400ce0
thread: 0x7f93694008e0 0x7f9369400ce0
thread add end: 0x7f93694008e0 0x7f9369400ce0 2 0
enabled threads: 1
0x7fff72793000
In add action: threadA-0
End add action! threadA-0
BBB: 0x7f9369400130 0x7f93694002c0 0x700000081000

bbbb0: 0x700000081000 0x7f93694008e0
0x7fff72793000 0x700000081000
bbb: 0x7f93697001a0 0x7f9369400ce0
Waitting for create thread 0x700000104000
checker_addUses: 4 1 3
before addAction lock: 0x7f9369603440 0x7f9369500010
thread: 0x7f9369603440 0x7f9369500010
thread add end: 0x7f9369603440 0x7f9369500010 
update load: 4 0
3 0 

1 4
enabled threads: 2
0x700000081000
0x7fff72793000
checker_addUses: 5 1 4
In add action: main-4
End add action! main-4

update load: 5 0
4 0 

checker_addUses: 6 1 5
checker_addUses: 108 1 102

update load: 6 0
5 0 


update load: 108 0
102 0 

In atomic checker_preLoad: 0x7f9369603628 7 6!
checker_addUses: 109 1 108

update load: 109 0
108 0 

In read action: 0x700000081000
before addAction lock: 0x7f93694008e0 0x7f9369400fb0
thread: 0x7f93694008e0 0x7f9369400fb0
thread add end: 0x7f93694008e0 0x7f9369400fb0 7 1
enabled threads: 2
0x700000081000
before addAction lock: 0x7fff72793000
0x7f9369603440 0x7f9369500230
In add action: threadA-1
Waitting for create thread Tset: 2 2 0x700000081000
0x700000081000 0x7fff72793000 
0x700000104000
before enter lock: thread create 0x700000104000
End add action! threadA-1
loads: 0 thread: 1
0x7f9369603440 0x7f9369500230
thread add end: 0x7f9369603440 0x7f9369500230 4 
set load:  threadA-1 0

5
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: main-5
End add action! main-5

add load: 6 threadA-1 1
In pre_read action: threadA-1
checker_addUses: 110 1 105

update load: 110 0
105 0 

in thread_begin_action: 0x7f9369400130 0x700000104000 threadB ~checker_addUses: 111 1 110
2~~
get value: 0x7f9369400c50 0x7f9369603628 0
current values for: 0x7f9369603628
0 
update buf2: 0x7f9369604510
update load: 111 0
110 0 


Read expect value: threadA-1 0x7f9369603628 0 0 0
 2
End: 0x700000081000 threadA-1
before addAction lock: checker_addUses: 7 1 4
0x7f9369604510 0x7f93696048f0
thread: 0x7f9369604510 0x7f93696048f0
thread add end: 0x7f9369604510 0x7f93696048f0 2 0
enabled threads: 
update load: 7 0
4 0 

2
checker_addUses: 8 1 3
0x700000081000
0x7fff72793000

update load: 8 0
3 0 

In add action: threadB-0
checker_addUses: 9 1 8
End add action! threadB-0

update load: 9 0
8 0 

BBB: 0x7f9369400130 0x7f93694002c0 0x700000104000

bbbb0: 0x700000104000 0x7f9369604510
0x7fff72793000 0x700000104000
bbb: 0x7f9369500010 0x7f93696048f0
checker_addUses: 10 1 9

update load: 10 0
9 0 

checker_addUses: 41 1 40
In rmw_add: 0x7f9369603624 1 7

update load: 41 0
40 0 

before addAction lock: 0x7f93694008e0 0x7f9369401230
thread: 0x7f93694008e0 0x7f9369401230
thread add end: 0x7f93694008e0 0x7f9369401230checker_addUses: 42 1 41
 before addAction lock: 
update load: 42 0
41 0 

110x7f9369603440  checker_addUses: 43 1 42
20x7f93697004e0


update load: 43 0
42 0 

enabled threads: 3
In atomic checker_preLoad: 0x700000081000
0x700000104000
0x7fff72793000
0x7f9369603628 7 43!
In add action: threadA-2
In read action: 0x700000104000
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-2
thread: 0x7f9369603440 0x7f93697004e0
thread add end: 0x7f9369603440 
add load: 10 threadA-2 1
0x7f93697004e0 4 6
enabled threads: loads: 31
 0x7000000810002

0x700000104000
0x7fff72793000

set load:  threadA-2 1
threadA-2 
In add action: main-6
End add action! main-6
checker_addUses: 112 1 79
get value: 0x7f9369400bc0 0x7f9369603624 0
current values for: 0x7f9369603624
0 

update load: 112 0
79 0 


expect value rmw_add: threadA 2 0 !1! 10

update buf1: 0x7f93694008e0 0x7f9369603624 1
update buf1 end: 0x7f93694008e0
update buf1: 0x7f9369604510 0x7f9369603624 1
update buf1 end: 0x7f9369604510
update buf1: 0x7f9369603440 0x7f9369603624 1
update buf1 end: 0x7f9369603440
before addAction lock: 0x7f9369604510 0x7f9369401350
thread: 0x7f9369604510 0x7f9369401350
checker_addUses: 11 1 8
thread add end: 0x7f9369604510 0x7f9369401350 7 1
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000

update load: 11 0
8 0 

In add action: threadB-1
checker_addUses: 12 1 3
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 

update load: 12 0
3 0 

End add action! threadB-1
loads: 0 1
checker_addUses: 13 1 12

set load:  threadB-1 0


update load: 13 0
12 0 


add load: 43 threadB-1 1
checker_addUses: 14 1 13
In pre_read action: threadB-1

update load: 14 0
13 0 

get value: 0x7f9369604870 0x7f9369603628 0
checker_addUses: 15 2 10
current values for: 0x7f9369603628
0 

Read expect value: threadB-1 0x7f9369603628 0 0 0

update load: 15 1
10 14 0 
threadA-2 
End: 0x700000104000 threadB-1
checker_addUses: 16 1 15
checker_addUses: 44 1 41

update load: 16 1
15 0 
threadA-2 

update load: 44 0
41 0 

checker_addUses: 45 1 40

update load: 45 0
40 0 

checker_addUses: 46 1 45
checker_addUses: 25 1 4

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 25 1
4 0 16 29 
threadA-2 

update load: 47 0
46 0 

checker_addUses: 26 1 25
In rmw_add: 0x7f9369603624 1 7
before addAction lock: 0x7f9369604510 0x7f9369604b20
thread: 0x7f9369604510 0x7f9369604b20

update load: 26 1
25 0 16 29 
threadA-2 
thread add end: 0x7f9369604510 0x7f9369604b20 11 In atomic checker_preLoad: 2
enabled threads: 0x7f9369603628 3
70x700000081000 
260x700000104000!

In read action: 0x7fff727930000x700000081000

In add action: threadB-2
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-2

add load: 47 threadB-2 1
loads: 1 2

set load:  threadB-2 1
threadB-2 
get value: 0x7f93696047f0 0x7f9369603624 1
current values for: 0x7f9369603624
0 1 

expect value rmw_add: threadB 2 1 !1! 47

update buf1: 0x7f93694008e0 0x7f9369603624 2
update buf1 end: 0x7f93694008e0
update buf1: 0x7f9369604510 0x7f9369603624 2
update buf1 end: 0x7f9369604510
update buf1: 0x7f9369603440 0x7f9369603624 2
update buf1 end: 0x7f9369603440
before addAction lock: 0x7f93694008e0 0x7f9369604c00
thread: 0x7f93694008e0checker_addUses: 48 1 45
 0x7f9369604c00
thread add end: 0x7f93694008e0 0x7f9369604c00 7 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000

update load: 48 0
45 0 

In add action: threadA-3
checker_addUses: 49 1 40
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 

update load: 49 0
40 0 

End add action! threadA-3
loads: checker_addUses: 50 1 49
1 3

set load:  threadA-3 1
threadA-2 

update load: 50 0
49 0 

checker_addUses: 51 1 50

add load: 26 threadA-3 1
In pre_read action: threadA-3
update load: 51 0
50 0 


checker_addUses: 52 2 47
get value: 0x7f9369400c50 0x7f9369603628 0
current values for: 0x7f9369603628
0 

update load: 52 1
47 51 0 
threadB-2 

Read expect value: threadA-3 0x7f9369603628 0 0 0
checker_addUses: 53 1 52
End: 0x700000081000 threadA-3

update load: 53 1
52 0 
threadB-2 
checker_addUses: 27 1 4
checker_addUses: 55 1 45

update load: 27 1
4 0 16 29 
threadA-2 

update load: 55 1
45 0 53 
threadB-2 
checker_addUses: 28 2 26
checker_addUses: 56 1 55

update load: 56 1
55 0 53 
threadB-2 
In atomic checker_preStore: 0x7f9369603624 0 7!
In write: 0x700000104000 0x7f9369604510 0x7f9369700f40
Before add action: 
update load: 28 3
26 6 0 16 29 
threadA-1 threadA-2 threadA-3 
0x7f9369604510 0x7f9369700f40
before addAction lock: 0x7f9369604510 0x7f9369700f40
thread: 0x7f9369604510 0x7f9369700f40
thread add end: 0x7f9369604510 0x7f9369700f40 8 3
enabled threads: checker_addUses: 29 1 28
3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-3
End add action! threadB-3
action: 
update load: 29 3
28 0 16 29 
threadA-1 threadA-2 threadA-3 
threadB-3
loads: 1 3

set load:  threadB-3 1
threadB-2 
update buf1: 0x7f93694008e0 0x7f9369603624 In thread_yield_action!
0
Begin thread yield!
In thread yield!
update buf1 end: before addAction lock: 0x7f93694008e0
0x7f93694008e0 0x7f9369605140
thread: 0x7f93694008e0update buf1:  0x7f93696045100x7f9369605140 
0x7f9369603624 thread add end: 00x7f93694008e0
 update buf1 end: 0x7f9369604510
update buf1: 0x7f9369605140 0x7f9369603440 0x7f9369603624 03
 update buf1 end: 0x7f9369603440
4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000

Write value1: threadB-3 0x7f9369603624 0!
In add action: threadA-4
checker_addUses: 57 1 45
End add action! threadA-4

update load: 57 1
45 0 53 
threadB-2 
End thread yield!
checker_addUses: 58 1 41

update load: 58 1
41 0 53 
threadB-2 
checker_addUses: 59 1 58

update load: 59 1
58 0 53 
threadB-2 
In rmw_add: 0x7f9369603628 1 7
before addAction lock: 0x7f9369604510 0x7f93696052f0
thread: 0x7f9369604510 0x7f93696052f0
thread add end: 0x7f9369604510 0x7f93696052f0 11 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-4
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-4

add load: 59 threadB-4 1
loads: 2 4

set load:  threadB-4 2
threadB-2 threadB-4 
get value: 0x7f9369604870 0x7f9369603628 0
current values for: 0x7f9369603628
0 

expect value rmw_add: threadB 4 0 !1! 59

update buf1: 0x7f93694008e0 0x7f9369603628 1
update buf1 end: 0x7f93694008e0
update buf1: 0x7f9369604510 0x7f9369603628 1
update buf1 end: 0x7f9369604510
update buf1: 0x7f9369603440 0x7f9369603628 1
update buf1 end: 0x7f9369603440
checker_addUses: 60 1 41

update load: 60 1
41 0 53 
threadB-2 
checker_addUses: 75 1 74

update load: 75 1
74 0 53 
threadB-2 
var = 1
In checker_thread_end
Thread_end_action: 0x700000104000
before addAction lock: 0x7f9369604510 0x7f93696056e0
thread: 0x7f9369604510 0x7f93696056e0
thread add end: 0x7f9369604510 0x7f93696056e0 5 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
erase enabledThreads: threadB-5
In add action: threadB-5
End add action! threadB-5
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f9369400130
checker_addUses: 113 1 78

update load: 113 0
78 0 

checker_addUses: 25 1 4

update load: 25 3
4 0 16 29 
threadA-1 threadA-2 threadA-3 
checker_addUses: 26 1 25

update load: 26 3
25 0 16 29 
threadA-1 threadA-2 threadA-3 
In atomic checker_preLoad: 0x7f9369603628 7 26!
In read action: 0x700000081000
before addAction lock: 0x7f93694008e0 0x7f9369700d40
thread: 0x7f93694008e0 0x7f9369700d40
thread add end: 0x7f93694008e0 0x7f9369700d40 7 5
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadA-5
Tset: 2 2 0x700000081000
0x700000081000 0x7fff72793000 
End add action! threadA-5
loads: 3 5

set load:  threadA-5 3
threadA-1 threadA-2 threadA-3 

add load: 26 threadA-5 1
In pre_read action: threadA-5
get value: 0x7f9369400c50 0x7f9369603628 1
current values for: 0x7f9369603628
0 1 

Read expect value: threadA-5 0x7f9369603628 1 1 1
End: 0x700000081000 threadA-5
checker_addUses: 27 1 4

update load: 27 3
4 0 16 29 
threadA-1 threadA-2 threadA-3 
checker_addUses: 28 2 26

update load: 28 4
26 6 0 16 29 
threadA-1 threadA-2 threadA-3 threadA-5 
checker_addUses: 29 1 28

update load: 29 4
28 0 16 29 
threadA-1 threadA-2 threadA-3 threadA-5 
In checker_thread_end
Thread_end_action: 0x700000081000
before addAction lock: 0x7f93694008e0 0x7f9369701090
thread: 0x7f93694008e0 0x7f9369701090
thread add end: 0x7f93694008e0 0x7f9369701090 5 6
enabled threads: 2
0x700000081000
0x7fff72793000
erase enabledThreads: threadA-6
In add action: threadA-6
End add action! threadA-6
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f9369400130
In checker_thread_end
Thread_end_action: 0x7fff72793000
before addAction lock: 0x7f9369603440 0x7f93695003f0
thread: 0x7f9369603440 0x7f93695003f0
thread add end: 0x7f9369603440 0x7f93695003f0 5 7
enabled threads: 1
0x7fff72793000
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
### Execute Time: 0.007284 0.007257 0.007257
Current Trace: 3
threadA*threadA|6|1 threadA-1 r 0 6
threadA*threadA|10|1 threadA-2 rmw 0 1 10
threadA*threadA|26|1 threadA-3 r 0 26
threadA*threadA|26|2 threadA-5 r 1 26
iiiii: 0x7f93694008e0 3
xx: 2 1
yy: threadA-2
xx: 3 1
yy: threadA-2
xx: 5 3
yy: threadA-1
yy: threadA-2
yy: threadA-3
threadB*threadB|43|1 threadB-1 r 0 43
threadB*threadB|47|1 threadB-2 rmw 1 2 47
threadB*threadB|56|1 threadB-3 w 0 56
threadB*threadB|59|1 threadB-4 rmw 0 1 59
iiiii: 0x7f9369604510 3
xx: 2 1
yy: threadB-2
xx: 3 1
yy: threadB-2
xx: 4 2
yy: threadB-2
yy: threadB-4
main*main|88|1 main-1 w 0 88
main*main|93|1 main-2 w 0 93
iiiii: 0x7f9369603440 0
Generating: threadA-2 threadB-2 0 2
checking: read:val threadA-2 2
mhbList: 1
enforce: 0x7f9369401230 threadA-2 2 
enforcePairs: 1
checking fairness: 1
threadA 2 2
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f9369400130
Adding Binary HB constraints: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f9369400130
### Basic Prepare Time: 0.001231 0.001242
### MO Prepare Time: 0.000303 0.000309
Adding sc constraints: 10
### SC Prepare Time: 0.002118 0.00214
In addLockConstraints: 0
prefix size: 0
### Part1 Time: 0.002021 0.002032
reads & writes: 2 4
reads & writes: 5 2
### Part2 Time: 0.001021 0.001029
### Consistent Prepare Time: 0.003106 0.003109
### Prepare Time: 0.007331 0.007339
AddRWRelations: 1
Add RW: threadA-2 2
In addRWRelation: threadA-2 2

xxxx read: threadA-2 0 2

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
InputVal2: threadB-2 1
values: threadB-2 2 2

write: threadB-2 2
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 1
In addRWRelation: threadB-2 1

xxxx read: threadB-2 1 1

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 2    ****
values: threadA-2 3 1
skip: threadB-2
skip: threadB-3
values: main-1 0 1
xxx: threadB-2 1 (or )
Identify inconsistency1!
Gurantee end: threadB-2 (= 1 0)
values: threadB-3 0 2
values: main-1 0 2
xxx: threadA-2 2 (or  (and (= 1 0)))
ttt: (or  (and (= 1 0)))
Adding SW Constraints: 0
End adding SW Constraints!
### RWConstraint construct Time: 0.001535 0.001546
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 471 column 10: model is not available")
end checksat!
### Solver Time2: 0.000634 0.000648
### Generate Solution time: 1.1e-05 1.5e-05
### Last Part time: 0.000814 0.000817
### Generate Schedule Time: 0.011339 0.011342
Generating: threadB-2 threadB-3 1 0
checking: read:val threadB-2 0
mhbList: 1
enforce: 0x7f9369604b20 threadB-2 0 
enforcePairs: 1
checking fairness: 1
threadB 2 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7f9369400130
### Prepare Time: 0.007598 0.000276
AddRWRelations: 1
Add RW: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 1 0

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 0
values: threadA-2 1 0
skip: threadB-2
skip: threadB-3
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr: 
For write: main-1
consider write: threadA-2
skip write1: threadB-2
skip write3: threadB-3
skip write1: main-1
xxx: threadB-2 0 (or  (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1)))))
Adding SW Constraints: 1
End adding SW Constraints!
### RWConstraint construct Time: 0.003052 0.001526
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: sat
[Solver] Solution found in 0s:

end checksat!
### Solver Time2: 0.003223 0.002596
Create a Schedule: 0x7f9369407b50
Generate new schedule: 0x7f9369407b50
### P1 time: 3.2e-05 3.5e-05
aaa: 1 main*main|0|1 threadA*threadA|6|1
aaa: 1 main*main|0|1 threadA*threadA|10|1
aaa: 1 main*main|0|1 threadA*threadA|26|1
aaa: 1 main*main|0|1 threadA*threadA|0|2
aaa: 1 main*main|0|1 threadA*threadA|26|2
aaa: 1 main*main|0|1 threadA*threadA|0|3
aaa: 1 main*main|0|1 threadB*threadB|43|1
aaa: 1 main*main|0|1 threadB*threadB|47|1
aaa: 1 main*main|0|1 threadB*threadB|56|1
aaa: 1 main*main|0|1 threadB*threadB|59|1
aaa: 1 main*main|0|1 threadB*threadB|0|2
aaa: 1 main*main|88|1 threadA*threadA|6|1
aaa: 1 main*main|88|1 threadA*threadA|10|1
aaa: 1 main*main|88|1 threadA*threadA|26|1
aaa: 1 main*main|88|1 threadA*threadA|0|2
aaa: 1 main*main|88|1 threadA*threadA|26|2
aaa: 1 main*main|88|1 threadA*threadA|0|3
aaa: 1 main*main|88|1 threadB*threadB|43|1
aaa: 1 main*main|88|1 threadB*threadB|47|1
aaa: 1 main*main|88|1 threadB*threadB|56|1
aaa: 1 main*main|88|1 threadB*threadB|59|1
aaa: 1 main*main|88|1 threadB*threadB|0|2
aaa: 1 main*main|93|1 threadA*threadA|6|1
aaa: 1 main*main|93|1 threadA*threadA|10|1
aaa: 1 main*main|93|1 threadA*threadA|26|1
aaa: 1 main*main|93|1 threadA*threadA|0|2
aaa: 1 main*main|93|1 threadA*threadA|26|2
aaa: 1 main*main|93|1 threadA*threadA|0|3
aaa: 1 main*main|93|1 threadB*threadB|43|1
aaa: 1 main*main|93|1 threadB*threadB|47|1
aaa: 1 main*main|93|1 threadB*threadB|56|1
aaa: 1 main*main|93|1 threadB*threadB|59|1
aaa: 1 main*main|93|1 threadB*threadB|0|2
aaa: 1 main*main|0|2 threadA*threadA|6|1
aaa: 1 main*main|0|2 threadA*threadA|10|1
aaa: 1 main*main|0|2 threadA*threadA|26|1
aaa: 1 main*main|0|2 threadA*threadA|0|2
aaa: 1 main*main|0|2 threadA*threadA|26|2
aaa: 1 main*main|0|2 threadA*threadA|0|3
aaa: 1 main*main|0|2 threadB*threadB|43|1
aaa: 1 main*main|0|2 threadB*threadB|47|1
aaa: 1 main*main|0|2 threadB*threadB|56|1
aaa: 1 main*main|0|2 threadB*threadB|59|1
aaa: 1 main*main|0|2 threadB*threadB|0|2
aaa: 1 main*main|0|3 threadB*threadB|43|1
aaa: 1 main*main|0|3 threadB*threadB|47|1
aaa: 1 main*main|0|3 threadB*threadB|56|1
aaa: 1 main*main|0|3 threadB*threadB|59|1
aaa: 1 main*main|0|3 threadB*threadB|0|2
aaa: 0 main*main|0|5 threadA*threadA|0|1
aaa: 0 main*main|0|5 threadA*threadA|6|1
aaa: 0 main*main|0|5 threadA*threadA|10|1
aaa: 0 main*main|0|5 threadA*threadA|26|1
aaa: 0 main*main|0|5 threadA*threadA|0|2
aaa: 0 main*main|0|5 threadA*threadA|26|2
aaa: 0 main*main|0|5 threadA*threadA|0|3
aaa: 0 main*main|0|6 threadA*threadA|0|1
aaa: 0 main*main|0|6 threadA*threadA|6|1
aaa: 0 main*main|0|6 threadA*threadA|10|1
aaa: 0 main*main|0|6 threadA*threadA|26|1
aaa: 0 main*main|0|6 threadA*threadA|0|2
aaa: 0 main*main|0|6 threadA*threadA|26|2
aaa: 0 main*main|0|6 threadA*threadA|0|3
aaa: 0 main*main|0|6 threadB*threadB|0|1
aaa: 0 main*main|0|6 threadB*threadB|43|1
aaa: 0 main*main|0|6 threadB*threadB|47|1
aaa: 0 main*main|0|6 threadB*threadB|56|1
aaa: 0 main*main|0|6 threadB*threadB|59|1
aaa: 0 main*main|0|6 threadB*threadB|0|2
aaa: 0 threadA*threadA|6|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|6|1 threadB*threadB|47|1
aaa: 0 threadA*threadA|6|1 threadB*threadB|56|1
aaa: 0 threadA*threadA|6|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|47|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|56|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|47|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|56|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|43|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|47|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|56|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|59|1
write: threadB-4
reachbility list1: 2
RF1: threadA 1 0
write: threadB-3
reachbility list2: 1
RF1: threadA 2 65535
write: threadB-4
reachbility list1: 2
RF1: threadA 3 0
write: threadB-4
reachbility list1: 2
RF1: threadA 5 1
write: main-2
reachbility list2: 0
RF1: threadB 1 0
write: main-1
reachbility list2: 0
RF: threadB 2 0
write: main-2
reachbility list2: 0
RF: threadB 4 0
write: threadB-4
reachbility list1: 2
RF1: threadA 1 0
write: threadB-3
reachbility list2: 1
RF1: threadA 2 65535
write: threadB-4
reachbility list1: 2
RF1: threadA 3 0
write: threadB-4
reachbility list1: 2
RF1: threadA 5 1
write: main-2
reachbility list2: 0
RF1: threadB 1 0
write: main-1
reachbility list2: 0
RF: threadB 2 0
write: main-2
reachbility list2: 0
RF: threadB 4 0
### P2 time: 0.005139 0.005147
### P3 time: 8e-06 1.2e-05
### Generate Solution time: 0.005222 0.005215
### Check redundancy time: 1.5e-05 1.8e-05
### Last Part time: 0.008837 0.008026
### Generate Schedule Time: 0.021454 0.010118
Generating: threadA-1 threadB-4 0 1
checking: read:val threadA-1 1
mhbList: 0
enforcePairs: 1
checking fairness: 1
threadA 1 1
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7f9369400130
### Prepare Time: 0.00789 0.000302
AddRWRelations: 1
Add RW: threadA-1 1
In addRWRelation: threadA-1 1

xxxx read: threadA-1 0 1

write: threadB-4 1

write: main-2 0
writeset: 2
InputVal2: threadB-4 0
values: threadB-4 1 1

write: threadB-4 1
current orStr: 
For write: threadB-4
Guarantee begin: threadB-4 2
list: threadB-2
list: threadB-4
guarantee: threadB-2 1
In addRWRelation: threadB-2 1

xxxx read: threadB-2 1 1

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 0
values: threadA-2 1 1

write: threadA-2 1
For read: threadB-2
current orStr: 
For write: threadA-2
Guarantee begin: threadA-2 1
list: threadA-2
guarantee: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 0 0

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
InputVal2: threadB-2 1
values: threadB-2 2 0
values: threadB-3 0 0

write: threadB-3 0
For read: threadA-2
current orStr: 
For write: threadB-3
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 1
Loop depednecy from guarantee: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr:  (and (= 1 0))
For write: main-1
skip write1: threadA-2
consider write: threadB-2
consider write: threadB-3
skip write1: main-1
xxx: threadA-2 0 (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
Gurantee end: threadA-2 (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
skip write1: threadA-2
skip write1: threadB-2
skip write3: threadB-3
consider write: main-1
skip: threadB-2
skip: threadB-3
values: main-1 0 1
xxx: threadB-2 1 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))
guarantee: threadB-4 0
In addRWRelation: threadB-4 0

xxxx read: threadB-4 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-4 1
list: threadB-2
guarantee: threadB-2 1
Hit Cache2!
Gurantee end: threadB-4 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))
skip: threadB-4
values: main-2 0 0

write: main-2 0
For read: threadB-4
current orStr: 
For write: main-2
skip write1: threadB-4
skip write1: main-2
xxx: threadB-4 0 (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))
Gurantee end: threadB-4 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))
skip write1: threadB-4
consider write: main-2
values: main-2 0 1
xxx: threadA-1 1 (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))) (= RF_threadA-1_threadB-4 1) (= B_threadA-1_threadB-4 0) (= false (and (= B_main-2_threadB-4 0) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))) (= RF_threadB-2_threadA-2 1) (= B_threadA-2_threadB-2 1) (= false (and (= B_main-1_threadA-2 0) (= B_main-1_threadB-2 1)))))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))) (= RF_threadA-1_threadB-4 1) (= B_threadA-1_threadB-4 0) (= false (and (= B_main-2_threadB-4 0) (= B_main-2_threadA-1 1)))))
Adding SW Constraints: 4
End adding SW Constraints!
### RWConstraint construct Time: 0.00647 0.003429
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 525 column 10: model is not available")
end checksat!
### Solver Time2: 0.003638 0.000428
### Generate Solution time: 0.005234 1.4e-05
### Last Part time: 0.009414 0.00058
### Generate Schedule Time: 0.026382 0.004931
Generating: threadA-3 threadB-4 0 1
checking: read:val threadA-3 1
mhbList: 1
enforce: 0x7f9369401230 threadA-2 0 
enforcePairs: 2
checking fairness: 2
threadA 2 0
threadA 3 1
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7f9369400130
### Prepare Time: 0.00815 0.000269
AddRWRelations: 2
Add RW: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 0 0

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
InputVal2: threadB-2 1
values: threadB-2 2 0
values: threadB-3 0 0

write: threadB-3 0
For read: threadA-2
current orStr: 
For write: threadB-3
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 1
In addRWRelation: threadB-2 1

xxxx read: threadB-2 1 1

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 0
values: threadA-2 1 1

write: threadA-2 1
For read: threadB-2
current orStr: 
For write: threadA-2
Guarantee begin: threadA-2 1
list: threadA-2
guarantee: threadA-2 0
Loop depednecy from guarantee: threadA-2
skip: threadB-2
skip: threadB-3
values: main-1 0 1
xxx: threadB-2 1 (or  (and (= 1 0)))
Gurantee end: threadB-3 (or  (and (= 1 0)))
skip write1: threadA-2
skip write2: threadB-2
skip write1: threadB-3
consider write: main-1
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1))))
For write: main-1
skip write1: threadA-2
consider write: threadB-2
consider write: threadB-3
skip write1: main-1
xxx: threadA-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
Add RW: threadA-3 1
In addRWRelation: threadA-3 1

xxxx read: threadA-3 0 1

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 0
Hit Cache2!
Gurantee end: threadA-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
InputVal2: threadB-4 0
values: threadB-4 1 1

write: threadB-4 1
current orStr: 
For write: threadB-4
Guarantee begin: threadB-4 2
list: threadB-2
list: threadB-4
guarantee: threadB-2 1
Hit Cache2!
guarantee: threadB-4 0
In addRWRelation: threadB-4 0

xxxx read: threadB-4 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-4 1
list: threadB-2
guarantee: threadB-2 1
Hit Cache2!
Gurantee end: threadB-4 (or  (and (= 1 0)))
skip: threadB-4
values: main-2 0 0

write: main-2 0
For read: threadB-4
current orStr: 
For write: main-2
skip write1: threadB-4
skip write1: main-2
xxx: threadB-4 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))
Gurantee end: threadB-4 (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))
skip write1: threadB-4
consider write: main-2
values: main-2 0 1
xxx: threadA-3 1 (or  (and  (and (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_main-2_threadB-4 0) (= B_main-2_threadA-3 1)))))
ttt: (or  (and  (and (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-4_main-2 1) (= B_main-2_threadB-4 1)))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_main-2_threadB-4 0) (= B_main-2_threadA-3 1)))))
Adding SW Constraints: 4
End adding SW Constraints!
### RWConstraint construct Time: 0.009657 0.003197
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 511 column 10: model is not available")
end checksat!
### Solver Time2: 0.004055 0.000427
### Generate Solution time: 0.005244 1.4e-05
### Last Part time: 0.010001 0.00059
### Generate Schedule Time: 0.030745 0.004366
Generating: threadA-5 main-2 1 0
checking: read:val threadA-5 0
mhbList: 3
enforce: 0x7f9369400fb0 threadA-1 0 
enforce: 0x7f9369401230 threadA-2 0 
enforce: 0x7f9369604c00 threadA-3 0 
enforcePairs: 4
checking fairness: 4
threadA 1 0
threadA 2 0
threadA 3 0
threadA 5 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7f9369400130
### Prepare Time: 0.008416 0.000272
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: threadA-1 0

xxxx read: threadA-1 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-1 0 (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0)))))
Add RW: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 0 0

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
InputVal2: threadB-2 1
values: threadB-2 2 0
values: threadB-3 0 0

write: threadB-3 0
For read: threadA-2
current orStr: 
For write: threadB-3
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 1
In addRWRelation: threadB-2 1

xxxx read: threadB-2 1 1

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 0
values: threadA-2 1 1

write: threadA-2 1
For read: threadB-2
current orStr: 
For write: threadA-2
Guarantee begin: threadA-2 1
list: threadA-2
guarantee: threadA-2 0
Loop depednecy from guarantee: threadA-2
skip: threadB-2
skip: threadB-3
values: main-1 0 1
xxx: threadB-2 1 (or  (and (= 1 0)))
Gurantee end: threadB-3 (or  (and (= 1 0)))
skip write1: threadA-2
skip write2: threadB-2
skip write1: threadB-3
consider write: main-1
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1))))
For write: main-1
skip write1: threadA-2
consider write: threadB-2
consider write: threadB-3
skip write1: main-1
xxx: threadA-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
Add RW: threadA-3 0
In addRWRelation: threadA-3 0

xxxx read: threadA-3 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 0
Hit Cache2!
Gurantee end: threadA-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-3 0 (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0)))))
ttt: (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0)))))
Add RW: threadA-5 0
In addRWRelation: threadA-5 0

xxxx read: threadA-5 1 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-5 3
list: threadA-1
list: threadA-2
list: threadA-3
guarantee: threadA-1 0
Hit Cache2!
guarantee: threadA-2 0
Hit Cache2!
guarantee: threadA-3 0
Hit Cache2!
Gurantee end: threadA-5 (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0))))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0))))) (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0)))))
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-5 0 (or  (and  (= RF_threadA-5_main-2 1) (= B_main-2_threadA-5 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-5_threadB-4 0)))))
ttt: (or  (and  (= RF_threadA-5_main-2 1) (= B_main-2_threadA-5 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-5_threadB-4 0)))))
Adding SW Constraints: 5
End adding SW Constraints!
### RWConstraint construct Time: 0.012935 0.003288
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: sat
[Solver] Solution found in 0s:

end checksat!
### Solver Time2: 0.006445 0.002397
Create a Schedule: 0x7f936960e300
Generate new schedule: 0x7f936960e300
### P1 time: 8e-05 5.2e-05
aaa: 1 main*main|0|1 threadA*threadA|6|1
aaa: 1 main*main|0|1 threadA*threadA|10|1
aaa: 1 main*main|0|1 threadA*threadA|26|1
aaa: 1 main*main|0|1 threadA*threadA|0|2
aaa: 1 main*main|0|1 threadA*threadA|26|2
aaa: 1 main*main|0|1 threadA*threadA|0|3
aaa: 1 main*main|0|1 threadB*threadB|43|1
aaa: 1 main*main|0|1 threadB*threadB|47|1
aaa: 1 main*main|0|1 threadB*threadB|56|1
aaa: 1 main*main|0|1 threadB*threadB|59|1
aaa: 1 main*main|0|1 threadB*threadB|0|2
aaa: 1 main*main|88|1 threadA*threadA|6|1
aaa: 1 main*main|88|1 threadA*threadA|10|1
aaa: 1 main*main|88|1 threadA*threadA|26|1
aaa: 1 main*main|88|1 threadA*threadA|0|2
aaa: 1 main*main|88|1 threadA*threadA|26|2
aaa: 1 main*main|88|1 threadA*threadA|0|3
aaa: 1 main*main|88|1 threadB*threadB|43|1
aaa: 1 main*main|88|1 threadB*threadB|47|1
aaa: 1 main*main|88|1 threadB*threadB|56|1
aaa: 1 main*main|88|1 threadB*threadB|59|1
aaa: 1 main*main|88|1 threadB*threadB|0|2
aaa: 1 main*main|93|1 threadA*threadA|6|1
aaa: 1 main*main|93|1 threadA*threadA|10|1
aaa: 1 main*main|93|1 threadA*threadA|26|1
aaa: 1 main*main|93|1 threadA*threadA|0|2
aaa: 1 main*main|93|1 threadA*threadA|26|2
aaa: 1 main*main|93|1 threadA*threadA|0|3
aaa: 1 main*main|93|1 threadB*threadB|43|1
aaa: 1 main*main|93|1 threadB*threadB|47|1
aaa: 1 main*main|93|1 threadB*threadB|56|1
aaa: 1 main*main|93|1 threadB*threadB|59|1
aaa: 1 main*main|93|1 threadB*threadB|0|2
aaa: 1 main*main|0|2 threadA*threadA|6|1
aaa: 1 main*main|0|2 threadA*threadA|10|1
aaa: 1 main*main|0|2 threadA*threadA|26|1
aaa: 1 main*main|0|2 threadA*threadA|0|2
aaa: 1 main*main|0|2 threadA*threadA|26|2
aaa: 1 main*main|0|2 threadA*threadA|0|3
aaa: 1 main*main|0|2 threadB*threadB|43|1
aaa: 1 main*main|0|2 threadB*threadB|47|1
aaa: 1 main*main|0|2 threadB*threadB|56|1
aaa: 1 main*main|0|2 threadB*threadB|59|1
aaa: 1 main*main|0|2 threadB*threadB|0|2
aaa: 1 main*main|0|3 threadB*threadB|43|1
aaa: 1 main*main|0|3 threadB*threadB|47|1
aaa: 1 main*main|0|3 threadB*threadB|56|1
aaa: 1 main*main|0|3 threadB*threadB|59|1
aaa: 1 main*main|0|3 threadB*threadB|0|2
aaa: 0 main*main|0|5 threadA*threadA|0|1
aaa: 0 main*main|0|5 threadA*threadA|6|1
aaa: 0 main*main|0|5 threadA*threadA|10|1
aaa: 0 main*main|0|5 threadA*threadA|26|1
aaa: 0 main*main|0|5 threadA*threadA|0|2
aaa: 0 main*main|0|5 threadA*threadA|26|2
aaa: 0 main*main|0|5 threadA*threadA|0|3
aaa: 0 main*main|0|6 threadA*threadA|0|1
aaa: 0 main*main|0|6 threadA*threadA|6|1
aaa: 0 main*main|0|6 threadA*threadA|10|1
aaa: 0 main*main|0|6 threadA*threadA|26|1
aaa: 0 main*main|0|6 threadA*threadA|0|2
aaa: 0 main*main|0|6 threadA*threadA|26|2
aaa: 0 main*main|0|6 threadA*threadA|0|3
aaa: 0 main*main|0|6 threadB*threadB|0|1
aaa: 0 main*main|0|6 threadB*threadB|43|1
aaa: 0 main*main|0|6 threadB*threadB|47|1
aaa: 0 main*main|0|6 threadB*threadB|56|1
aaa: 0 main*main|0|6 threadB*threadB|59|1
aaa: 0 main*main|0|6 threadB*threadB|0|2
aaa: 0 threadA*threadA|6|1 threadB*threadB|43|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|47|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|56|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|43|1
aaa: 1 threadA*threadA|10|1 threadB*threadB|47|1
aaa: 1 threadA*threadA|10|1 threadB*threadB|56|1
aaa: 1 threadA*threadA|10|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|47|1
aaa: 0 threadA*threadA|26|1 threadB*threadB|56|1
aaa: 1 threadA*threadA|26|1 threadB*threadB|59|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|43|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|47|1
aaa: 0 threadA*threadA|26|2 threadB*threadB|56|1
aaa: 1 threadA*threadA|26|2 threadB*threadB|59|1
write: main-2
reachbility list2: 0
RF: threadA 1 0
write: main-1
reachbility list2: 0
RF: threadA 2 0
write: main-2
reachbility list2: 0
RF: threadA 3 0
write: main-2
reachbility list2: 0
RF: threadA 5 0
write: main-2
reachbility list2: 0
RF1: threadB 1 0
write: threadA-2
reachbility list1: 1
RF1: threadB 2 65535
write: main-2
reachbility list2: 0
RF1: threadB 4 65535
write: main-2
reachbility list2: 0
RF: threadA 1 0
write: main-1
reachbility list2: 0
RF: threadA 2 0
write: main-2
reachbility list2: 0
RF: threadA 3 0
write: main-2
reachbility list2: 0
RF: threadA 5 0
write: main-2
reachbility list2: 0
RF1: threadB 1 0
write: threadA-2
reachbility list1: 1
RF1: threadB 2 65535
write: main-2
reachbility list2: 0
RF1: threadB 4 65535
### P2 time: 0.010468 0.005337
### P3 time: 1.8e-05 1.4e-05
### Generate Solution time: 0.010669 0.005428
### Check redundancy time: 2.7e-05 1.5e-05
### Last Part time: 0.018107 0.008109
### Generate Schedule Time: 0.042764 0.012022
Generating: threadB-1 threadB-4 0 1
checking: read:val threadB-1 1
mhbList: 0
enforcePairs: 1
checking fairness: 1
threadB 1 1
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7f9369400130
### Prepare Time: 0.008671 0.000261
AddRWRelations: 1
Add RW: threadB-1 1
In addRWRelation: threadB-1 1

xxxx read: threadB-1 0 1

write: threadB-4 1

write: main-2 0
writeset: 2
skip: threadB-4
values: main-2 0 1
xxx: threadB-1 1 (or )
Identify inconsistency1!
ttt: 
Inconsistency2!
### RWConstraint construct Time: 0.012994 6.3e-05
Identify inconsistency2!
close z3File!!!!!!!!!!!!!!: 0
### Generate Schedule Time: 0.043518 0.000758
End solver!
### Solver Time: 0.043807 0.043866
buffers: 0x7f93694008e0 2
delete Buffer: 0x7f9369400bc0
suc!
delete Buffer: 0x7f9369400c50
suc!
buffers: 0x7f9369604510 2
delete Buffer: 0x7f93696047f0
suc!
delete Buffer: 0x7f9369604870
suc!
buffers: 0x7f9369603440 2
delete Buffer: 0x7f9369603820
suc!
delete Buffer: 0x7f9369603bf0
suc!
delete curSch1: 0x7f93696031f0
delete curSch2!
### Total Time: 0.051765
BeginFunc: 0x0
BeginFunc: 0x0
Solver path: /Users/yiqiuping/installed/z3/bin/z3
Formula file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
end set parameters!
command: /Users/yiqiuping/installed/z3/bin/z3 -smt2 -in 
Create a Schedule: 0x7f9369400ba0
Generate a new Executor: 0x7f9369400120 0x7f9369400ba0
Schedule: 0x7f9369407b50 0 -1 2 20 20
For: main 6 main*main|0|5
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|26|1
    threadA 4 threadA*threadA|0|2
    threadA 5 threadA*threadA|26|2
    threadA 6 threadA*threadA|0|3
For: main 7 main*main|0|6
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|26|1
    threadA 4 threadA*threadA|0|2
    threadA 5 threadA*threadA|26|2
    threadA 6 threadA*threadA|0|3
    threadB 0 threadB*threadB|0|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
    threadB 5 threadB*threadB|0|2
For: threadA 1 threadA*threadA|6|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
For: threadA 2 threadA*threadA|10|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
For: threadA 3 threadA*threadA|26|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
For: threadA 4 threadA*threadA|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadA 5 threadA*threadA|26|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
For: threadA 6 threadA*threadA|0|3
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadB 1 threadB*threadB|43|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 2 threadB*threadB|47|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 3 threadB*threadB|56|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 4 threadB*threadB|59|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 5 threadB*threadB|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
Read Map: threadB 2 threadB*threadB|47|1 0
Read Map: threadB 4 threadB*threadB|59|1 0
Read Map2: threadA 1 threadA*threadA|6|1 0
Read Map2: threadA 2 threadA*threadA|10|1 65535
Read Map2: threadA 3 threadA*threadA|26|1 0
Read Map2: threadA 5 threadA*threadA|26|2 1
Read Map2: threadB 1 threadB*threadB|43|1 0

Prefix: threadB 2
Prefix Context: threadB*threadB|47|1 0

In checker_thread_begin: 0x7fff72793000
before enter lock: thread create 0x7fff72793000
in thread_begin_action: 0x7f9369400120 0x7fff72793000 main ~0~~
before addAction lock: 0x7f936960e200 0x7f9369605660
thread: 0x7f936960e200 0x7f9369605660
thread add end: 0x7f936960e200 0x7f9369605660 2 0
enabled threads: 0
In add action: main-0
End add action! main-0
BBB: 0x7f9369400120 0x7f93694002b0 0x7fff72793000

bbbb0: 0x7fff72793000 0x7f936960e200
BeginFunc: 0x7f9369400120
checker_addUses: 83 1 82

update load: 83 0
82 0 

checker_addUses: 84 1 83

update load: 84 0
83 0 

checker_addUses: 85 1 82

update load: 85 0
82 0 

checker_addUses: 86 1 85

update load: 86 0
85 0 

checker_addUses: 87 1 86

update load: 87 0
86 0 

checker_addUses: 88 1 87

update load: 88 0
87 0 

In atomic checker_preStore: 0x7f9369500534 0 7!
In write: 0x7fff72793000 0x7f936960e200 0x7f9369500080
Before add action: 0x7f936960e200 0x7f9369500080
before addAction lock: 0x7f936960e200 0x7f9369500080
thread: 0x7f936960e200 0x7f9369500080
thread add end: 0x7f936960e200 0x7f9369500080 8 1
enabled threads: 1
0x7fff72793000
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1

set load:  main-1 0

update buf1: 0x7f936960e200 0x7f9369500534 0
update buf1 end: 0x7f936960e200

Write value1: main-1 0x7f9369500534 0!
checker_addUses: 89 1 86

update load: 89 0
86 0 

checker_addUses: 90 1 82

update load: 90 0
82 0 

checker_addUses: 91 1 90

update load: 91 0
90 0 

checker_addUses: 92 1 91

update load: 92 0
91 0 

checker_addUses: 93 1 92

update load: 93 0
92 0 

In atomic checker_preStore: 0x7f9369500538 0 7!
In write: 0x7fff72793000 0x7f936960e200 0x7f9369400fa0
Before add action: 0x7f936960e200 0x7f9369400fa0
before addAction lock: 0x7f936960e200 0x7f9369400fa0
thread: 0x7f936960e200 0x7f9369400fa0
thread add end: 0x7f936960e200 0x7f9369400fa0 8 2
enabled threads: 1
0x7fff72793000
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2

set load:  main-2 0

update buf1: 0x7f936960e200 0x7f9369500538 0
update buf1 end: 0x7f936960e200

Write value1: main-2 0x7f9369500538 0!
checker_addUses: 94 1 91

update load: 94 0
91 0 

checker_addUses: 95 1 82

update load: 95 0
82 0 

checker_addUses: 96 1 78

update load: 96 0
78 0 

checker_addUses: 98 1 78

update load: 98 0
78 0 

BeginFunc: 0x7f9369400120
BeginFunc: 0x7f9369400120
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 192 1 191
checker_addUses: 233 1 232

update load: 192 0
191 0 

checker_addUses: 234 1 231
checker_addUses: 235 1 230
checker_addUses: 236 1 235
checker_addUses: 237 2 236
checker_addUses: 99 1 79

update load: 99 0
79 0 

checker_addUses: 239 1 238
checker_addUses: 101 1 79
checker_addUses: 240 1 239

update load: 101 0
79 0 

checker_addUses: 241 1 240
BeginFunc: 0x7f9369400120

In checker_thread_begin: 0x700000081000
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186
Waitting for create thread 0x700000081000

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190
checker_addUses: 233 1 232
checker_addUses: 234 1 231
checker_addUses: 235 1 230
checker_addUses: 236 1 235
checker_addUses: 237 2 236
checker_addUses: 239 1 238
checker_addUses: 240 1 239
checker_addUses: 241 1 240

In checker_thread_begin: 0x700000104000
Waitting for create thread 0x700000081000
Waitting for create thread 0x700000104000

update load: 191 0
190 0 

checker_addUses: 192 1 191

update load: 192 0
191 0 

checker_addUses: 102 1 78

update load: 102 0
78 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

checker_addUses: 104 1 103
Waitting for create thread 
update load: 104 0
103 0 

Waitting for create thread 0x7000000810000x700000104000


In checker_thread_create: 0x7fff72793000 0x700000081000
before addAction lock: 0x7f936960e200 0x7f9369605170
thread: 0x7f936960e200 0x7f9369605170
thread add end: 0x7f936960e200 0x7f9369605170 1 3
enabled threads: 1
0x7fff72793000
In add action: main-3
End add action! main-3
Waitting for create thread 0x700000081000
before enter lock: thread create 0x700000081000
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000104000
checker_addUses: 105 1 79

update load: 105 0
79 0 

in thread_begin_action: 0x7f9369400120 0x700000081000 threadA ~1~~
checker_addUses: 106 1 105
update buf2: 0x7f9369400ba0 2

update load: 106 0
105 0 

checker_addUses: 107 1 106
before addAction lock: 0x7f9369400ba0 0x7f93695038b0
thread: 0x7f9369400ba0 0x7f93695038b0
thread add end: 0x7f9369400ba0 0x7f93695038b0 
update load: 107 0
106 0 

2 0
enabled threads: 1
0x7fff72793000

In checker_thread_create: 0x7fff72793000 0x700000104000
In add action: threadA-0
End add action! threadA-0
BBB: 0x7f9369400120 0x7f93694002b0 0x700000081000

bbbb0: 0x700000081000 0x7f9369400ba0
0x7fff72793000 0x700000081000
bbb: 0x7f9369605170 0x7f93695038b0
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000104000
before addAction lock: 0x7f936960e200 0x7f9369409ab0
thread: 0x7f936960e200 checker_addUses: 4 1 3
0x7f9369409ab0
thread add end: 0x7f936960e200 0x7f9369409ab0 1 4
enabled threads: 2
0x700000081000
0x7fff72793000

update load: 4 0
3 0 

In add action: main-4
checker_addUses: 5 1 4
End add action! main-4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7f9369500538 7 6!
In read action: 0x700000081000
before addAction lock: 0x7f9369400ba0 0x7f9369503bc0
thread: 0x7f9369400ba0 0x7f9369503bc0
thread add end: 0x7f9369400ba0 0x7f9369503bc0 7 1
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadA-1
Tset: 2 2 0x700000081000
0x700000081000 0x7fff72793000 
End add action! threadA-1
loads: 0 1

set load:  threadA-1 0


add load: 6 threadA-1 1
Waitting for create thread 0x700000104000
before enter lock: thread create 0x700000104000
remain: threadB*threadB|43|1
remain: threadB*threadB|47|1
remain: threadB*threadB|56|1
remain: threadB*threadB|59|1checker_addUses: 108 1 102


update load: 108 0
102 0 

in thread_begin_action: 0x7f9369400120 0x700000104000 threadB ~2~~
checker_addUses: 109 1 108

update load: 109 0
108 0 

update buf2: 0x7f9369603e40 2
before addAction lock: 0x7f9369603e40 0x7f9369409bb0
thread: 0x7f9369603e40 0x7f9369409bb0
thread add end: 0x7f9369603e40 0x7f9369409bb0 2 0
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadB-0
End add action! threadB-0
BBB: 0x7f9369400120 0x7f93694002b0 0x700000104000

bbbb0: 0x700000104000 0x7f9369603e40
0x7fff72793000 0x700000104000
bbb: 0x7f9369409ab0 0x7f9369409bb0
checker_addUses: 41 1 40

update load: 41 0
40 0 

checker_addUses: 42 1 41

update load: 42 0
41 0 

checker_addUses: 43 1 42

update load: 43 0
42 0 

In atomic checker_preLoad: 0x7f9369500538 7 43!
In read action: 0x700000104000
before addAction lock: 0x7f9369603e40 0x7f9369400c90
thread: 0x7f9369603e40 0x7f9369400c90
thread add end: 0x7f9369603e40 0x7f9369400c90 7 1
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-1
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-1
loads: 0 1

set load:  threadB-1 0


add load: 43 threadB-1 1
In pre_read action: threadB-1
get value: 0x7f9369409370 0x7f9369500538 0
current values for: 0x7f9369500538
0 

Read expect value: threadB-1 0x7f9369500538 0 0 0
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
before addAction lock: 0x7f936960e200 0x7f9369603400
thread: 0x7f936960e200 0x7f9369603400
thread add end: 0x7f936960e200 0x7f9369603400 4 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: main-5
End add action! main-5
End: 0x700000104000 threadB-1
checker_addUses: 44 1 41

update load: 44 0
41 0 

checker_addUses: 45 1 40

update load: 45 0
40 0 

checker_addUses: 46 1 45
remain: threadB*threadB|47|1
remain: threadB*threadB|56|1
remain: threadB*threadB|59|1
update load: 46 0
45 0 


checker_addUses: 47 1 46

update load: 47 0
46 0 

In rmw_add: 0x7f9369500534 1 7
before addAction lock: 0x7f9369603e40 0x7f93694014d0
thread: 0x7f9369603e40 0x7f93694014d0
thread add end: 0x7f9369603e40 0x7f93694014d0 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-2
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-2

add load: 47 threadB-2 1
loads: 1 2

set load:  threadB-2 1
threadB-2 
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
checker_addUses: 110 1 105
before fetch: 0x7f9369500534 0
0 
after fetch: 0x7f9369500534
0 

expect value rmw_add: threadB 2 0 !1! 47

update load: 110 0
105 0 


update buf1: 0x7f9369400ba0 0x7f9369500534 1
update buf1 end: 0x7f9369400ba0
checker_addUses: 111 1 110
update buf1: 0x7f9369603e40 0x7f9369500534 1
update buf1 end: 0x7f9369603e40
update buf1: 0x7f936960e200 0x7f9369500534 
update load: 111 0
110 0 

1
update buf1 end: 0x7f936960e200
before addAction lock: 0x7f936960e200 0x7f9369503d60
thread: 0x7f936960e200 0x7f9369503d60
thread add end: 0x7f936960e200 0x7f9369503d60 4 6
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: main-6
End add action! main-6
checker_addUses: 48 1 45

update load: 48 0
45 0 

checker_addUses: 49 1 40

update load: 49 0
40 0 

checker_addUses: 50 1 49
remain: threadB*threadB|56|1
remain: threadB*threadB|59|1

update load: 50 0
49 0 

checker_addUses: 51 1 50

update load: 51 0
50 0 

checker_addUses: 52 2 47

update load: 52 1
47 51 0 
threadB-2 
checker_addUses: 53 1 52

update load: 53 1
52 0 
threadB-2 
checker_addUses: 112 1 79

update load: 112 0
79 0 

checker_addUses: 62 1 41

update load: 62 1
41 0 53 66 
threadB-2 
checker_addUses: 63 1 62
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
remain: threadB*threadB|56|1

update load: 63 1
62 0 53 66 
threadB-2 
remain: threadB*threadB|59|1
In atomic checker_preLoad: 0x7f9369500538 7 63!
In read action: 0x700000104000
before addAction lock: 0x7f9369603e40 0x7f9369409760
thread: 0x7f9369603e40 0x7f9369409760
thread add end: 0x7f9369603e40 0x7f9369409760 7 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-3
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-3
loads: 1 3

set load:  threadB-3 1
threadB-2 

add load: 63 threadB-3 1
In pre_read action: threadB-3
get value: 0x7f9369409370 0x7f9369500538 0
current values for: 0x7f9369500538
0 

Read expect value: threadB-3 0x7f9369500538 0 0 0
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
End: 0x700000104000 threadB-3
checker_addUses: 64 1 41

update load: 64 1
41 0 53 66 
threadB-2 
remain: threadB*threadB|56|1
remain: threadB*threadB|59|1
checker_addUses: 65 2 63

update load: 65 3
63 43 0 53 66 
threadB-1 threadB-2 threadB-3 
checker_addUses: 66 1 65

update load: 66 3
65 0 53 66 
threadB-1 threadB-2 threadB-3 
In thread_yield_action!
Begin thread yield!
In thread yield!
before addAction lock: 0x7f9369603e40 0x7f9369401880
thread: 0x7f9369603e40 0x7f9369401880
thread add end: 0x7f9369603e40 0x7f9369401880 3 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-4
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
End add action! threadB-4
remain: threadB*threadB|56|1
remain: threadB*threadB|59|1
End thread yield!
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
In pre_read action: threadA-1
get value: 0x7f9369503830 0x7f9369500538 0
current values for: 0x7f9369500538
0 

Read expect value: threadA-1 0x7f9369500538 0 0 0
End: 0x700000081000 threadA-1
checker_addUses: 7 1 4

update load: 7 0
4 0 

checker_addUses: 8 1 3

update load: 8 0
3 0 

checker_addUses: 9 1 8

update load: 9 0
8 0 

checker_addUses: 10 1 9

update load: 10 0
9 0 

In rmw_add: 0x7f9369500534 1 7
before addAction lock: 0x7f9369400ba0 0x7f9369701370
thread: 0x7f9369400ba0 0x7f9369701370
thread add end: 0x7f9369400ba0 0x7f9369701370 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-2
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-2

add load: 10 threadA-2 1
loads: 1 2

set load:  threadA-2 1
threadA-2 
get value: 0x7f9369503580 0x7f9369500534 1
current values for: 0x7f9369500534
0 1 

expect value rmw_add: threadA 2 1 !1! 10

update buf1: 0x7f9369400ba0 0x7f9369500534 2
update buf1 end: 0x7f9369400ba0
update buf1: 0x7f9369603e40 0x7f9369500534 2
update buf1 end: 0x7f9369603e40
update buf1: 0x7f936960e200 0x7f9369500534 2
update buf1 end: 0x7f936960e200
checker_addUses: 11 1 8

update load: 11 0
8 0 

checker_addUses: 12 1 3

update load: 12 0
3 0 

checker_addUses: 13 1 12

update load: 13 0
12 0 

checker_addUses: 14 1 13

update load: 14 0
13 0 

checker_addUses: 15 2 10

update load: 15 1
10 14 0 
threadA-2 
checker_addUses: 16 1 15

update load: 16 1
15 0 
threadA-2 
checker_addUses: 18 1 8

update load: 18 1
8 0 16 
threadA-2 
checker_addUses: 19 1 18

update load: 19 1
18 0 16 
threadA-2 
In atomic checker_preStore: 0x7f9369500534 0 7!
In write: 0x700000081000 0x7f9369400ba0 0x7f93697028c0
Before add action: 0x7f9369400ba0 0x7f93697028c0
before addAction lock: 0x7f9369400ba0 0x7f93697028c0
thread: 0x7f9369400ba0 0x7f93697028c0
thread add end: 0x7f9369400ba0 0x7f93697028c0 8 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-3
End add action! threadA-3
action: threadA-3
loads: 1 3

set load:  threadA-3 1
threadA-2 
update buf1: 0x7f9369400ba0 0x7f9369500534 0
update buf1 end: 0x7f9369400ba0
update buf1: 0x7f9369603e40 0x7f9369500534 0
update buf1 end: 0x7f9369603e40
update buf1: 0x7f936960e200 0x7f9369500534 0
update buf1 end: 0x7f936960e200

Write value1: threadA-3 0x7f9369500534 0!
checker_addUses: 20 1 8

update load: 20 1
8 0 16 
threadA-2 
checker_addUses: 21 1 4

update load: 21 1
4 0 16 
threadA-2 
checker_addUses: 22 1 21

update load: 22 1
21 0 16 
threadA-2 
In rmw_add: 0x7f9369500538 1 7
before addAction lock: 0x7f9369400ba0 0x7f9369703300
thread: 0x7f9369400ba0 0x7f9369703300
thread add end: 0x7f9369400ba0 0x7f9369703300 11 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-4
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-4

add load: 22 threadA-4 1
loads: 2 4

set load:  threadA-4 2
threadA-2 threadA-4 
get value: 0x7f9369503830 0x7f9369500538 0
current values for: 0x7f9369500538
0 

expect value rmw_add: threadA 4 0 !1! 22

update buf1: 0x7f9369400ba0 0x7f9369500538 1
update buf1 end: 0x7f9369400ba0
update buf1: 0x7f9369603e40 0x7f9369500538 1
update buf1 end: 0x7f9369603e40
update buf1: 0x7f936960e200 0x7f9369500538 1
update buf1 end: 0x7f936960e200
checker_addUses: 23 1 4

update load: 23 1
4 0 16 
threadA-2 
In checker_thread_end
Thread_end_action: 0x700000081000
before addAction lock: 0x7f9369400ba0 0x7f9369701600
thread: 0x7f9369400ba0 0x7f9369701600
thread add end: 0x7f9369400ba0 0x7f9369701600 5 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
erase enabledThreads: threadA-5
In add action: threadA-5
End add action! threadA-5
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f9369400120
checker_addUses: 62 1 41

update load: 62 3
41 0 53 66 
threadB-1 threadB-2 threadB-3 
checker_addUses: 63 1 62

update load: 63 3
62 0 53 66 
threadB-1 threadB-2 threadB-3 
In atomic checker_preLoad: 0x7f9369500538 7 63!
In read action: 0x700000104000
before addAction lock: 0x7f9369603e40 0x7f9369702500
thread: 0x7f9369603e40 0x7f9369702500
thread add end: 0x7f9369603e40 0x7f9369702500 7 5
enabled threads: 2
0x700000104000
0x7fff72793000
In add action: threadB-5
Tset: 2 2 0x700000104000
0x700000104000 0x7fff72793000 
End add action! threadB-5
loads: 3 5

set load:  threadB-5 3
threadB-1 threadB-2 threadB-3 

add load: 63 threadB-5 1
In pre_read action: threadB-5
get value: 0x7f9369409370 0x7f9369500538 1
current values for: 0x7f9369500538
0 1 

Read expect value: threadB-5 0x7f9369500538 1 1 1
End: 0x700000104000 threadB-5
checker_addUses: 64 1 41

update load: 64 3
41 0 53 66 
threadB-1 threadB-2 threadB-3 
checker_addUses: 65 2 63

update load: 65 4
63 43 0 53 66 
threadB-1 threadB-2 threadB-3 threadB-5 
checker_addUses: 66 1 65

update load: 66 4
65 0 53 66 
threadB-1 threadB-2 threadB-3 threadB-5 
checker_addUses: 75 1 74

update load: 75 1
74 0 53 
threadB-2 
var = 1
In checker_thread_end
Thread_end_action: 0x700000104000
before addAction lock: 0x7f9369603e40 0x7f9369702640
thread: 0x7f9369603e40 0x7f9369702640
thread add end: 0x7f9369603e40 0x7f9369702640 5 6
enabled threads: 2
0x700000104000
0x7fff72793000
erase enabledThreads: threadB-6
In add action: threadB-6
End add action! threadB-6
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f9369400120
checker_addUses: 113 1 78

update load: 113 0
78 0 

In checker_thread_end
Thread_end_action: 0x7fff72793000
before addAction lock: 0x7f936960e200 0x7f9369701b20
thread: 0x7f936960e200 0x7f9369701b20
thread add end: 0x7f936960e200 0x7f9369701b20 5 7
enabled threads: 1
0x7fff72793000
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
### Execute Time: 0.060511 0.015909 0.008652
Current Trace: 3
threadA*threadA|6|1 threadA-1 r 0 6
threadA*threadA|10|1 threadA-2 rmw 1 2 10
threadA*threadA|19|1 threadA-3 w 0 19
threadA*threadA|22|1 threadA-4 rmw 0 1 22
iiiii: 0x7f9369400ba0 3
xx: 2 1
yy: threadA-2
xx: 3 1
yy: threadA-2
xx: 4 2
yy: threadA-2
yy: threadA-4
threadB*threadB|43|1 threadB-1 r 0 43
threadB*threadB|47|1 threadB-2 rmw 0 1 47
threadB*threadB|63|1 threadB-3 r 0 63
threadB*threadB|63|2 threadB-5 r 1 63
iiiii: 0x7f9369603e40 3
xx: 2 1
yy: threadB-2
xx: 3 1
yy: threadB-2
xx: 5 3
yy: threadB-1
yy: threadB-2
yy: threadB-3
main*main|88|1 main-1 w 0 88
main*main|93|1 main-2 w 0 93
iiiii: 0x7f936960e200 0
Generating: threadA-2 threadA-3 1 0
checking: read:val threadA-2 0
mhbList: 1
enforce: 0x7f9369701370 threadA-2 0 
enforce4: 0x7f93694014d0 threadB-2 0 
mhbList: 1
enforce44: 0x7f93694014d0 threadB-2 0 
enforcePairs: 2
checking fairness: 2
threadA 2 0
threadB 2 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f9369400120
Adding Binary HB constraints: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f9369400120
### Basic Prepare Time: 0.002385 0.001168
### MO Prepare Time: 0.001099 0.000853
Adding sc constraints: 10
### SC Prepare Time: 0.004216 0.002122
In addLockConstraints: 0
prefix size: 0
### Part1 Time: 0.00438 0.00241
reads & writes: 2 4
reads & writes: 5 2
### Part2 Time: 0.002534 0.001526
### Consistent Prepare Time: 0.007069 0.003967
### Prepare Time: 0.017405 0.008742
AddRWRelations: 2
Add RW: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 0
values: threadA-2 1 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
Inconsistency from guarantee1!
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and (= 1 0))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
ttt: (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 1 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 0
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr: 
For write: main-1
skip write1: threadA-2
skip write3: threadA-3
consider write: threadB-2
skip write1: main-1
xxx: threadA-2 0 (or  (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0)))))
ttt: (or  (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0)))))
Adding SW Constraints: 2
End adding SW Constraints!
### RWConstraint construct Time: 0.014963 0.00198
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 475 column 10: model is not available")
end checksat!
### Solver Time2: 0.00713 0.000697
### Generate Solution time: 0.010683 1.8e-05
### Last Part time: 0.018983 0.00088
### Generate Schedule Time: 0.055463 0.011948
Generating: threadA-1 threadA-4 0 1
checking: read:val threadA-1 1
mhbList: 0
enforce4: 0x7f93694014d0 threadB-2 0 
mhbList: 1
enforce44: 0x7f93694014d0 threadB-2 0 
enforcePairs: 2
checking fairness: 2
threadA 1 1
threadB 2 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7f9369400120
### Prepare Time: 0.017679 0.000284
AddRWRelations: 2
Add RW: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 1
values: threadA-2 2 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 1
In addRWRelation: threadA-2 1

xxxx read: threadA-2 1 1

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 1

write: threadB-2 1
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 0
Loop depednecy from guarantee: threadB-2
values: main-1 0 1
xxx: threadA-2 1 (or  (and (= 1 0)))
Gurantee end: threadA-3 (or  (and (= 1 0)))
skip write2: threadA-2
skip write1: threadA-3
skip write1: threadB-2
consider write: main-1
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1))))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadA-1 1
In addRWRelation: threadA-1 1

xxxx read: threadA-1 0 1

write: threadA-4 1

write: main-2 0
writeset: 2
skip: threadA-4
values: main-2 0 1
xxx: threadA-1 1 (or )
Identify inconsistency1!
ttt: 
Inconsistency2!
### RWConstraint construct Time: 0.015558 0.000604
Identify inconsistency2!
close z3File!!!!!!!!!!!!!!: 0
### Generate Schedule Time: 0.056838 0.001381
Generating: threadB-1 threadA-4 0 1
checking: read:val threadB-1 1
mhbList: 0
enforce4: 0x7f93694014d0 threadB-2 0 
mhbList: 1
enforce44: 0x7f93694014d0 threadB-2 0 
enforcePairs: 2
checking fairness: 2
threadB 1 1
threadB 2 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7f9369400120
### Prepare Time: 0.017931 0.00026
AddRWRelations: 2
Add RW: threadB-1 1
In addRWRelation: threadB-1 1

xxxx read: threadB-1 0 1

write: threadA-4 1

write: main-2 0
writeset: 2
InputVal2: threadA-4 0
values: threadA-4 1 1

write: threadA-4 1
current orStr: 
For write: threadA-4
Guarantee begin: threadA-4 2
list: threadA-2
list: threadA-4
guarantee: threadA-2 1
In addRWRelation: threadA-2 1

xxxx read: threadA-2 1 1

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 1

write: threadB-2 1
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 1
values: threadA-2 2 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 1
Loop depednecy from guarantee: threadA-2
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and (= 1 0))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Gurantee end: threadB-2 (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
skip write1: threadA-2
skip write3: threadA-3
skip write1: threadB-2
consider write: main-1
values: main-1 0 1
xxx: threadA-2 1 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))
guarantee: threadA-4 0
In addRWRelation: threadA-4 0

xxxx read: threadA-4 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-4 1
list: threadA-2
guarantee: threadA-2 1
Hit Cache2!
Gurantee end: threadA-4 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))
skip: threadA-4
values: main-2 0 0

write: main-2 0
For read: threadA-4
current orStr: 
For write: main-2
skip write1: threadA-4
skip write1: main-2
xxx: threadA-4 0 (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))
Gurantee end: threadA-4 (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))
skip write1: threadA-4
consider write: main-2
values: main-2 0 1
xxx: threadB-1 1 (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))) (= RF_threadB-1_threadA-4 1) (= B_threadA-4_threadB-1 1) (= false (and (= B_main-2_threadA-4 0) (= B_main-2_threadB-1 1)))))
ttt: (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1))))) (or  (and  (and (or  (and  (and (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))) (= RF_threadA-2_threadB-2 1) (= B_threadA-2_threadB-2 0) (= false (and (= B_main-1_threadB-2 0) (= B_main-1_threadA-2 1)))))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))) (= RF_threadB-1_threadA-4 1) (= B_threadA-4_threadB-1 1) (= false (and (= B_main-2_threadA-4 0) (= B_main-2_threadB-1 1)))))
Add RW: threadB-2 0
Hit Cache2!
ttt: (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Adding SW Constraints: 4
End adding SW Constraints!
### RWConstraint construct Time: 0.018668 0.003121
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 521 column 10: model is not available")
end checksat!
### Solver Time2: 0.007704 0.00059
### Generate Solution time: 0.010696 1.7e-05
### Last Part time: 0.019778 0.000803
### Generate Schedule Time: 0.061482 0.004647
Generating: threadB-3 threadA-4 0 1
checking: read:val threadB-3 1
mhbList: 1
enforce: 0x7f93694014d0 threadB-2 0 
enforce4: 0x7f93694014d0 threadB-2 0 
mhbList: 1
enforce44: 0x7f93694014d0 threadB-2 0 
enforcePairs: 2
checking fairness: 2
threadB 2 0
threadB 3 1
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7f9369400120
### Prepare Time: 0.018215 0.000299
AddRWRelations: 2
Add RW: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 1
values: threadA-2 2 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 1
In addRWRelation: threadA-2 1

xxxx read: threadA-2 1 1

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 1

write: threadB-2 1
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 0
Loop depednecy from guarantee: threadB-2
values: main-1 0 1
xxx: threadA-2 1 (or  (and (= 1 0)))
Gurantee end: threadA-3 (or  (and (= 1 0)))
skip write2: threadA-2
skip write1: threadA-3
skip write1: threadB-2
consider write: main-1
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1))))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: threadB-3 1

xxxx read: threadB-3 0 1

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 0
Hit Cache2!
Gurantee end: threadB-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 1

write: threadA-4 1
current orStr: 
For write: threadA-4
Guarantee begin: threadA-4 2
list: threadA-2
list: threadA-4
guarantee: threadA-2 1
Hit Cache2!
guarantee: threadA-4 0
In addRWRelation: threadA-4 0

xxxx read: threadA-4 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-4 1
list: threadA-2
guarantee: threadA-2 1
Hit Cache2!
Gurantee end: threadA-4 (or  (and (= 1 0)))
skip: threadA-4
values: main-2 0 0

write: main-2 0
For read: threadA-4
current orStr: 
For write: main-2
skip write1: threadA-4
skip write1: main-2
xxx: threadA-4 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))
Gurantee end: threadA-4 (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))
skip write1: threadA-4
consider write: main-2
values: main-2 0 1
xxx: threadB-3 1 (or  (and  (and (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))) (= RF_threadB-3_threadA-4 1) (= B_threadA-4_threadB-3 1) (= false (and (= B_main-2_threadA-4 0) (= B_main-2_threadB-3 1)))))
ttt: (or  (and  (and (or  (and (= 1 0))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-4_main-2 1) (= B_main-2_threadA-4 1)))) (= RF_threadB-3_threadA-4 1) (= B_threadA-4_threadB-3 1) (= false (and (= B_main-2_threadA-4 0) (= B_main-2_threadB-3 1)))))
Adding SW Constraints: 4
End adding SW Constraints!
### RWConstraint construct Time: 0.02209 0.003436
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 503 column 10: model is not available")
end checksat!
### Solver Time2: 0.008108 0.000414
### Generate Solution time: 0.010706 1.3e-05
### Last Part time: 0.020412 0.000638
### Generate Schedule Time: 0.066294 0.004815
Generating: threadB-5 main-2 1 0
checking: read:val threadB-5 0
mhbList: 3
enforce: 0x7f9369400c90 threadB-1 0 
enforce: 0x7f93694014d0 threadB-2 0 
enforce: 0x7f9369409760 threadB-3 0 
enforce4: 0x7f93694014d0 threadB-2 0 
mhbList: 1
enforce44: 0x7f93694014d0 threadB-2 0 
enforcePairs: 4
checking fairness: 4
threadB 1 0
threadB 2 0
threadB 3 0
threadB 5 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7f9369400120
### Prepare Time: 0.01848 0.000275
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: threadB-1 0

xxxx read: threadB-1 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-1 0 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 1
values: threadA-2 2 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 1
In addRWRelation: threadA-2 1

xxxx read: threadA-2 1 1

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 1

write: threadB-2 1
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 0
Loop depednecy from guarantee: threadB-2
values: main-1 0 1
xxx: threadA-2 1 (or  (and (= 1 0)))
Gurantee end: threadA-3 (or  (and (= 1 0)))
skip write2: threadA-2
skip write1: threadA-3
skip write1: threadB-2
consider write: main-1
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1))))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: threadB-3 0

xxxx read: threadB-3 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 0
Hit Cache2!
Gurantee end: threadB-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-3 0 (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
Add RW: threadB-5 0
In addRWRelation: threadB-5 0

xxxx read: threadB-5 1 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-5 3
list: threadB-1
list: threadB-2
list: threadB-3
guarantee: threadB-1 0
Hit Cache2!
guarantee: threadB-2 0
Hit Cache2!
guarantee: threadB-3 0
Hit Cache2!
Gurantee end: threadB-5 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1))))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-5 0 (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
ttt: (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
Adding SW Constraints: 5
End adding SW Constraints!
### RWConstraint construct Time: 0.025625 0.003546
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: sat
[Solver] Solution found in 0s:

end checksat!
### Solver Time2: 0.010478 0.002378
Create a Schedule: 0x7f936950a220
Generate new schedule: 0x7f936950a220
### P1 time: 0.000132 5.6e-05
aaa: 1 main*main|0|1 threadA*threadA|6|1
aaa: 1 main*main|0|1 threadA*threadA|10|1
aaa: 1 main*main|0|1 threadA*threadA|19|1
aaa: 1 main*main|0|1 threadA*threadA|22|1
aaa: 1 main*main|0|1 threadA*threadA|0|2
aaa: 1 main*main|0|1 threadB*threadB|43|1
aaa: 1 main*main|0|1 threadB*threadB|47|1
aaa: 1 main*main|0|1 threadB*threadB|63|1
aaa: 1 main*main|0|1 threadB*threadB|0|2
aaa: 1 main*main|0|1 threadB*threadB|63|2
aaa: 1 main*main|0|1 threadB*threadB|0|3
aaa: 1 main*main|88|1 threadA*threadA|6|1
aaa: 1 main*main|88|1 threadA*threadA|10|1
aaa: 1 main*main|88|1 threadA*threadA|19|1
aaa: 1 main*main|88|1 threadA*threadA|22|1
aaa: 1 main*main|88|1 threadA*threadA|0|2
aaa: 1 main*main|88|1 threadB*threadB|43|1
aaa: 1 main*main|88|1 threadB*threadB|47|1
aaa: 1 main*main|88|1 threadB*threadB|63|1
aaa: 1 main*main|88|1 threadB*threadB|0|2
aaa: 1 main*main|88|1 threadB*threadB|63|2
aaa: 1 main*main|88|1 threadB*threadB|0|3
aaa: 1 main*main|93|1 threadA*threadA|6|1
aaa: 1 main*main|93|1 threadA*threadA|10|1
aaa: 1 main*main|93|1 threadA*threadA|19|1
aaa: 1 main*main|93|1 threadA*threadA|22|1
aaa: 1 main*main|93|1 threadA*threadA|0|2
aaa: 1 main*main|93|1 threadB*threadB|43|1
aaa: 1 main*main|93|1 threadB*threadB|47|1
aaa: 1 main*main|93|1 threadB*threadB|63|1
aaa: 1 main*main|93|1 threadB*threadB|0|2
aaa: 1 main*main|93|1 threadB*threadB|63|2
aaa: 1 main*main|93|1 threadB*threadB|0|3
aaa: 1 main*main|0|2 threadA*threadA|6|1
aaa: 1 main*main|0|2 threadA*threadA|10|1
aaa: 1 main*main|0|2 threadA*threadA|19|1
aaa: 1 main*main|0|2 threadA*threadA|22|1
aaa: 1 main*main|0|2 threadA*threadA|0|2
aaa: 1 main*main|0|2 threadB*threadB|43|1
aaa: 1 main*main|0|2 threadB*threadB|47|1
aaa: 1 main*main|0|2 threadB*threadB|63|1
aaa: 1 main*main|0|2 threadB*threadB|0|2
aaa: 1 main*main|0|2 threadB*threadB|63|2
aaa: 1 main*main|0|2 threadB*threadB|0|3
aaa: 1 main*main|0|3 threadB*threadB|43|1
aaa: 1 main*main|0|3 threadB*threadB|47|1
aaa: 1 main*main|0|3 threadB*threadB|63|1
aaa: 1 main*main|0|3 threadB*threadB|0|2
aaa: 1 main*main|0|3 threadB*threadB|63|2
aaa: 1 main*main|0|3 threadB*threadB|0|3
aaa: 0 main*main|0|5 threadA*threadA|0|1
aaa: 0 main*main|0|5 threadA*threadA|6|1
aaa: 0 main*main|0|5 threadA*threadA|10|1
aaa: 0 main*main|0|5 threadA*threadA|19|1
aaa: 0 main*main|0|5 threadA*threadA|22|1
aaa: 0 main*main|0|5 threadA*threadA|0|2
aaa: 0 main*main|0|6 threadA*threadA|0|1
aaa: 0 main*main|0|6 threadA*threadA|6|1
aaa: 0 main*main|0|6 threadA*threadA|10|1
aaa: 0 main*main|0|6 threadA*threadA|19|1
aaa: 0 main*main|0|6 threadA*threadA|22|1
aaa: 0 main*main|0|6 threadA*threadA|0|2
aaa: 0 main*main|0|6 threadB*threadB|0|1
aaa: 0 main*main|0|6 threadB*threadB|43|1
aaa: 0 main*main|0|6 threadB*threadB|47|1
aaa: 0 main*main|0|6 threadB*threadB|63|1
aaa: 0 main*main|0|6 threadB*threadB|0|2
aaa: 0 main*main|0|6 threadB*threadB|63|2
aaa: 0 main*main|0|6 threadB*threadB|0|3
aaa: 1 threadA*threadA|6|1 threadB*threadB|43|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|47|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|63|1
aaa: 1 threadA*threadA|6|1 threadB*threadB|63|2
aaa: 0 threadA*threadA|10|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|10|1 threadB*threadB|47|1
aaa: 1 threadA*threadA|10|1 threadB*threadB|63|1
aaa: 1 threadA*threadA|10|1 threadB*threadB|63|2
aaa: 0 threadA*threadA|19|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|19|1 threadB*threadB|47|1
aaa: 1 threadA*threadA|19|1 threadB*threadB|63|1
aaa: 1 threadA*threadA|19|1 threadB*threadB|63|2
aaa: 0 threadA*threadA|22|1 threadB*threadB|43|1
aaa: 0 threadA*threadA|22|1 threadB*threadB|47|1
aaa: 0 threadA*threadA|22|1 threadB*threadB|63|1
aaa: 0 threadA*threadA|22|1 threadB*threadB|63|2
write: main-2
reachbility list2: 0
RF1: threadA 1 0
write: threadB-2
reachbility list1: 1
RF1: threadA 2 65535
write: main-2
reachbility list2: 0
RF1: threadA 4 65535
write: main-2
reachbility list2: 0
RF: threadB 1 0
write: main-1
reachbility list2: 0
RF: threadB 2 0
write: main-2
reachbility list2: 0
RF: threadB 3 0
write: main-2
reachbility list2: 0
RF: threadB 5 0
write: main-2
reachbility list2: 0
RF1: threadA 1 0
write: threadB-2
reachbility list1: 1
RF1: threadA 2 65535
write: main-2
reachbility list2: 0
RF1: threadA 4 65535
write: main-2
reachbility list2: 0
RF: threadB 1 0
write: main-1
reachbility list2: 0
RF: threadB 2 0
write: main-2
reachbility list2: 0
RF: threadB 3 0
write: main-2
reachbility list2: 0
RF: threadB 5 0
### P2 time: 0.01569 0.005232
### P3 time: 4.4e-05 3e-05
### Generate Solution time: 0.016046 0.005344
### Check redundancy time: 4.1e-05 1.7e-05
### Last Part time: 0.028337 0.007928
### Generate Schedule Time: 0.078476 0.012185
End solver!
### Solver Time: 0.07901 0.035259
buffers: 0x7f9369400ba0 2
delete Buffer: 0x7f9369503580
suc!
delete Buffer: 0x7f9369503830
suc!
buffers: 0x7f9369603e40 2
delete Buffer: 0x7f93694091e0
suc!
delete Buffer: 0x7f9369409370
suc!
buffers: 0x7f936960e200 2
delete Buffer: 0x7f9369500490
suc!
delete Buffer: 0x7f9369408880
suc!
delete curSch1: 0x7f9369407b50
delete curSch2!
### Total Time: 0.096283
BeginFunc: 0x0
BeginFunc: 0x0
Solver path: /Users/yiqiuping/installed/z3/bin/z3
Formula file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
end set parameters!
command: /Users/yiqiuping/installed/z3/bin/z3 -smt2 -in 
Create a Schedule: 0x7f93694013e0
Generate a new Executor: 0x7f93694082f0 0x7f93694013e0
Schedule: 0x7f936960e300 1 -1 4 20 20
For: main 6 main*main|0|5
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|26|1
    threadA 4 threadA*threadA|0|2
    threadA 5 threadA*threadA|26|2
    threadA 6 threadA*threadA|0|3
For: main 7 main*main|0|6
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|26|1
    threadA 4 threadA*threadA|0|2
    threadA 5 threadA*threadA|26|2
    threadA 6 threadA*threadA|0|3
    threadB 0 threadB*threadB|0|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
    threadB 4 threadB*threadB|59|1
    threadB 5 threadB*threadB|0|2
For: threadA 1 threadA*threadA|6|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
For: threadA 2 threadA*threadA|10|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadB 1 threadB*threadB|43|1
For: threadA 3 threadA*threadA|26|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
For: threadA 4 threadA*threadA|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadA 5 threadA*threadA|26|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
For: threadA 6 threadA*threadA|0|3
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadB 1 threadB*threadB|43|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 2 threadB*threadB|47|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadB 1 threadB*threadB|43|1
For: threadB 3 threadB*threadB|56|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadB 1 threadB*threadB|43|1
For: threadB 4 threadB*threadB|59|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|26|1
    threadA 5 threadA*threadA|26|2
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|56|1
For: threadB 5 threadB*threadB|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
Read Map: threadA 1 threadA*threadA|6|1 0
Read Map: threadA 2 threadA*threadA|10|1 0
Read Map: threadA 3 threadA*threadA|26|1 0
Read Map: threadA 5 threadA*threadA|26|2 0
Read Map2: threadB 1 threadB*threadB|43|1 0
Read Map2: threadB 2 threadB*threadB|47|1 65535
Read Map2: threadB 4 threadB*threadB|59|1 65535

Prefix: threadA 5
Prefix Context: threadA*threadA|10|1 0
Prefix Context: threadA*threadA|26|1 0
Prefix Context: threadA*threadA|26|2 0
Prefix Context: threadA*threadA|6|1 0

In checker_thread_begin: 0x7fff72793000
before enter lock: thread create 0x7fff72793000
in thread_begin_action: 0x7f93694082f0 0x7fff72793000 main ~0~~
before addAction lock: 0x7f93694007c0 0x7f9369400fa0
thread: 0x7f93694007c0 0x7f9369400fa0
thread add end: 0x7f93694007c0 0x7f9369400fa0 2 0
enabled threads: 0
In add action: main-0
End add action! main-0
BBB: 0x7f93694082f0 0x7f9369408480 0x7fff72793000

bbbb0: 0x7fff72793000 0x7f93694007c0
BeginFunc: 0x7f93694082f0
checker_addUses: 83 1 82

update load: 83 0
82 0 

checker_addUses: 84 1 83

update load: 84 0
83 0 

checker_addUses: 85 1 82

update load: 85 0
82 0 

checker_addUses: 86 1 85

update load: 86 0
85 0 

checker_addUses: 87 1 86

update load: 87 0
86 0 

checker_addUses: 88 1 87

update load: 88 0
87 0 

In atomic checker_preStore: 0x7f93694008b4 0 7!
In write: 0x7fff72793000 0x7f93694007c0 0x7f93694013e0
Before add action: 0x7f93694007c0 0x7f93694013e0
before addAction lock: 0x7f93694007c0 0x7f93694013e0
thread: 0x7f93694007c0 0x7f93694013e0
thread add end: 0x7f93694007c0 0x7f93694013e0 8 1
enabled threads: 1
0x7fff72793000
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1

set load:  main-1 0

update buf1: 0x7f93694007c0 0x7f93694008b4 0
update buf1 end: 0x7f93694007c0

Write value1: main-1 0x7f93694008b4 0!
checker_addUses: 89 1 86

update load: 89 0
86 0 

checker_addUses: 90 1 82

update load: 90 0
82 0 

checker_addUses: 91 1 90

update load: 91 0
90 0 

checker_addUses: 92 1 91

update load: 92 0
91 0 

checker_addUses: 93 1 92

update load: 93 0
92 0 

In atomic checker_preStore: 0x7f93694008b8 0 7!
In write: 0x7fff72793000 0x7f93694007c0 0x7f9369407f40
Before add action: 0x7f93694007c0 0x7f9369407f40
before addAction lock: 0x7f93694007c0 0x7f9369407f40
thread: 0x7f93694007c0 0x7f9369407f40
thread add end: 0x7f93694007c0 0x7f9369407f40 8 2
enabled threads: 1
0x7fff72793000
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2

set load:  main-2 0

update buf1: 0x7f93694007c0 0x7f93694008b8 0
update buf1 end: 0x7f93694007c0

Write value1: main-2 0x7f93694008b8 0!
checker_addUses: 94 1 91

update load: 94 0
91 0 

checker_addUses: 95 1 82

update load: 95 0
82 0 

checker_addUses: 96 1 78

update load: 96 0
78 0 

checker_addUses: 98 1 78

update load: 98 0
78 0 

BeginFunc: 0x7f93694082f0
BeginFunc: 0x7f93694082f0
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 192 1 191

update load: 192 0
191 0 

checker_addUses: 233 1 232
checker_addUses: 234 1 231
checker_addUses: 235 1 230
checker_addUses: 99 1 79
checker_addUses: 236 1 235

update load: 99 0
79 0 

checker_addUses: 237 2 236
checker_addUses: 101 1 79
checker_addUses: 239 1 238

update load: 101 0
79 0 

BeginFunc: checker_addUses: 240 1 239
0x7f93694082f0
checker_addUses: 241 1 240

In checker_thread_begin: 0x700000081000
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

Waitting for create thread 0x700000081000checker_addUses: 191 1 190


update load: 191 0
190 0 

checker_addUses: 233 1 232
checker_addUses: 192 1 191
checker_addUses: 234 1 231

update load: 192 0
191 0 

checker_addUses: 235 1 230
checker_addUses: 102 1 78
checker_addUses: 236 1 235

update load: 102 0
78 0 

checker_addUses: 103 1 102
checker_addUses: 237 2 236

update load: 103 0
102 0 

checker_addUses: 239 1 238
checker_addUses: 104 1 103
checker_addUses: 240 1 239
Waitting for create thread 0x700000081000

update load: 104 0
103 0 

checker_addUses: 241 1 240

In checker_thread_begin: 0x700000104000

In checker_thread_create: 0x7fff72793000 0x700000081000
before addAction lock: 0x7f93694007c0 0x7f9369400cc0
thread: 0x7f93694007c0 0x7f9369400cc0
thread add end: 0x7f93694007c0 0x7f9369400cc0 1 3
enabled threads: 1
0x7fff72793000
In add action: main-3
End add action! main-3
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000081000
before enter lock: thread create 0x700000081000
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000104000
checker_addUses: 105 1 79
in thread_begin_action: 0x7f93694082f0 0x700000081000 threadA ~1~~

update load: 105 0
79 0 

checker_addUses: 106 1 105
update buf2: 0x7f9369503d50 2

update load: 106 0
105 0 

Waitting for create thread 0x700000104000
before addAction lock: 0x7f9369503d50checker_addUses: 107 1 106
 0x7f9369502550
thread: 0x7f9369503d50 0x7f9369502550
thread add end: 0x7f9369503d50 0x7f9369502550 2 0
enabled threads: 
update load: 107 0
106 0 

1
0x7fff72793000
In add action: threadA-0

In checker_thread_create: 0x7fff72793000 0x700000104000
End add action! threadA-0
BBB: 0x7f93694082f0 0x7f9369408480 0x700000081000

bbbb0: 0x700000081000 0x7f9369503d50
0x7fff72793000 0x700000081000
bbb: 0x7f9369400cc0 0x7f9369502550
Waitting for create thread 0x700000104000
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4
Waitting for create thread 0x700000104000

update load: 5 0
4 0 

checker_addUses: 6 1 5
before addAction lock: 0x7f93694007c0 0x7f9369700b00
thread: 0x7f93694007c0 0x7f9369700b00
thread add end: 
update load: 6 0
5 0 

0x7f93694007c0 0x7f9369700b00 1 In atomic checker_preLoad: 4
enabled threads: 0x7f93694008b8 2
0x700000081000
70x7fff72793000 
6!
In add action: main-4
In read action: 0x700000081000
before addAction lock: 0x7f9369503d50 0x7f9369502fc0
End add action! main-4
thread: 0x7f9369503d50 0x7f9369502fc0
thread add end: 0x7f9369503d50 0x7f9369502fc0 7 1
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadA-1
Tset: 2 2 0x700000081000
0x700000081000 0x7fff72793000 
End add action! threadA-1
loads: 0 1
Waitting for create thread 0x700000104000
set load:  threadA-1 0


before enter lock: thread create 0x700000104000

add load: 6 threadA-1 1
remain: threadB*threadB|43|1
in thread_begin_action: checker_addUses: 108 1 102
0x7f93694082f0 0x700000104000 threadB ~2~~

update load: 108 0
102 0 

update buf2: checker_addUses: 109 1 108
0x7f9369700d90 2

update load: 109 0
108 0 

before addAction lock: 0x7f9369700d90 0x7f9369701180
thread: 0x7f9369700d90 0x7f9369701180
thread add end: 0x7f9369700d90 0x7f9369701180 2 0
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadB-0
End add action! threadB-0
BBB: 0x7f93694082f0 0x7f9369408480 0x700000104000

bbbb0: 0x700000104000 0x7f9369700d90
0x7fff72793000 0x700000081000
0x7fff72793000 0x700000104000
bbb: 0x7f9369700b00 0x7f9369701180
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
remain: threadB*threadB|43|1
checker_addUses: 41 1 40

update load: 41 0
40 0 

waiting read: 0x700000081000 checker_addUses: 42 1 41
threadA-1
in update priority: 0x700000081000

update load: 42 0
41 0 

remain: threadB*threadB|43|1
checker_addUses: 43 1 42
before addAction lock: 0x7f93694007c0 0x7f9369407c50
thread: 0x7f93694007c0 0x7f9369407c50
thread add end: 0x7f93694007c0 0x7f9369407c50 4 
update load: 43 0
42 0 

5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In atomic checker_preLoad: 0x7f93694008b8 7 43!
In add action: main-5
In read action: 0x700000104000
before addAction lock: 0x7f9369700d90 0x7f9369701420
End add action! main-5
thread: 0x7f9369700d90 0x7f9369701420
thread add end: 0x7f9369700d90 0x7f9369701420 7 1
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-1
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-1
loads: 0 1
waiting read: 0x700000081000 threadA-1
in update priority: 0x700000081000
set load:  threadB-1 0



add load: 43 threadB-1 1
In pre_read action: checker_addUses: 110 1 105
threadB-1

update load: 110 0
105 0 

get value: 0x7f93697010f0 0x7f93694008b8 0
current values for: 0x7f93694008b8
checker_addUses: 111 1 110
0 

update load: 111 0
110 0 


Read expect value: threadB-1 0x7f93694008b8 0 0 0
before addAction lock: 0x7f93694007c0 0x7f9369409ad0
thread: 0x7f93694007c0 0x7f9369409ad0
thread add end: 0x7f93694007c0 0x7f9369409ad0 4 6
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: main-6
End add action! main-6
End: 0x700000104000 threadB-1
checker_addUses: 44 1 41

update load: 44 0
41 0 

checker_addUses: 45 1 40

update load: 45 0
40 0 

checker_addUses: 46 1 45

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

In rmw_add: 0x7f93694008b4 1 In pre_read action: 7
checker_addUses: 112 1 79
threadA-1
fetch expect value: 0x7f93694008b8 0

update load: 112 0
79 0 

before fetch: 0x7f93694008b8 0
0 
after fetch: 0x7f93694008b8
0 

Read expect value: threadA-1 0x7f93694008b8 0 0 0
End: 0x700000081000 threadA-1
before addAction lock: 0x7f9369700d90 0x7f93695020d0
thread: 0x7f9369700d90 0x7f93695020d0
checker_addUses: 7 1 4
thread add end: 0x7f9369700d90 0x7f93695020d0 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000

update load: 7 0
4 0 

In add action: threadB-2
checker_addUses: 8 1 3
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 

update load: 8 0
3 0 

End add action! threadB-2
checker_addUses: 9 1 8

update load: 9 0
8 0 


add load: 47 threadB-2 1
loads: 1 2
checker_addUses: 10 1 9

set load:  threadB-2 1
threadB-2 

update load: 10 0
9 0 

remain: threadA*threadA|10|1
In rmw_add: 0x7f93694008b4 1 7
before addAction lock: 0x7f9369503d50 0x7f93697016e0
thread: 0x7f9369503d50 0x7f93697016e0
thread add end: 0x7f9369503d50 0x7f93697016e0 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-2
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-2

add load: 10 threadA-2 1
loads: 1 2

set load:  threadA-2 1
threadA-2 
before fetch: 0x7f93694008b4 0
0 
after fetch: 0x7f93694008b4
0 

expect value rmw_add: threadA 2 0 !1! 10

update buf1: 0x7f9369503d50 0x7f93694008b4 1
update buf1 end: 0x7f9369503d50
update buf1: 0x7f9369700d90 0x7f93694008b4 1
update buf1 end: 0x7f9369700d90
update buf1: 0x7f93694007c0 0x7f93694008b4 1
waiting rmw_add!
update buf1 end: in update priority: 0x700000104000
0x7f93694007c0
checker_addUses: 11 1 8

update load: 11 0
8 0 

checker_addUses: 12 1 3
get value: 0x7f9369701070 0x7f93694008b4 1
current values for: 0x7f93694008b4
0 1 

update load: 12 0
3 0 


expect value rmw_add: threadB 2 1 !1! 47

update buf1: checker_addUses: 13 1 12
0x7f9369503d50 0x7f93694008b4 2
update buf1 end: 0x7f9369503d50

update load: 13 0
12 0 

update buf1: 0x7f9369700d90 0x7f93694008b4 2
update buf1 end: 0x7f9369700d90
update buf1: 0x7f93694007c0 0x7f93694008b4checker_addUses: 14 1 13
 2
update buf1 end: 0x7f93694007c0

update load: 14 0
13 0 

checker_addUses: 15 2 10

update load: 15 1
10 14 0 
threadA-2 
checker_addUses: 16 1 15

update load: 16 1
15 0 
threadA-2 
checker_addUses: 48 1 45
checker_addUses: 25 1 4

update load: 48 0
45 0 


update load: 25 1
4 0 16 29 
threadA-2 
checker_addUses: 49 1 40
checker_addUses: 26 1 25

update load: 49 0
40 0 

checker_addUses: 50 1 49

update load: 26 1
25 0 16 29 
threadA-2 
In atomic checker_preLoad: 0x7f93694008b8 
update load: 50 0
49 0 

7 26!
In read action: 0x700000081000
before addAction lock: 0x7f9369503d50 0x7f936960e690
thread: checker_addUses: 51 1 50
0x7f9369503d50 0x7f936960e690
thread add end: 0x7f9369503d50 0x7f936960e690 7 
update load: 51 0
50 0 

3
enabled threads: 3
0x700000081000
checker_addUses: 52 2 47
0x700000104000
0x7fff72793000
In add action: threadA-3

update load: 52 1
47 51 0 
threadB-2 
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
checker_addUses: 53 1 52
End add action! threadA-3

update load: 53 1
52 0 
threadB-2 
loads: 1 3

set load:  threadA-3 1
threadA-2 
checker_addUses: 55 1 45

add load: 26 threadA-3 1
remain: threadB*threadB|56|1

update load: 55 1
45 0 53 
threadB-2 
checker_addUses: 56 1 55

update load: 56 1
55 0 53 
threadB-2 
In atomic checker_preStore: 0x7f93694008b4 0 7!
In write: 0x700000104000 0x7f9369700d90 0x7f9369408c20
Before add action: 0x7f9369700d90 0x7f9369408c20
before addAction lock: 0x7f9369700d90 0x7f9369408c20
thread: 0x7f9369700d90 0x7f9369408c20
thread add end: 0x7f9369700d90 0x7f9369408c20 8 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-3
End add action! threadB-3
action: threadB-3
loads: 1 3

set load:  threadB-3 1
threadB-2 
update buf1: 0x7f9369503d50 0x7f93694008b4 0
update buf1 end: 0x7f9369503d50
update buf1: 0x7f9369700d90 0x7f93694008b4 0
update buf1 end: 0x7f9369700d90
update buf1: 0x7f93694007c0 0x7f93694008b4 0
update buf1 end: 0x7f93694007c0

Write value1: threadB-3 0x7f93694008b4 0!
waiting read: 0x700000081000 threadA-3
in update priority: 0x700000081000
checker_addUses: 57 1 45

update load: 57 1
45 0 53 
threadB-2 
In pre_read action: threadA-3
fetch expect value: checker_addUses: 58 1 41
0x7f93694008b8 0

update load: 58 1
41 0 53 
threadB-2 
before fetch: 0x7f93694008b8 0
0 
after fetch: 0x7f93694008b8
0 
checker_addUses: 59 1 58

Read expect value: threadA-3 0x7f93694008b8 0 0 0

update load: 59 1
58 0 53 
threadB-2 
In rmw_add: 0x7f93694008b8 1 7
End: 0x700000081000 threadA-3
before addAction lock: 0x7f9369700d90 0x7f9369400260
thread: 0x7f9369700d90 0x7f9369400260
thread add end: checker_addUses: 27 1 4
0x7f9369700d90 0x7f9369400260 11 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-4

update load: 27 1
4 0 16 29 
threadA-2 
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
checker_addUses: 28 2 26
End add action! threadB-4

add load: 59 threadB-4 1
loads: 2 4

update load: 28 3
26 6 0 16 29 
threadA-1 threadA-3 threadA-2 

set load:  threadB-4 2
threadB-4 threadB-2 
checker_addUses: 29 1 28
remain: threadA*threadA|26|2

update load: 29 3
28 0 16 29 
threadA-1 threadA-3 threadA-2 
In thread_yield_action!
Begin thread yield!
In thread yield!
before addAction lock: 0x7f9369503d50 0x7f9369701e30
thread: 0x7f9369503d50 0x7f9369701e30
thread add end: 0x7f9369503d50 0x7f9369701e30 3 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-4
End add action! threadA-4
End thread yield!
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
waiting rmw_add!
in update priority: 0x700000104000
remain: threadA*threadA|26|2
checker_addUses: 25 1 4

update load: 25 3
4 0 16 29 
threadA-1 threadA-3 threadA-2 
checker_addUses: 26 1 25

update load: 26 3
25 0 16 29 
threadA-1 threadA-3 threadA-2 
In atomic checker_preLoad: 0x7f93694008b8 7 26!
In read action: 0x700000081000
before addAction lock: 0x7f9369503d50 waiting rmw_add!
0x7f9369400640
thread: in update priority: 0x7f9369503d500x700000104000 
0x7f9369400640
thread add end: 0x7f9369503d50 0x7f9369400640 7 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-5
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-5
loads: 3 5

set load:  threadA-5 3
threadA-1 threadA-3 threadA-2 

add load: 26 threadA-5 1
In pre_read action: threadA-5
fetch expect value: 0x7f93694008b8 0
before fetch: 0x7f93694008b8 0
0 
after fetch: 0x7f93694008b8
0 

Read expect value: threadA-5 0x7f93694008b8 0 0 0
End: 0x700000081000 threadA-5
checker_addUses: 27 1 4
get value: 0x7f93697010f0 0x7f93694008b8 0
current values for: 0x7f93694008b8
0 

update load: 27 3
4 0 16 29 
threadA-1 threadA-3 threadA-2 

expect value rmw_add: threadB 4 0 !1! 59

update buf1: 0x7f9369503d50 0x7f93694008b8 1
update buf1 end: 0x7f9369503d50
checker_addUses: 28 2 26
update buf1: 0x7f9369700d90 0x7f93694008b8 1
update buf1 end: 0x7f9369700d90
update buf1: 0x7f93694007c0 0x7f93694008b8 1
update buf1 end: 0x7f93694007c0

update load: 28 4
26 6 0 16 29 
threadA-5 threadA-1 threadA-3 threadA-2 
checker_addUses: 29 1 28
checker_addUses: 60 1 41

update load: 29 4
28 0 16 29 
threadA-5 threadA-1 threadA-3 threadA-2 

update load: 60 1
41 0 53 
threadB-2 
In thread_yield_action!
checker_addUses: 75 1 74
Begin thread yield!
In thread yield!
before addAction lock: 0x7f9369503d50 0x7f93697021f0
thread: 0x7f9369503d50 0x7f93697021f0
thread add end: 0x7f9369503d50 0x7f93697021f0
update load: 75 1
74 0 53 
threadB-2 
 var = 1
3In checker_thread_end
 Thread_end_action: 60x700000104000

enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-6
add prio: 0x700000081000 0x700000104000
add prio: 0x700000081000 0x7fff72793000
End add action! threadA-6
End thread yield!
before addAction lock: 0x7f9369700d90 0x7f936960eb30
thread: 0x7f9369700d90 0x7f936960eb30
thread add end: 0x7f9369700d90 0x7f936960eb30 5 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
erase enabledThreads: threadB-5
erase prio: 0x700000081000 0x700000104000
In add action: threadB-5
End add action! threadB-5
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f93694082f0
checker_addUses: 113 1 78

update load: 113 0
78 0 

checker_addUses: 25 1 4

update load: 25 4
4 0 16 29 
threadA-5 threadA-1 threadA-3 threadA-2 
checker_addUses: 26 1 25

update load: 26 4
25 0 16 29 
threadA-5 threadA-1 threadA-3 threadA-2 
In atomic checker_preLoad: 0x7f93694008b8 7 26!
In read action: 0x700000081000
before addAction lock: 0x7f9369503d50 0x7f9369400120
thread: 0x7f9369503d50 0x7f9369400120
thread add end: 0x7f9369503d50 0x7f9369400120 7 7
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadA-7
0x700000081000
0x7fff72793000 
Tset: 1 2 0x700000081000
0x7fff72793000 
End add action! threadA-7
loads: 4 7

set load:  threadA-7 4
threadA-5 threadA-1 threadA-3 threadA-2 

add load: 26 threadA-7 1
In pre_read action: threadA-7
get value: 0x7f936950a3f0 0x7f93694008b8 1
current values for: 0x7f93694008b8
0 1 

Read expect value: threadA-7 0x7f93694008b8 1 1 1
End: 0x700000081000 threadA-7
checker_addUses: 27 1 4

update load: 27 4
4 0 16 29 
threadA-5 threadA-1 threadA-3 threadA-2 
checker_addUses: 28 2 26

update load: 28 5
26 6 0 16 29 
threadA-7 threadA-5 threadA-1 threadA-3 threadA-2 
checker_addUses: 29 1 28

update load: 29 5
28 0 16 29 
threadA-7 threadA-5 threadA-1 threadA-3 threadA-2 
In checker_thread_end
Thread_end_action: 0x700000081000
before addAction lock: 0x7f9369503d50 0x7f9369400500
thread: 0x7f9369503d50 0x7f9369400500
thread add end: 0x7f9369503d50 0x7f9369400500 5 8
enabled threads: 2
0x700000081000
0x7fff72793000
erase enabledThreads: threadA-8
In add action: threadA-8
End add action! threadA-8
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f93694082f0
In checker_thread_end
Thread_end_action: 0x7fff72793000
before addAction lock: 0x7f93694007c0 0x7f93694005a0
thread: 0x7f93694007c0 0x7f93694005a0
thread add end: 0x7f93694007c0 0x7f93694005a0 5 7
enabled threads: 1
0x7fff72793000
erase enabledThreads: main-7
erase prio: 0x700000081000 0x7fff72793000
In add action: main-7
End add action! main-7
### Execute Time: 0.107006 0.026574 0.010665
Current Trace: 3
threadA*threadA|6|1 threadA-1 r 0 6
threadA*threadA|10|1 threadA-2 rmw 0 1 10
threadA*threadA|26|1 threadA-3 r 0 26
threadA*threadA|26|2 threadA-5 r 0 26
threadA*threadA|26|3 threadA-7 r 1 26
iiiii: 0x7f9369503d50 4
xx: 2 1
yy: threadA-2
xx: 3 1
yy: threadA-2
xx: 5 3
yy: threadA-1
yy: threadA-3
yy: threadA-2
xx: 7 4
yy: threadA-5
yy: threadA-1
yy: threadA-3
yy: threadA-2
threadB*threadB|43|1 threadB-1 r 0 43
threadB*threadB|47|1 threadB-2 rmw 1 2 47
threadB*threadB|56|1 threadB-3 w 0 56
threadB*threadB|59|1 threadB-4 rmw 0 1 59
iiiii: 0x7f9369700d90 3
xx: 2 1
yy: threadB-2
xx: 3 1
yy: threadB-2
xx: 4 2
yy: threadB-4
yy: threadB-2
main*main|88|1 main-1 w 0 88
main*main|93|1 main-2 w 0 93
iiiii: 0x7f93694007c0 0
Generating: threadB-2 threadB-3 1 0
checking: read:val threadB-2 0
mhbList: 1
enforce: 0x7f93695020d0 threadB-2 0 
enforce4: 0x7f93697016e0 threadA-2 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f936960e690 threadA-3 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369400640 threadA-5 0 
mhbList: 3
enforce44: 0x7f9369502fc0 threadA-1 0 
enforce44: 0x7f936960e690 threadA-3 0 
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369502fc0 threadA-1 0 
mhbList: 0
enforcePairs: 5
checking fairness: 5
threadA 1 0
threadA 2 0
threadA 3 0
threadA 5 0
threadB 2 0
SKIP: 0
### Generate Schedule Time: 0.078732 0.000263
Generating: threadA-7 main-2 1 0
checking: read:val threadA-7 0
mhbList: 4
enforce: 0x7f9369400640 threadA-5 0 
enforce: 0x7f9369502fc0 threadA-1 0 
enforce: 0x7f936960e690 threadA-3 0 
enforce: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f93697016e0 threadA-2 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f936960e690 threadA-3 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369400640 threadA-5 0 
mhbList: 3
enforce44: 0x7f9369502fc0 threadA-1 0 
enforce44: 0x7f936960e690 threadA-3 0 
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369502fc0 threadA-1 0 
mhbList: 0
enforcePairs: 5
checking fairness: 5
threadA 1 0
threadA 2 0
threadA 3 0
threadA 5 0
threadA 7 0
Identify an unfair schedule!
### Generate Schedule Time: 0.078951 0.000225
Generating: threadB-1 threadB-4 0 1
checking: read:val threadB-1 1
mhbList: 0
enforce4: 0x7f93697016e0 threadA-2 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f936960e690 threadA-3 0 
mhbList: 1
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369400640 threadA-5 0 
mhbList: 3
enforce44: 0x7f9369502fc0 threadA-1 0 
enforce44: 0x7f936960e690 threadA-3 0 
enforce44: 0x7f93697016e0 threadA-2 0 
enforce4: 0x7f9369502fc0 threadA-1 0 
mhbList: 0
enforcePairs: 5
checking fairness: 5
threadA 1 0
threadA 2 0
threadA 3 0
threadA 5 0
threadB 1 1
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f93694082f0
Adding Binary HB constraints: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f93694082f0
### Basic Prepare Time: 0.003913 0.00154
### MO Prepare Time: 0.001403 0.00031
Adding sc constraints: 11
### SC Prepare Time: 0.006496 0.002291
In addLockConstraints: 0
prefix size: 0
### Part1 Time: 0.006424 0.002054
reads & writes: 2 4
reads & writes: 6 2
### Part2 Time: 0.003999 0.001476
### Consistent Prepare Time: 0.010615 0.003548
### Prepare Time: 0.026552 0.00808
AddRWRelations: 5
Add RW: threadA-5 0
In addRWRelation: threadA-5 0

xxxx read: threadA-5 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-5 3
list: threadA-1
list: threadA-3
list: threadA-2
guarantee: threadA-1 0
In addRWRelation: threadA-1 0

xxxx read: threadA-1 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-1 0 (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0)))))
guarantee: threadA-3 0
In addRWRelation: threadA-3 0

xxxx read: threadA-3 0 0

write: threadB-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 0 0

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
InputVal2: threadB-2 1
values: threadB-2 2 0
values: threadB-3 0 0

write: threadB-3 0
For read: threadA-2
current orStr: 
For write: threadB-3
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 1
In addRWRelation: threadB-2 1

xxxx read: threadB-2 1 1

write: threadA-2 1

write: threadB-2 2

write: threadB-3 0

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 0
values: threadA-2 1 1

write: threadA-2 1
For read: threadB-2
current orStr: 
For write: threadA-2
Guarantee begin: threadA-2 1
list: threadA-2
guarantee: threadA-2 0
Loop depednecy from guarantee: threadA-2
skip: threadB-2
skip: threadB-3
values: main-1 0 1
xxx: threadB-2 1 (or  (and (= 1 0)))
Gurantee end: threadB-3 (or  (and (= 1 0)))
skip write1: threadA-2
skip write2: threadB-2
skip write1: threadB-3
consider write: main-1
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1))))
For write: main-1
skip write1: threadA-2
consider write: threadB-2
consider write: threadB-3
skip write1: main-1
xxx: threadA-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
Gurantee end: threadA-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-3 0 (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0)))))
guarantee: threadA-2 0
Hit Cache2!
Gurantee end: threadA-5 (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0))))) (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0))))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_main-1_threadB-3 0) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0))) (= false (and (= B_main-1_threadB-3 1) (= B_threadA-2_threadB-3 0)))))
InputVal2: threadB-4 0
values: threadB-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadB-4
skip write1: main-2
xxx: threadA-5 0 (or  (and  (= RF_threadA-5_main-2 1) (= B_main-2_threadA-5 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-5_threadB-4 0)))))
ttt: (or  (and  (= RF_threadA-5_main-2 1) (= B_main-2_threadA-5 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-5_threadB-4 0)))))
Add RW: threadA-1 0
Hit Cache2!
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_main-2_threadA-1 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-1_threadB-4 0)))))
Add RW: threadA-3 0
Hit Cache2!
ttt: (or  (and  (= RF_threadA-3_main-2 1) (= B_main-2_threadA-3 1) (= false (and (= B_main-2_threadB-4 1) (= B_threadA-3_threadB-4 0)))))
Add RW: threadB-1 1
In addRWRelation: threadB-1 1

xxxx read: threadB-1 0 1

write: threadB-4 1

write: main-2 0
writeset: 2
skip: threadB-4
values: main-2 0 1
xxx: threadB-1 1 (or )
Identify inconsistency1!
ttt: 
Inconsistency2!
### RWConstraint construct Time: 0.027148 0.001532
Identify inconsistency2!
close z3File!!!!!!!!!!!!!!: 0
### Generate Schedule Time: 0.089222 0.010278
End solver!
### Solver Time: 0.089962 0.010993
buffers: 0x7f9369503d50 2
delete Buffer: 0x7f93695027d0
suc!
delete Buffer: 0x7f936950a3f0
suc!
buffers: 0x7f9369700d90 2
delete Buffer: 0x7f9369701070
suc!
delete Buffer: 0x7f93697010f0
suc!
buffers: 0x7f93694007c0 2
delete Buffer: 0x7f93694014a0
suc!
delete Buffer: 0x7f9369408000
suc!
delete curSch1: 0x7f936960e300
delete curSch2!
### Total Time: 0.118482
BeginFunc: 0x0
BeginFunc: 0x0
Solver path: /Users/yiqiuping/installed/z3/bin/z3
Formula file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
end set parameters!
command: /Users/yiqiuping/installed/z3/bin/z3 -smt2 -in 
Create a Schedule: 0x7f9369610f10
Generate a new Executor: 0x7f936960af10 0x7f9369610f10
Schedule: 0x7f936950a220 2 0 5 20 20
For: main 6 main*main|0|5
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|19|1
    threadA 4 threadA*threadA|22|1
    threadA 5 threadA*threadA|0|2
For: main 7 main*main|0|6
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 0 threadA*threadA|0|1
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|19|1
    threadA 4 threadA*threadA|22|1
    threadA 5 threadA*threadA|0|2
    threadB 0 threadB*threadB|0|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|63|1
    threadB 4 threadB*threadB|0|2
    threadB 5 threadB*threadB|63|2
    threadB 6 threadB*threadB|0|3
For: threadA 1 threadA*threadA|6|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadA 2 threadA*threadA|10|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
For: threadA 3 threadA*threadA|19|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
For: threadA 4 threadA*threadA|22|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|19|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
    threadB 3 threadB*threadB|63|1
    threadB 5 threadB*threadB|63|2
For: threadA 5 threadA*threadA|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
For: threadB 1 threadB*threadB|43|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
For: threadB 2 threadB*threadB|47|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
For: threadB 3 threadB*threadB|63|1
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|19|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
For: threadB 4 threadB*threadB|0|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
For: threadB 5 threadB*threadB|63|2
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
    threadA 1 threadA*threadA|6|1
    threadA 2 threadA*threadA|10|1
    threadA 3 threadA*threadA|19|1
    threadB 1 threadB*threadB|43|1
    threadB 2 threadB*threadB|47|1
For: threadB 6 threadB*threadB|0|3
    main 0 main*main|0|1
    main 1 main*main|88|1
    main 2 main*main|93|1
    main 3 main*main|0|2
    main 4 main*main|0|3
Read Map: threadB 1 threadB*threadB|43|1 0
Read Map: threadB 2 threadB*threadB|47|1 0
Read Map: threadB 3 threadB*threadB|63|1 0
Read Map: threadB 4 threadB*threadB|59|1 0
Read Map: threadB 5 threadB*threadB|63|2 0
Read Map2: threadA 1 threadA*threadA|6|1 0
Read Map2: threadA 2 threadA*threadA|10|1 65535
Read Map2: threadA 4 threadA*threadA|22|1 65535

Prefix: threadB 5
Prefix Context: threadB*threadB|43|1 0
Prefix Context: threadB*threadB|47|1 0
Prefix Context: threadB*threadB|63|1 0
Prefix Context: threadB*threadB|63|2 0

In checker_thread_begin: 0x7fff72793000
before enter lock: thread create 0x7fff72793000
in thread_begin_action: 0x7f936960af10 0x7fff72793000 main ~0~~
before addAction lock: 0x7f9369610c90 0x7f93696031f0
thread: 0x7f9369610c90 0x7f93696031f0
thread add end: 0x7f9369610c90 0x7f93696031f0 2 0
enabled threads: 0
In add action: main-0
End add action! main-0
BBB: 0x7f936960af10 0x7f936960b0a0 0x7fff72793000

bbbb0: 0x7fff72793000 0x7f9369610c90
BeginFunc: 0x7f936960af10
checker_addUses: 83 1 82

update load: 83 0
82 0 

checker_addUses: 84 1 83

update load: 84 0
83 0 

checker_addUses: 85 1 82

update load: 85 0
82 0 

checker_addUses: 86 1 85

update load: 86 0
85 0 

checker_addUses: 87 1 86

update load: 87 0
86 0 

checker_addUses: 88 1 87

update load: 88 0
87 0 

In atomic checker_preStore: 0x7f9369610d84 0 7!
In write: 0x7fff72793000 0x7f9369610c90 0x7f9369603540
Before add action: 0x7f9369610c90 0x7f9369603540
before addAction lock: 0x7f9369610c90 0x7f9369603540
thread: 0x7f9369610c90 0x7f9369603540
thread add end: 0x7f9369610c90 0x7f9369603540 8 1
enabled threads: 1
0x7fff72793000
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1

set load:  main-1 0

update buf1: 0x7f9369610c90 0x7f9369610d84 0
update buf1 end: 0x7f9369610c90

Write value1: main-1 0x7f9369610d84 0!
checker_addUses: 89 1 86

update load: 89 0
86 0 

checker_addUses: 90 1 82

update load: 90 0
82 0 

checker_addUses: 91 1 90

update load: 91 0
90 0 

checker_addUses: 92 1 91

update load: 92 0
91 0 

checker_addUses: 93 1 92

update load: 93 0
92 0 

In atomic checker_preStore: 0x7f9369610d88 0 7!
In write: 0x7fff72793000 0x7f9369610c90 0x7f936960b740
Before add action: 0x7f9369610c90 0x7f936960b740
before addAction lock: 0x7f9369610c90 0x7f936960b740
thread: 0x7f9369610c90 0x7f936960b740
thread add end: 0x7f9369610c90 0x7f936960b740 8 2
enabled threads: 1
0x7fff72793000
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2

set load:  main-2 0

update buf1: 0x7f9369610c90 0x7f9369610d88 0
update buf1 end: 0x7f9369610c90

Write value1: main-2 0x7f9369610d88 0!
checker_addUses: 94 1 91

update load: 94 0
91 0 

checker_addUses: 95 1 82

update load: 95 0
82 0 

checker_addUses: 96 1 78

update load: 96 0
78 0 

checker_addUses: 98 1 78

update load: 98 0
78 0 

BeginFunc: 0x7f936960af10
BeginFunc: 0x7f936960af10
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 192 1 191
checker_addUses: 233 1 232

update load: 192 0
191 0 

checker_addUses: 234 1 231
checker_addUses: 235 1 230
checker_addUses: 236 1 235
checker_addUses: 99 1 79
checker_addUses: 237 2 236

update load: 99 0
79 0 

checker_addUses: 239 1 238
checker_addUses: 101 1 79
checker_addUses: 240 1 239

update load: 101 0
79 0 

checker_addUses: 241 1 240
BeginFunc: 0x7f936960af10

In checker_thread_begin: 0x700000081000
checker_addUses: 179 1 178

update load: 179 0
178 0 

checker_addUses: 180 1 179

update load: 180 0
179 0 

checker_addUses: 182 1 178

update load: 182 0
178 0 

checker_addUses: 184 1 181

update load: 184 0
181 0 

checker_addUses: 185 2 182

update load: 185 0
182 184 0 

checker_addUses: 186 1 181

update load: 186 0
181 0 

checker_addUses: 187 1 186
Waitting for create thread 0x700000081000

update load: 187 0
186 0 

checker_addUses: 188 2 183

update load: 188 0
183 187 0 

checker_addUses: 190 2 189

update load: 190 0
189 181 0 

checker_addUses: 191 1 190

update load: 191 0
190 0 

checker_addUses: 233 1 232
checker_addUses: 192 1 191
checker_addUses: 234 1 231

update load: 192 0
191 0 

checker_addUses: 235 1 230
checker_addUses: 102 1 78
Waitting for create thread checker_addUses: 236 1 235
0x700000081000

update load: 102 0
78 0 

checker_addUses: 237 2 236
checker_addUses: 103 1 102
checker_addUses: 239 1 238
checker_addUses: 240 1 239

update load: 103 0
102 0 

checker_addUses: 241 1 240
checker_addUses: 104 1 103

In checker_thread_begin: 0x700000104000

update load: 104 0
103 0 


In checker_thread_create: 0x7fff72793000 0x700000081000
before addAction lock: 0x7f9369610c90 0x7f93695005a0
thread: 0x7f9369610c90 0x7f93695005a0
thread add end: 0x7f9369610c90 0x7f93695005a0 1 3
enabled threads: 1
0x7fff72793000
In add action: main-3
End add action! main-3
Waitting for create thread 0x700000081000
before enter lock: thread create 0x700000081000
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000104000
checker_addUses: 105 1 79
in thread_begin_action: 0x7f936960af10 0x700000081000 threadA ~1~~

update load: 105 0
79 0 

update buf2: 0x7f936960be60 checker_addUses: 106 1 105
2

update load: 106 0
105 0 

before addAction lock: 0x7f936960be60 0x7f936960c240
thread: 0x7f936960be60 0x7f936960c240
thread add end: 0x7f936960be60 0x7f936960c240 checker_addUses: 107 1 106
2 0
enabled threads: 1
0x7fff72793000

update load: 107 0
106 0 

In add action: threadA-0

In checker_thread_create: 0x7fff72793000 0x700000104000
End add action! threadA-0
BBB: 0x7f936960af10 0x7f936960b0a0 0x700000081000

bbbb0: 0x700000081000 0x7f936960be60
0x7fff72793000 0x700000081000
bbb: 0x7f93695005a0 0x7f936960c240
Waitting for create thread 0x700000104000
Waitting for create thread 0x700000104000
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7f9369610d88 7 6!
In read action: 0x700000081000
before addAction lock: 0x7f936960be60 0x7f936960c4d0
thread: 0x7f936960be60 0x7f936960c4d0
thread add end: 0x7f936960be60 0x7f936960c4d0 7 1
enabled threads: 2
0x700000081000
0x7fff72793000
In add action: threadA-1
Tset: 2 2 0x700000081000
0x700000081000 0x7fff72793000 
End add action! threadA-1
loads: 0 1

set load:  threadA-1 0

Waitting for create thread 0x700000104000

add load: 6 threadA-1 1
In pre_read action: before addAction lock: threadA-1
0x7f9369610c90 0x7f9369500710
thread: 0x7f9369610c90 0x7f9369500710
thread add end: 0x7f9369610c90 0x7f9369500710 1 4
enabled threads: 2
0x700000081000
0x7fff72793000
get value: 0x7f936960c1c0 0x7f9369610d88 0
current values for: 0x7f9369610d88In add action: main-4

0 
End add action! main-4

Read expect value: threadA-1 0x7f9369610d88 0 0 0
Waitting for create thread 0x700000104000
before enter lock: thread create 0x700000104000
checker_addUses: 108 1 102

update load: 108 0
102 0 

checker_addUses: 109 1 108

update load: 109 0
108 0 

in thread_begin_action: 0x7f936960af10 0x700000104000 threadB ~2~~
update buf2: 0x7f9369500930 2
End: 0x700000081000 threadA-1
before addAction lock: 0x7f9369500930 0x7f9369500d10
thread: 0x7f9369500930 0x7f9369500d10
thread add end: 0x7f9369500930 0x7f9369500d10 checker_addUses: 7 1 4
2 0
enabled threads: 2
0x700000081000
0x7fff72793000

update load: 7 0
4 0 

In add action: threadB-0
checker_addUses: 8 1 3
End add action! threadB-0

update load: 8 0
3 0 

BBB: 0x7f936960af10 0x7f936960b0a0 0x700000104000

bbbb0: 0x700000104000 0x7f9369500930
0x7fff72793000 0x700000081000
0x7fff72793000 0x700000104000
bbb: 0x7f9369500710 0x7f9369500d10
checker_addUses: 9 1 8

update load: 9 0
8 0 

checker_addUses: 10 1 9

update load: 10 0
9 0 

In rmw_add: 0x7f9369610d84 1 7
before addAction lock: 0x7f936960be60 0x7f936960c800
thread: 0x7f936960be60 0x7f936960c800
thread add end: 0x7f936960be60 0x7f936960c800 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-2
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadA-2

add load: 10 threadA-2 1
loads: 1 2

set load:  threadA-2 1
threadA-2 
remain: threadB*threadB|43|1
remain: threadB*threadB|47|1
checker_addUses: 41 1 40
before addAction lock: 0x7f9369610c90 0x7f936960c960
thread: 
update load: 41 0
40 0 

0x7f9369610c90 0x7f936960c960
thread add end: 0x7f9369610c90 0x7f936960c960 4 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
checker_addUses: 42 1 41
In add action: main-5

update load: 42 0
41 0 

End add action! main-5
checker_addUses: 43 1 42

update load: 43 0
42 0 

In atomic checker_preLoad: 0x7f9369610d88 7 43!
In read action: 0x700000104000
before addAction lock: 0x7f9369500930 0x7f93694054f0
thread: 0x7f9369500930 0x7f93694054f0waiting rmw_add!

in update priority: thread add end: 0x7000000810000x7f9369500930
 0x7f93694054f0 7 1
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-1
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-1
loads: 0 1

set load:  threadB-1 0


add load: 43 threadB-1 1
In pre_read action: checker_addUses: 110 1 105
threadB-1
fetch expect value: 0x7f9369610d88 0

update load: 110 0
105 0 

checker_addUses: 111 1 110
before fetch: 0x7f9369610d88 0
0 
after fetch: 0x7f9369610d88
0 

update load: 111 0
110 0 


Read expect value: threadB-1 0x7f9369610d88 0 0 0
before addAction lock: 0x7f9369610c90 0x7f936960cbf0
thread: 0x7f9369610c90 0x7f936960cbf0
thread add end: 0x7f9369610c90 0x7f936960cbf0 4 6
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: main-6
End add action! main-6
End: 0x700000104000 threadB-1
checker_addUses: 44 1 41

update load: 44 0
41 0 

checker_addUses: 45 1 40
remain: threadB*threadB|47|1

update load: 45 0
40 0 

checker_addUses: 46 1 45

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

In rmw_add: 0x7f9369610d84 1 7
before addAction lock: 0x7f9369500930 0x7f9369501040
thread: 0x7f9369500930 0x7f9369501040
thread add end: 0x7f9369500930 0x7f9369501040 11 2
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
checker_addUses: 112 1 79
In add action: threadB-2

update load: 112 0
79 0 

Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
End add action! threadB-2
waiting rmw_add!
in update priority: 0x700000081000

add load: 47 threadB-2 1
loads: 1 2

set load:  threadB-2 1
threadB-2 
before fetch: 0x7f9369610d84 0
0 
after fetch: 0x7f9369610d84
0 

expect value rmw_add: threadB 2 0 !1! 47

update buf1: 0x7f936960be60 0x7f9369610d84 1
update buf1 end: 0x7f936960be60
update buf1: 0x7f9369500930 0x7f9369610d84 1
update buf1 end: 0x7f9369500930
update buf1: 0x7f9369610c90 0x7f9369610d84 1
update buf1 end: 0x7f9369610c90
checker_addUses: 48 1 45

update load: 48 0
45 0 

checker_addUses: 49 1 40

update load: 49 0
40 0 

checker_addUses: 50 1 49

update load: 50 0
49 0 

checker_addUses: 51 1 50

update load: 51 0
50 0 

checker_addUses: 52 2 47
get value: 0x7f936960c140 0x7f9369610d84 1
current values for: 0x7f9369610d84
0 1 

update load: 52 1
47 51 0 
threadB-2 

expect value rmw_add: threadA 2 1 !1! 10

update buf1: 0x7f936960be60 0x7f9369610d84 2checker_addUses: 53 1 52

update buf1 end: 0x7f936960be60
update buf1: 0x7f9369500930 0x7f9369610d84 2
update buf1 end: 0x7f9369500930
update buf1: 0x7f9369610c90 0x7f9369610d84 2

update load: 53 1
52 0 
threadB-2 
update buf1 end: 0x7f9369610c90
checker_addUses: 62 1 41

update load: 62 1
41 0 53 66 
threadB-2 
checker_addUses: 63 1 62

update load: 63 1
62 0 53 66 
threadB-2 
In atomic checker_preLoad: 0x7f9369610d88 7 63!
In read action: 0x700000104000
before addAction lock: 0x7f9369500930 0x7f93695011c0
thread: 0x7f9369500930 0x7f93695011c0
checker_addUses: 11 1 8
thread add end: 0x7f9369500930 0x7f93695011c0 7 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000

update load: 11 0
8 0 

In add action: threadB-3
checker_addUses: 12 1 3
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 

update load: 12 0
3 0 

End add action! threadB-3
checker_addUses: 13 1 12
loads: 1 3

update load: 13 0
12 0 


set load:  threadB-3 1
threadB-2 
checker_addUses: 14 1 13

add load: 63 threadB-3 1

update load: 14 0
13 0 

remain: checker_addUses: 15 2 10
threadA*threadA|19|1

update load: 15 1
10 14 0 
threadA-2 
checker_addUses: 16 1 15

update load: 16 1
15 0 
threadA-2 
checker_addUses: 18 1 8

update load: 18 1
8 0 16 
threadA-2 
checker_addUses: 19 1 18

update load: 19 1
18 0 16 
threadA-2 
In atomic checker_preStore: 0x7f9369610d84 0 7!
In write: 0x700000081000 0x7f936960be60 0x7f9369501570
Before add action: 0x7f936960be60 0x7f9369501570
before addAction lock: 0x7f936960be60 0x7f9369501570
thread: 0x7f936960be60 0x7f9369501570
thread add end: 0x7f936960be60 0x7f9369501570 8 3
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-3
waiting read: 0x700000104000 End add action! threadA-3
threadB-3
action: in update priority: 0x700000104000
threadA-3
loads: 1 3

set load:  threadA-3 1
threadA-2 
update buf1: 0x7f936960be60 0x7f9369610d84 0
update buf1 end: 0x7f936960be60
update buf1: 0x7f9369500930 0x7f9369610d84 0
update buf1 end: 0x7f9369500930
update buf1: 0x7f9369610c90 0x7f9369610d84 0
update buf1 end: 0x7f9369610c90

Write value1: threadA-3 0x7f9369610d84 0!
checker_addUses: 20 1 8
In pre_read action: threadB-3
fetch expect value: 0x7f9369610d88 0

update load: 20 1
8 0 16 
threadA-2 
checker_addUses: 21 1 4
before fetch: 0x7f9369610d88 0
0 
after fetch: 0x7f9369610d88
0 

update load: 21 1
4 0 16 
threadA-2 

Read expect value: threadB-3 0x7f9369610d88 0 0 0
checker_addUses: 22 1 21

update load: 22 1
21 0 16 
threadA-2 
In rmw_add: 0x7f9369610d88 1 7
End: 0x700000104000 threadB-3
before addAction lock: 0x7f936960be60 0x7f9369501880
thread: 0x7f936960be60 0x7f9369501880
checker_addUses: 64 1 41
thread add end: 0x7f936960be60 0x7f9369501880 11 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadA-4

update load: 64 1
41 0 53 66 
threadB-2 
Tset: 3 3 0x700000081000
0x700000081000 0x700000104000 0x7fff72793000 
checker_addUses: 65 2 63
End add action! threadA-4

add load: 22 threadA-4 1
loads: 2 4

update load: 65 3
63 43 0 53 66 
threadB-1 threadB-2 threadB-3 

set load:  threadA-4 2
threadA-4 threadA-2 
checker_addUses: 66 1 65
remain: threadB*threadB|63|2

update load: 66 3
65 0 53 66 
threadB-1 threadB-2 threadB-3 
In thread_yield_action!
Begin thread yield!
In thread yield!
before addAction lock: 0x7f9369500930 0x7f9369701b40
thread: 0x7f9369500930 0x7f9369701b40
thread add end: 0x7f9369500930 0x7f9369701b40 3 4
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-4
End add action! threadB-4
End thread yield!
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
waiting rmw_add!
in update priority: 0x700000081000
remain: threadB*threadB|63|2
checker_addUses: 62 1 41

update load: 62 3
41 0 53 66 
threadB-1 threadB-2 threadB-3 
checker_addUses: 63 1 62

update load: 63 3
62 0 53 66 
threadB-1 threadB-2 threadB-3 
waiting rmw_add!
in update priority: 0x700000081000
In atomic checker_preLoad: 0x7f9369610d88 7 63!
remain: threadB*threadB|63|2
In read action: 0x700000104000
before addAction lock: 0x7f9369500930 0x7f9369404030
thread: 0x7f9369500930 0x7f9369404030
thread add end: 0x7f9369500930 0x7f9369404030 7 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-5
Tset: 3 3 0x700000104000
0x700000081000 0x700000104000 0x7fff72793000 
waiting rmw_add!
in update priority: 0x700000081000
End add action! threadB-5
loads: 3 5

set load:  threadB-5 3
threadB-1 threadB-2 threadB-3 

add load: 63 threadB-5 1
In pre_read action: threadB-5
fetch expect value: 0x7f9369610d88 0
before fetch: 0x7f9369610d88 0
0 
after fetch: 0x7f9369610d88
0 

Read expect value: threadB-5 0x7f9369610d88 0 0 0
End: 0x700000104000 threadB-5
checker_addUses: 64 1 41

update load: 64 3
41 0 53 66 
threadB-1 threadB-2 threadB-3 
checker_addUses: 65 2 63

update load: 65 4
63 43 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 
checker_addUses: 66 1 65

update load: 66 4
65 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 
In thread_yield_action!
Begin thread yield!
In thread yield!
before addAction lock: 0x7f9369500930 0x7f936960d0e0
thread: 0x7f9369500930 0x7f936960d0e0
thread add end: 0x7f9369500930 0x7f936960d0e0 3 6
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
In add action: threadB-6
add prio: 0x700000104000 0x700000081000
add prio: 0x700000104000 0x7fff72793000
End add action! threadB-6
End thread yield!
get value: 0x7f936960c1c0 0x7f9369610d88 0
current values for: 0x7f9369610d88
0 

expect value rmw_add: threadA 4 0 !1! 22

update buf1: 0x7f936960be60 0x7f9369610d88 1
update buf1 end: 0x7f936960be60
update buf1: 0x7f9369500930 0x7f9369610d88 1
update buf1 end: 0x7f9369500930
update buf1: 0x7f9369610c90 0x7f9369610d88 1
update buf1 end: 0x7f9369610c90
checker_addUses: 23 1 4

update load: 23 1
4 0 16 
threadA-2 
In checker_thread_end
Thread_end_action: 0x700000081000
before addAction lock: 0x7f936960be60 0x7f93697024b0
thread: 0x7f936960be60 0x7f93697024b0
thread add end: 0x7f936960be60 0x7f93697024b0 5 5
enabled threads: 3
0x700000081000
0x700000104000
0x7fff72793000
erase enabledThreads: threadA-5
erase prio: 0x700000104000 0x700000081000
In add action: threadA-5
End add action! threadA-5
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f936960af10
checker_addUses: 62 1 41

update load: 62 4
41 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 
checker_addUses: 63 1 62

update load: 63 4
62 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 
In atomic checker_preLoad: 0x7f9369610d88 7 63!
In read action: 0x700000104000
before addAction lock: 0x7f9369500930 0x7f936960c680
thread: 0x7f9369500930 0x7f936960c680
thread add end: 0x7f9369500930 0x7f936960c680 7 7
enabled threads: 2
0x700000104000
0x7fff72793000
In add action: threadB-7
0x700000104000
0x7fff72793000 
Tset: 1 2 0x700000104000
0x7fff72793000 
End add action! threadB-7
loads: 4 7

set load:  threadB-7 4
threadB-5 threadB-1 threadB-2 threadB-3 

add load: 63 threadB-7 1
In pre_read action: threadB-7
get value: 0x7f9369500c90 0x7f9369610d88 1
current values for: 0x7f9369610d88
0 1 

Read expect value: threadB-7 0x7f9369610d88 1 1 1
End: 0x700000104000 threadB-7
checker_addUses: 64 1 41

update load: 64 4
41 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 
checker_addUses: 65 2 63

update load: 65 5
63 43 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 threadB-7 
checker_addUses: 66 1 65

update load: 66 5
65 0 53 66 
threadB-5 threadB-1 threadB-2 threadB-3 threadB-7 
checker_addUses: 75 1 74

update load: 75 1
74 0 53 
threadB-2 
var = 1
In checker_thread_end
Thread_end_action: 0x700000104000
before addAction lock: 0x7f9369500930 0x7f936960d380
thread: 0x7f9369500930 0x7f936960d380
thread add end: 0x7f9369500930 0x7f936960d380 5 8
enabled threads: 2
0x700000104000
0x7fff72793000
erase enabledThreads: threadB-8
In add action: threadB-8
End add action! threadB-8
checker_addUses: 242 1 231
checker_addUses: 243 1 231
checker_addUses: 244 1 242
checker_addUses: 245 1 244
BeginFunc: 0x7f936960af10
checker_addUses: 113 1 78

update load: 113 0
78 0 

In checker_thread_end
Thread_end_action: 0x7fff72793000
before addAction lock: 0x7f9369610c90 0x7f936960cdf0
thread: 0x7f9369610c90 0x7f936960cdf0
thread add end: 0x7f9369610c90 0x7f936960cdf0 5 7
enabled threads: 1
0x7fff72793000
erase enabledThreads: main-7
erase prio: 0x700000104000 0x7fff72793000
In add action: main-7
End add action! main-7
### Execute Time: 0.129681 0.037706 0.011132
Current Trace: 3
threadA*threadA|6|1 threadA-1 r 0 6
threadA*threadA|10|1 threadA-2 rmw 1 2 10
threadA*threadA|19|1 threadA-3 w 0 19
threadA*threadA|22|1 threadA-4 rmw 0 1 22
iiiii: 0x7f936960be60 3
xx: 2 1
yy: threadA-2
xx: 3 1
yy: threadA-2
xx: 4 2
yy: threadA-4
yy: threadA-2
threadB*threadB|43|1 threadB-1 r 0 43
threadB*threadB|47|1 threadB-2 rmw 0 1 47
threadB*threadB|63|1 threadB-3 r 0 63
threadB*threadB|63|2 threadB-5 r 0 63
threadB*threadB|63|3 threadB-7 r 1 63
iiiii: 0x7f9369500930 4
xx: 2 1
yy: threadB-2
xx: 3 1
yy: threadB-2
xx: 5 3
yy: threadB-1
yy: threadB-2
yy: threadB-3
xx: 7 4
yy: threadB-5
yy: threadB-1
yy: threadB-2
yy: threadB-3
main*main|88|1 main-1 w 0 88
main*main|93|1 main-2 w 0 93
iiiii: 0x7f9369610c90 0
Generating: threadA-2 threadA-3 1 0
checking: read:val threadA-2 0
mhbList: 1
enforce: 0x7f936960c800 threadA-2 0 
enforce4: 0x7f93694054f0 threadB-1 0 
mhbList: 0
enforce4: 0x7f9369501040 threadB-2 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f93695011c0 threadB-3 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f9369404030 threadB-5 0 
mhbList: 3
enforce44: 0x7f93694054f0 threadB-1 0 
enforce44: 0x7f9369501040 threadB-2 0 
enforce44: 0x7f93695011c0 threadB-3 0 
enforcePairs: 5
checking fairness: 5
threadA 2 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 5 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f936960af10
Adding Binary HB constraints: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7f936960af10
### Basic Prepare Time: 0.005411 0.001509
### MO Prepare Time: 0.001701 0.000305
Adding sc constraints: 11
### SC Prepare Time: 0.008833 0.002349
In addLockConstraints: 0
prefix size: 0
### Part1 Time: 0.008554 0.002144
reads & writes: 2 4
reads & writes: 6 2
### Part2 Time: 0.005516 0.001531
### Consistent Prepare Time: 0.014306 0.003696
### Prepare Time: 0.034833 0.008299
AddRWRelations: 5
Add RW: threadB-5 0
In addRWRelation: threadB-5 0

xxxx read: threadB-5 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-5 3
list: threadB-1
list: threadB-2
list: threadB-3
guarantee: threadB-1 0
In addRWRelation: threadB-1 0

xxxx read: threadB-1 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-1 0 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
guarantee: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal1: threadA-2 0
values: threadA-2 1 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
Inconsistency from guarantee1!
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and (= 1 0))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
guarantee: threadB-3 0
In addRWRelation: threadB-3 0

xxxx read: threadB-3 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 0
Hit Cache2!
Gurantee end: threadB-3 (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-3 0 (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1))))) (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-5 0 (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
ttt: (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
Add RW: threadB-1 0
Hit Cache2!
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
Add RW: threadB-2 0
Hit Cache2!
ttt: (or  (and (= 1 0)) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadB-3 0
Hit Cache2!
ttt: (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
Add RW: threadA-2 0
In addRWRelation: threadA-2 0

xxxx read: threadA-2 1 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 0
values: main-1 0 0

write: main-1 0
For read: threadA-2
current orStr: 
For write: main-1
skip write1: threadA-2
skip write3: threadA-3
consider write: threadB-2
skip write1: main-1
xxx: threadA-2 0 (or  (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0)))))
ttt: (or  (and  (= RF_threadA-2_main-1 1) (= B_main-1_threadA-2 1) (= false (and (= B_main-1_threadB-2 1) (= B_threadA-2_threadB-2 0)))))
Adding SW Constraints: 5
End adding SW Constraints!
### RWConstraint construct Time: 0.030747 0.00361
close z3File!!!!!!!!!!!!!!: 1
begin checksat!
[Solver] Model Satisfiability: unsat
[Solver] (error "line 555 column 10: model is not available")
end checksat!
### Solver Time2: 0.01095 0.000483
### Generate Solution time: 0.016059 1.7e-05
### Last Part time: 0.029023 0.000689
### Generate Schedule Time: 0.102288 0.013069
Generating: threadA-1 threadA-4 0 1
checking: read:val threadA-1 1
mhbList: 0
enforce4: 0x7f93694054f0 threadB-1 0 
mhbList: 0
enforce4: 0x7f9369501040 threadB-2 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f93695011c0 threadB-3 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f9369404030 threadB-5 0 
mhbList: 3
enforce44: 0x7f93694054f0 threadB-1 0 
enforce44: 0x7f9369501040 threadB-2 0 
enforce44: 0x7f93695011c0 threadB-3 0 
enforcePairs: 5
checking fairness: 5
threadA 1 1
threadB 1 0
threadB 2 0
threadB 3 0
threadB 5 0
SKIP: 1
Opening z3file: /Users/yiqiuping/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7f936960af10
### Prepare Time: 0.035128 0.000306
AddRWRelations: 5
Add RW: threadB-5 0
In addRWRelation: threadB-5 0

xxxx read: threadB-5 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-5 3
list: threadB-1
list: threadB-2
list: threadB-3
guarantee: threadB-1 0
In addRWRelation: threadB-1 0

xxxx read: threadB-1 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-1 0 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
guarantee: threadB-2 0
In addRWRelation: threadB-2 0

xxxx read: threadB-2 0 0

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadB-2 0
Gurantee end: threadB-2 
InputVal2: threadA-2 1
values: threadA-2 2 0
values: threadA-3 0 0

write: threadA-3 0
For read: threadB-2
current orStr: 
For write: threadA-3
Guarantee begin: threadA-3 1
list: threadA-2
guarantee: threadA-2 1
In addRWRelation: threadA-2 1

xxxx read: threadA-2 1 1

write: threadA-2 2

write: threadA-3 0

write: threadB-2 1

write: main-1 0
writeset: 4
Guarantee begin: threadA-2 0
Gurantee end: threadA-2 
skip: threadA-2
skip: threadA-3
InputVal1: threadB-2 0
values: threadB-2 1 1

write: threadB-2 1
For read: threadA-2
current orStr: 
For write: threadB-2
Guarantee begin: threadB-2 1
list: threadB-2
guarantee: threadB-2 0
Loop depednecy from guarantee: threadB-2
values: main-1 0 1
xxx: threadA-2 1 (or  (and (= 1 0)))
Gurantee end: threadA-3 (or  (and (= 1 0)))
skip write2: threadA-2
skip write1: threadA-3
skip write1: threadB-2
consider write: main-1
skip: threadB-2
values: main-1 0 0

write: main-1 0
For read: threadB-2
current orStr:  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1))))
For write: main-1
consider write: threadA-2
consider write: threadA-3
skip write1: threadB-2
skip write1: main-1
xxx: threadB-2 0 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
guarantee: threadB-3 0
In addRWRelation: threadB-3 0

xxxx read: threadB-3 0 0

write: threadA-4 1

write: main-2 0
writeset: 2
Guarantee begin: threadB-3 1
list: threadB-2
guarantee: threadB-2 0
Hit Cache2!
Gurantee end: threadB-3 (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-3 0 (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1))))) (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
InputVal2: threadA-4 0
values: threadA-4 1 0
values: main-2 0 0

write: main-2 0
current orStr: 
For write: main-2
consider write: threadA-4
skip write1: main-2
xxx: threadB-5 0 (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
ttt: (or  (and  (= RF_threadB-5_main-2 1) (= B_main-2_threadB-5 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-5 1)))))
Add RW: threadB-1 0
Hit Cache2!
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_main-2_threadB-1 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-1 1)))))
Add RW: threadB-2 0
Hit Cache2!
ttt: (or  (and  (and (or  (and (= 1 0)))) (= RF_threadB-2_threadA-3 1) (= B_threadA-3_threadB-2 1) (= false (and (= B_main-1_threadA-3 0) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_main-1_threadB-2 1) (= false (and (= B_main-1_threadA-2 1) (= B_threadA-2_threadB-2 1))) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1)))))
Add RW: threadB-3 0
Hit Cache2!
ttt: (or  (and  (= RF_threadB-3_main-2 1) (= B_main-2_threadB-3 1) (= false (and (= B_main-2_threadA-4 1) (= B_threadA-4_threadB-3 1)))))
Add RW: threadA-1 1
In addRWRelation: threadA-1 1

xxxx read: threadA-1 0 1

write: threadA-4 1

write: main-2 0
writeset: 2
skip: threadA-4
values: main-2 0 1
xxx: threadA-1 1 (or )
Identify inconsistency1!
ttt: 
Inconsistency2!
### RWConstraint construct Time: 0.031936 0.001197
Identify inconsistency2!
close z3File!!!!!!!!!!!!!!: 0
### Generate Schedule Time: 0.10442 0.002139
Generating: threadB-7 main-2 1 0
checking: read:val threadB-7 0
mhbList: 4
enforce: 0x7f9369404030 threadB-5 0 
enforce: 0x7f93694054f0 threadB-1 0 
enforce: 0x7f9369501040 threadB-2 0 
enforce: 0x7f93695011c0 threadB-3 0 
enforce4: 0x7f93694054f0 threadB-1 0 
mhbList: 0
enforce4: 0x7f9369501040 threadB-2 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f93695011c0 threadB-3 0 
mhbList: 1
enforce44: 0x7f9369501040 threadB-2 0 
enforce4: 0x7f9369404030 threadB-5 0 
mhbList: 3
enforce44: 0x7f93694054f0 threadB-1 0 
enforce44: 0x7f9369501040 threadB-2 0 
enforce44: 0x7f93695011c0 threadB-3 0 
enforcePairs: 5
checking fairness: 5
threadB 1 0
threadB 2 0
threadB 3 0
threadB 5 0
threadB 7 0
Identify an unfair schedule!
### Generate Schedule Time: 0.104657 0.000241
End solver!
### Solver Time: 0.105601 0.015676
buffers: 0x7f936960be60 2
delete Buffer: 0x7f936960c140
suc!
delete Buffer: 0x7f936960c1c0
suc!
buffers: 0x7f9369500930 2
delete Buffer: 0x7f9369500c10
suc!
delete Buffer: 0x7f9369500c90
suc!
buffers: 0x7f9369610c90 2
delete Buffer: 0x7f9369610e40
suc!
delete Buffer: 0x7f936960b550
suc!
delete curSch1: 0x7f936950a220
delete curSch2!
### Total Time: 0.145813
BeginFunc: 0x0
BeginFunc: 0x0
In ~ModelChecker!
