BBBBBBBBBBBBBBB
Generate a model checker11: 0x7fe7d3d00000 0
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74392
Generate a new Executor: 0x7fe7d3e00000 0x7fe7d3f00000

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3e00000
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3c04f14 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3c050d0 0x7fe7d3c04f14 0

Write value1: main-1 0x7fe7d3c04f14 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3c04f18 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3c05600 0x7fe7d3c04f18 0

Write value1: main-2 0x7fe7d3c04f18 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3e00000
BeginFunc: 0x7fe7d3e00000
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 253 1 252
checker_addUses: 296 1 291
checker_addUses: 297 1 296

update load: 253 0
252 0 

checker_addUses: 300 1 299
checker_addUses: 301 1 300

In checker_thread_begin: 0x103e9f000
checker_addUses: 109 1 89

update load: 109 0
89 0 

BeginFunc: 0x7fe7d3e00000
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 294 1 293
checker_addUses: 253 1 252
checker_addUses: 295 1 292

update load: 253 0
252 0 

checker_addUses: 296 1 291
checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 301 1 300

In checker_thread_begin: 0x103f22000
checker_addUses: 112 1 88

update load: 112 0
88 0 

checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103e9f000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103f22000
In add action: main-4
Waitting for create thread 0x103f22000
Waitting for create thread 0x103e9f000
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

Waitting for create thread 0x103f22000
In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5
In add action: main-5
End add action! main-5

update load: 6 0
5 0 

In atomic checker_preLoad: checker_addUses: 120 1 115
0x7fe7d3c04f18 7 6!
In read action: 0x103e9f000

update load: 120 0
115 0 

In add action: threadA-1
Tset: 2 2 0x103e9f000
0x103e9f000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45
In add action: main-6
End add action! main-6

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3c04f18 7 48!
In read action: 0x103f22000

add load: 6 threadA-1 1
In pre_read action: threadA-1
get value: 0x7fe7d3d00450 0x7fe7d3c04f18 0

Read expect value: threadA-1 0x7fe7d3c04f18 0 0 0
End: 0x103e9f000 threadA-1
checker_addUses: 7 1 4
In add action: threadB-1

update load: 7 0
4 0 

Tset: 3 3 0x103f22000
0x103e9f000 0x103f22000 0x7fff7d800300 
checker_addUses: 8 1 3
End add action! threadB-1
loads: 0 1

update load: 8 0
3 0 


add load: 48 threadB-1 1
checker_addUses: 9 1 8
In pre_read action: threadB-1

update load: 9 0
8 0 

get value: 0x7fe7d3c06130 0x7fe7d3c04f18 0
checker_addUses: 10 1 9

Read expect value: threadB-1 0x7fe7d3c04f18 0 0 0
End: 0x103f22000 threadB-1

update load: 10 0
9 0 

checker_addUses: 49 1 46
In atomic checker_preLoad: 0x7fe7d3c04f14 7 10!
In read action: 0x103e9f000

update load: 49 0
46 0 

In add action: threadA-2
checker_addUses: 50 1 45
Tset: 3 3 0x103e9f000
0x103e9f000 0x103f22000 0x7fff7d800300 

update load: 50 0
45 0 

checker_addUses: 51 1 50
End add action! threadA-2
loads: 0 2

update load: 51 0
50 0 


add load: 10 threadA-2 1
In pre_read action: checker_addUses: 52 1 51
threadA-2
get value: 0x7fe7d3f003c0 0x7fe7d3c04f14 0

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3c04f14 7 
Read expect value: threadA-2 0x7fe7d3c04f14 0 0 0
52!
In read action: 0x103f22000
End: 0x103e9f000 threadA-2
In add action: threadB-2
checker_addUses: 11 1 8
Tset: 3 3 0x103f22000
0x103e9f000 0x103f22000 0x7fff7d800300 

update load: 11 0
8 0 

End add action! threadB-2
checker_addUses: 12 1 3
loads: 0 2

update load: 12 0
3 0 


add load: 52 threadB-2 1
In pre_read action: threadB-2
checker_addUses: 13 1 12
get value: 0x7fe7d3c060d0 0x7fe7d3c04f14 0

update load: 13 0
12 0 


Read expect value: threadB-2 0x7fe7d3c04f14 0 0 0
End: 0x103f22000 threadB-2
checker_addUses: 14 3 10
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 14 2
10 13 6 0 
threadA-2 threadA-1 
nwait: 0, 2, 0

update load: 54 0
45 0 

checker_addUses: 15 1 8
checker_addUses: 55 1 54

update load: 15 0
8 0 


update load: 55 0
54 0 

checker_addUses: 16 1 15
checker_addUses: 56 3 52

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3c04f14 1 7

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 
nwait: 0, 2, 0
In add action: threadA-3
checker_addUses: 57 1 50
Tset: 3 3 0x103e9f000
0x103e9f000 0x103f22000 0x7fff7d800300 

update load: 57 0
50 0 

End add action! threadA-3
checker_addUses: 58 1 57

add load: 16 threadA-3 1
loads: 
update load: 58 0
57 0 

1 3
set Reachability map 111: In rmw_add: 0x7fe7d3f00140 0x7fe7d3c04f14 3 1 1 7
0
get value: 0x7fe7d3f003c0 0x7fe7d3c04f14 0

expect value rmw_add: threadA 3 0 !1!

update buffer: 0x7fe7d3f003c0 0x7fe7d3c04f14 1
update buffer: 0x7fe7d3c060d0 0x7fe7d3c04f14 1
update buffer: 0x7fe7d3c050d0 0x7fe7d3c04f14 1
checker_addUses: 17 1 8
In add action: threadB-3

update load: 17 0
8 0 

Tset: 3 3 0x103f22000
0x103e9f000 0x103f22000 0x7fff7d800300 
checker_addUses: 18 1 12
End add action! threadB-3

update load: 18 0
12 0 

checker_addUses: 19 1 18

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3c05e80 3 
update load: 19 0
18 0 

1 0
checker_addUses: 20 2 16
get value: 0x7fe7d3c060d0 0x7fe7d3c04f14 1

expect value rmw_add: threadB 3 1 !1!


update load: 20 1
16 19 0 
threadA-3 
update buffer: 0x7fe7d3f003c0 0x7fe7d3c04f14 2
update buffer: 0x7fe7d3c060d0 0x7fe7d3c04f14 2
checker_addUses: 21 1 20
update buffer: 0x7fe7d3c050d0 0x7fe7d3c04f14 2
checker_addUses: 59 1 50

update load: 21 1
20 0 
threadA-3 

update load: 59 0
50 0 

checker_addUses: 60 1 54

update load: 60 0
54 0 

checker_addUses: 30 1 4
checker_addUses: 61 1 60

update load: 61 0
60 0 


update load: 30 0
4 0 22 34 

checker_addUses: 62 2 58
checker_addUses: 31 1 30

update load: 31 0
30 0 22 34 


update load: 62 1
58 61 0 
threadB-3 
In atomic checker_preLoad: 0x7fe7d3c04f18 7 31!
checker_addUses: 63 1 62
In read action: 
update load: 63 1
62 0 
threadB-3 
0x103e9f000
In add action: threadA-4
checker_addUses: 65 1 50
Tset: 3 3 0x103e9f000
0x103e9f000 0x103f22000 0x7fff7d800300 
End add action! threadA-4

update load: 65 1
50 0 63 
threadB-3 
loads: 0 4
checker_addUses: 66 1 65

add load: 31 threadA-4 1
In pre_read action: threadA-4
get value: 0x7fe7d3d00450 0x7fe7d3c04f18 0

update load: 66 1
65 0 63 
threadB-3 
In atomic checker_preStore: 0x7fe7d3c04f14 0 
Read expect value: threadA-4 0x7fe7d3c04f18 0 0 0
7!
End: 0x103e9f000 threadA-4
In write: 0x103f22000
checker_addUses: 32 1 4
In add action: threadB-4
End add action! threadB-4
action: 
update load: 32 0
4 0 22 34 

threadB-4
loads: 1 4
set Reachability map 111: 0x7fe7d3c05e80 checker_addUses: 33 2 31
4 1 1
update buffer: 0x7fe7d3f003c0 0x7fe7d3c04f14 0
update buffer: 0x7fe7d3c060d0 0x7fe7d3c04f14 0

update load: 33 2
31 6 0 22 34 
threadA-4 threadA-1 
update buffer: 0x7fe7d3c050d0 0x7fe7d3c04f14 0

Write value1: threadB-4 0x7fe7d3c04f14 0!
checker_addUses: 34 1 33
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 

update load: 34 2
33 0 22 34 
threadA-4 threadA-1 
checker_addUses: 68 1 46
In thread_yield_action!
Begin thread yield!
In thread yield!

update load: 68 1
46 0 63 
threadB-3 
In add action: threadA-5
checker_addUses: 69 1 68

update load: 69 1
68 0 63 
threadB-3 
In rmw_add: 0x7fe7d3c04f18 1 7
End add action! threadA-5
End thread yield!
In add action: threadB-5
Tset: 3 3 0x103f22000
0x103e9f000 0x103f22000 0x7fff7d800300 
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3c05e80 5 2 2
get value: 0x7fe7d3c06130 0x7fe7d3c04f18 0

expect value rmw_add: threadB 5 0 !1!

update buffer: 0x7fe7d3d00450 0x7fe7d3c04f18 1
update buffer: 0x7fe7d3c06130 0x7fe7d3c04f18 1
update buffer: 0x7fe7d3c05600 0x7fe7d3c04f18 1
checker_addUses: 70 1 46

update load: 70 1
46 0 63 
threadB-3 
checker_addUses: 85 1 84

update load: 85 1
84 0 63 
threadB-3 
var = 1
In checker_thread_end
Thread_end_action: 0x103f22000
erase enabledThreads: threadB-6
In add action: threadB-6
End add action! threadB-6
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e00000
checker_addUses: 30 1 4

update load: 30 2
4 0 22 34 
threadA-4 threadA-1 
checker_addUses: 31 1 30

update load: 31 2
30 0 22 34 
threadA-4 threadA-1 
In atomic checker_preLoad: 0x7fe7d3c04f18 7 31!
In read action: 0x103e9f000
In add action: threadA-6
Tset: 2 2 0x103e9f000
0x103e9f000 0x7fff7d800300 
End add action! threadA-6
loads: 2 6
set Reachability map 111: 0x7fe7d3f00140 6 2 1

add load: 31 threadA-6 1
In pre_read action: threadA-6
get value: 0x7fe7d3d00450 0x7fe7d3c04f18 1

Read expect value: threadA-6 0x7fe7d3c04f18 1 1 1
End: 0x103e9f000 threadA-6
checker_addUses: 32 1 4

update load: 32 2
4 0 22 34 
threadA-4 threadA-1 
checker_addUses: 33 2 31

update load: 33 3
31 6 0 22 34 
threadA-4 threadA-6 threadA-1 
checker_addUses: 34 1 33

update load: 34 3
33 0 22 34 
threadA-4 threadA-6 threadA-1 
In checker_thread_end
Thread_end_action: 0x103e9f000
erase enabledThreads: threadA-7
In add action: threadA-7
End add action! threadA-7
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e00000
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 0
threadA-6 1
threadB-1 0
threadB-2 0
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3f00000
vec1: 1 0
vec1: 1 0
vec1: 0 0
add prefix: threadA-1
add read: threadA-2
vec2: threadA 1 1
add prefix: threadB-1
add read: threadB-2
vec2: threadB 1 2
vec2: main 0 2
add prefix: threadA-1
add prefix: threadA-2
add read: threadA-3
vec2: threadA 1 2
add prefix: threadB-1
add prefix: threadB-2
add read: threadB-3
vec2: threadB 1 4
vec2: main 0 4
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add read: threadA-4
vec2: threadA 1 3
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-5
vec2: threadB 1 6
vec2: main 0 6
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add read: threadA-6
vec2: threadA 1 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 8
vec2: main 0 8
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
vec2: threadA 0 5
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 9
vec2: main 0 9
add value: threadA-1 1
add value: threadA-1 0
add value: threadB-1 1
add value: threadB-1 0
fMap: threadA 1 0
fMap: threadB 1 1
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3d009c0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e00e50
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e00e50 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
fMap: threadA 1 1
fMap: threadB 1 0
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 1 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d03da0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d03da0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e00dc0
111: 11
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3e00dc0 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02010
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f02010 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1058 column 10: model is not available") 0
[Solver] (error "line 1058 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 2
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
test2
ccc7
fMap: threadA 1 1
fMap: threadB 1 1
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 1 
enforce0: 0x7fe7d3d009c0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04440
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d04440 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04380
111: 11
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3d04380 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
add value: threadA-2 1
add value: threadA-2 2
add value: threadA-2 0
add value: threadA-2 0
add value: threadB-2 1
add value: threadB-2 2
add value: threadB-2 0
add value: threadB-2 0
fMap: threadA 2 0
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 0
1: threadB-2 : 1
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3d00c40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0edc0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c0edc0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0eff0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c0eff0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f2e0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0f2e0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f430
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c0f430 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0e350
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c0e350 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f6e0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c0f6e0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))):named RW))

Adding SW Constraints: 6
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    139) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    143) 1


  (define-fun B_main-4_threadA-4 () Int 0


    101) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-5_main-1 () Int 0


    106) 1


  (define-fun B_threadA-4_main-2 () Int 0


    99) 1


  (define-fun B_main-5_threadB-5 () Int 0


    173) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun RF_threadA-6_main-2 () Int 0


    0) 0


  (define-fun S_threadA-1 () Int 0


    3) 0


  (define-fun RF_threadB-3_threadB-4 () Int 0


    0) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    141) 1


  (define-fun B_main-7_threadB-4 () Int 0


    167) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    212) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-2_main-3 () Int 0


    147) 1


  (define-fun B_main-5_threadB-2 () Int 0


    149) 1


  (define-fun S_threadA-2 () Int 0


    4) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-1 () Int 0


    54) 1


  (define-fun B_main-4_threadA-3 () Int 0


    93) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    175) 1


  (define-fun B_threadA-3_main-0 () Int 0


    89) 1


  (define-fun RF_threadB-5_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    146) 1


  (define-fun B_threadA-1_main-0 () Int 0


    75) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-1 () Int 0


    209) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    45) 1


  (define-fun B_threadB-0_threadA-7 () Int 0


    60) 1


  (define-fun S_threadA-3 () Int 0


    5) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    108) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    19) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    144) 1


  (define-fun B_threadA-5_main-0 () Int 0


    105) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    204) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-2 () Int 0


    55) 1


  (define-fun B_threadB-4_main-1 () Int 0


    161) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    23) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    95) 1


  (define-fun B_main-4_threadA-7 () Int 0


    125) 1


  (define-fun B_threadA-2_main-1 () Int 0


    0) 1


  (define-fun B_main-4_threadB-0 () Int 0


    133) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    59) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    36) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-3 () Int 0


    38) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-4 () Int 0


    0) 0


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadA-4_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-6 () Int 0


    182) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    27) 1


  (define-fun S_threadB-5 () Int 0


    9) 0


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    72) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-7 () Int 0


    65) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    120) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    35) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    118) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    69) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    115) 1


  (define-fun B_main-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    189) 1


  (define-fun B_threadA-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-6_main-1 () Int 0


    177) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    183) 1


  (define-fun B_threadA-6_threadB-3 () Int 0


    56) 1


  (define-fun B_threadB-4_main-3 () Int 0


    163) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    110) 1


  (define-fun S_threadB-4 () Int 0


    8) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    111) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    159) 1


  (define-fun B_threadB-1_main-1 () Int 0


    138) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    1) 1


  (define-fun B_main-7_threadA-1 () Int 0


    81) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    86) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    91) 1


  (define-fun B_main-4_threadA-1 () Int 0


    78) 1


  (define-fun RF_threadA-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-3_threadB-3 () Int 0


    220) 1


  (define-fun B_main-4_threadA-5 () Int 0


    109) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    52) 1


  (define-fun B_main-6_threadB-3 () Int 0


    158) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    25) 1


  (define-fun B_threadA-6_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    48) 1


  (define-fun B_threadB-1_threadA-7 () Int 0


    61) 1


  (define-fun S_threadB-3 () Int 0


    7) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    30) 1


  (define-fun B_threadB-5_main-0 () Int 0


    168) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    0) 0


  (define-fun RF_threadB-5_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-3 () Int 0


    221) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    217) 1


  (define-fun B_main-5_threadA-3 () Int 0


    94) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-1 () Int 0


    76) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-6_main-3 () Int 0


    179) 1


  (define-fun B_main-0_threadB-0 () Int 0


    129) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    34) 1


  (define-fun B_threadB-5_threadB-2 () Int 0


    216) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-7 () Int 0


    63) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    97) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    42) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-5 () Int 0


    222) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    46) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-5_threadB-3 () Int 0


    218) 1


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-1 () Int 0


    213) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    137) 1


  (define-fun B_threadA-2_main-2 () Int 0


    83) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    2) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    18) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    22) 1


  (define-fun B_threadB-4_threadA-7 () Int 0


    64) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    215) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    208) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    155) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    148) 1


  (define-fun RF_threadB-2_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-3_main-4 () Int 0


    156) 1


  (define-fun B_threadB-5_threadB-4 () Int 0


    219) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    102) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-6_threadB-5 () Int 0


    1) 0


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    41) 1


  (define-fun B_main-6_threadA-7 () Int 0


    127) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    140) 1


  (define-fun B_threadB-3_main-2 () Int 0


    154) 1


  (define-fun B_threadA-2_main-3 () Int 0


    84) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun S_threadB-2 () Int 0


    6) 0


  (define-fun B_main-7_threadA-3 () Int 0


    96) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_threadA-1_threadA-7 () Int 0


    1) 1


  (define-fun B_main-6_threadB-4 () Int 0


    166) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_threadA-7_main-6 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    68) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    201) 1


  (define-fun B_threadA-2_main-0 () Int 0


    82) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    53) 1


  (define-fun B_main-6_threadB-0 () Int 0


    135) 1


  (define-fun B_main-6_threadB-1 () Int 0


    142) 1


  (define-fun B_threadA-6_threadB-4 () Int 0


    57) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    67) 1


  (define-fun B_threadB-6_main-4 () Int 0


    180) 1


  (define-fun M_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    92) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-0 () Int 0


    121) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    164) 1


  (define-fun B_threadA-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    0) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    29) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    49) 1


  (define-fun S_threadA-4 () Int 0


    10) 0


  (define-fun B_threadB-5_main-1 () Int 0


    169) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    200) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    17) 1


  (define-fun B_main-7_threadB-0 () Int 0


    136) 1


  (define-fun B_main-5_threadB-4 () Int 0


    165) 1


  (define-fun B_main-7_threadA-0 () Int 0


    74) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    1) 1


  (define-fun M_threadB-4 () Int 0


    3) 0


  (define-fun B_main-6_threadA-0 () Int 0


    73) 1


  (define-fun B_main-4_threadA-2 () Int 0


    85) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    211) 1


  (define-fun B_threadB-3_main-1 () Int 0


    153) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    0) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    37) 1


  (define-fun B_threadA-7_main-2 () Int 0


    123) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    104) 1


  (define-fun B_threadA-5_main-2 () Int 0


    107) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    214) 1


  (define-fun B_main-7_threadA-2 () Int 0


    88) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    0) 0


  (define-fun B_main-2_threadB-0 () Int 0


    131) 1


  (define-fun B_main-6_threadA-1 () Int 0


    80) 1


  (define-fun M_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    21) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    77) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    31) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    178) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_main-5_threadA-7 () Int 0


    126) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-5_main-4 () Int 0


    172) 1


  (define-fun S_threadA-6 () Int 0


    11) 0


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    206) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadB-6_threadA-7 () Int 0


    66) 1


  (define-fun B_main-4_threadA-0 () Int 0


    71) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    28) 1


  (define-fun B_threadB-6_main-0 () Int 0


    176) 1


  (define-fun B_threadA-7_main-3 () Int 0


    124) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    51) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    16) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-0 () Int 0


    134) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    40) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    100) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    15) 1


  (define-fun B_main-6_threadA-4 () Int 0


    103) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    113) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    33) 1


  (define-fun B_threadA-6_main-1 () Int 0


    114) 1


  (define-fun B_threadA-6_main-3 () Int 0


    116) 1


  (define-fun B_threadB-5_main-3 () Int 0


    171) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    130) 1


  (define-fun RF_threadA-4_main-2 () Int 0


    0) 0


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-7 () Int 0


    128) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    47) 1


  (define-fun B_main-3_threadB-0 () Int 0


    132) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    20) 1


  (define-fun B_threadA-4_threadB-5 () Int 0


    44) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    79) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    119) 1


  (define-fun B_main-4_threadA-6 () Int 0


    117) 1


  (define-fun B_main-3_threadA-0 () Int 0


    70) 1


  (define-fun B_threadB-2_threadA-7 () Int 0


    62) 1


  (define-fun B_threadB-2_main-1 () Int 0


    145) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    210) 1


  (define-fun B_main-6_threadA-2 () Int 0


    87) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-4 () Int 0


    207) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    43) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    160) 1


  (define-fun B_threadA-6_threadA-2 () Int 0


    202) 1


  (define-fun B_threadB-4_main-2 () Int 0


    162) 1


  (define-fun RF_threadA-3_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-0 () Int 0


    14) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    112) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    203) 1


  (define-fun B_main-1_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    150) 1


  (define-fun B_main-5_threadB-6 () Int 0


    181) 1


  (define-fun B_threadA-3_main-1 () Int 0


    90) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    1) 1


  (define-fun S_threadB-1 () Int 0


    2) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    50) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    39) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    1) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    98) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    151) 1


  (define-fun B_threadA-7_main-1 () Int 0


    122) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    157) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-3 () Int 0


    205) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    26) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    24) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    170) 1


  (define-fun B_threadA-6_threadB-5 () Int 0


    58) 1


  (define-fun B_threadB-3_main-0 () Int 0


    152) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadB-5 () Int 0


    174) 1


) 0


(error "line 2124 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadA-2
dd1: threadA-1
dd1: threadB-1
dd1: threadB-2
Generate new schedule: 0x7fe7d3c14730
222: 2
schPrefix: threadA 2
schPrefix: threadB 2
prefixMap: 2 0
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-2
RF: threadB 1 0
write: threadA-3
RF: threadB 2 1
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-1
RF: threadA 3 0
write: main-2
RF: threadB 1 0
write: threadA-3
RF: threadB 2 1
ccc7
fMap: threadA 2 0
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 0
1: threadB-2 : 2
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e01470
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e01470 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e010f0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3e010f0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e01a20
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e01a20 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e01510
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e01510 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e00f70
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e00f70 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadB 1 0
threadB 2 2
fMap: threadA 2 1
fMap: threadB 2 0
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 1
1: threadB-2 : 0
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 0
fMap: threadA 2 1
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 1
1: threadB-2 : 1
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d00c40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
fMap: threadA 2 1
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 1
1: threadB-2 : 2
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
fMap: threadA 2 2
fMap: threadB 2 0
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 2
1: threadB-2 : 0
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 2 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e043d0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3e043d0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e04770
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e04770 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0a700
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c0a700 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0a030
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0a030 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    143) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    147) 1


  (define-fun B_main-4_threadA-4 () Int 0


    104) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-5_main-1 () Int 0


    109) 1


  (define-fun B_threadA-4_main-2 () Int 0


    102) 1


  (define-fun B_main-5_threadB-5 () Int 0


    176) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    23) 1


  (define-fun RF_threadA-6_main-2 () Int 0


    0) 0


  (define-fun S_threadA-1 () Int 0


    5) 0


  (define-fun RF_threadB-3_threadB-4 () Int 0


    0) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    145) 1


  (define-fun B_main-7_threadB-4 () Int 0


    170) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    215) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-2_main-3 () Int 0


    150) 1


  (define-fun B_main-5_threadB-2 () Int 0


    152) 1


  (define-fun S_threadA-2 () Int 0


    6) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-1 () Int 0


    55) 1


  (define-fun B_main-4_threadA-3 () Int 0


    96) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    178) 1


  (define-fun B_threadA-3_main-0 () Int 0


    92) 1


  (define-fun RF_threadB-5_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    0) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    149) 1


  (define-fun B_threadA-1_main-0 () Int 0


    77) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-1 () Int 0


    212) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    46) 1


  (define-fun B_threadB-0_threadA-7 () Int 0


    61) 1


  (define-fun S_threadA-3 () Int 0


    7) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    111) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    20) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    148) 1


  (define-fun B_threadA-5_main-0 () Int 0


    108) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    207) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-2 () Int 0


    56) 1


  (define-fun B_threadB-4_main-1 () Int 0


    164) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    24) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    98) 1


  (define-fun B_main-4_threadA-7 () Int 0


    129) 1


  (define-fun B_threadA-2_main-1 () Int 0


    85) 1


  (define-fun B_main-4_threadB-0 () Int 0


    137) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    60) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    37) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-3 () Int 0


    39) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-4 () Int 0


    0) 0


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadA-4_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-6 () Int 0


    185) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    28) 1


  (define-fun S_threadB-5 () Int 0


    9) 0


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    74) 1


  (define-fun B_threadA-7_threadB-1 () Int 0


    62) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-7 () Int 0


    67) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    124) 1


  (define-fun B_threadA-5_main-4 () Int 0


    112) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    1) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    122) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    71) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    119) 1


  (define-fun B_main-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    192) 1


  (define-fun B_threadA-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-6_main-1 () Int 0


    180) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    186) 1


  (define-fun B_threadA-6_threadB-3 () Int 0


    57) 1


  (define-fun B_threadB-4_main-3 () Int 0


    166) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    114) 1


  (define-fun S_threadB-4 () Int 0


    8) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    115) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    162) 1


  (define-fun B_threadB-1_main-1 () Int 0


    142) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    35) 1


  (define-fun B_main-7_threadA-1 () Int 0


    83) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    89) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    94) 1


  (define-fun B_main-4_threadA-1 () Int 0


    80) 1


  (define-fun RF_threadA-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-3_threadB-3 () Int 0


    224) 1


  (define-fun B_main-4_threadA-5 () Int 0


    113) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    53) 1


  (define-fun B_main-6_threadB-3 () Int 0


    161) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    26) 1


  (define-fun B_threadA-6_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    49) 1


  (define-fun B_threadB-1_threadA-7 () Int 0


    63) 1


  (define-fun S_threadB-3 () Int 0


    4) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    30) 1


  (define-fun B_threadB-5_main-0 () Int 0


    171) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    1) 0


  (define-fun RF_threadB-5_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-3 () Int 0


    223) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    220) 1


  (define-fun B_main-5_threadA-3 () Int 0


    97) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-1 () Int 0


    78) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    36) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-6_main-3 () Int 0


    182) 1


  (define-fun B_main-0_threadB-0 () Int 0


    133) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    34) 1


  (define-fun B_threadB-5_threadB-2 () Int 0


    219) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    29) 1


  (define-fun B_threadB-3_threadA-7 () Int 0


    65) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    100) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    43) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-5 () Int 0


    225) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    47) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-5_threadB-3 () Int 0


    221) 1


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-1 () Int 0


    216) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    141) 1


  (define-fun B_threadA-2_main-2 () Int 0


    86) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    1) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    19) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-7 () Int 0


    66) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    218) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    211) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    158) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    151) 1


  (define-fun RF_threadB-2_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-3_main-4 () Int 0


    159) 1


  (define-fun B_threadB-5_threadB-4 () Int 0


    222) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    105) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-6_threadB-5 () Int 0


    1) 0


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    42) 1


  (define-fun B_main-6_threadA-7 () Int 0


    131) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    144) 1


  (define-fun B_threadB-3_main-2 () Int 0


    157) 1


  (define-fun B_threadA-2_main-3 () Int 0


    87) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun S_threadB-2 () Int 0


    3) 0


  (define-fun B_main-7_threadA-3 () Int 0


    99) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_threadA-1_threadA-7 () Int 0


    1) 1


  (define-fun B_main-6_threadB-4 () Int 0


    169) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_threadA-7_main-6 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    70) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    204) 1


  (define-fun B_threadA-2_main-0 () Int 0


    84) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    54) 1


  (define-fun B_main-6_threadB-0 () Int 0


    139) 1


  (define-fun B_main-6_threadB-1 () Int 0


    146) 1


  (define-fun B_threadA-6_threadB-4 () Int 0


    58) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    0) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    69) 1


  (define-fun B_threadB-6_main-4 () Int 0


    183) 1


  (define-fun M_threadA-3 () Int 0


    2) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    95) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-0 () Int 0


    125) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    167) 1


  (define-fun B_threadA-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    1) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-0_threadB-2 () Int 0


    14) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    50) 1


  (define-fun S_threadA-4 () Int 0


    10) 0


  (define-fun B_threadB-5_main-1 () Int 0


    172) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    203) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    18) 1


  (define-fun B_main-7_threadB-0 () Int 0


    140) 1


  (define-fun B_main-5_threadB-4 () Int 0


    168) 1


  (define-fun B_main-7_threadA-0 () Int 0


    76) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    0) 1


  (define-fun M_threadB-4 () Int 0


    3) 0


  (define-fun B_main-6_threadA-0 () Int 0


    75) 1


  (define-fun B_main-4_threadA-2 () Int 0


    88) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    214) 1


  (define-fun B_threadB-3_main-1 () Int 0


    156) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    38) 1


  (define-fun B_threadA-7_main-2 () Int 0


    127) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    107) 1


  (define-fun B_threadA-5_main-2 () Int 0


    110) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    217) 1


  (define-fun B_main-7_threadA-2 () Int 0


    91) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    1) 0


  (define-fun B_main-2_threadB-0 () Int 0


    135) 1


  (define-fun B_main-6_threadA-1 () Int 0


    82) 1


  (define-fun M_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    79) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    31) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    181) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_main-5_threadA-7 () Int 0


    130) 1


  (define-fun B_threadB-5_main-4 () Int 0


    175) 1


  (define-fun S_threadA-6 () Int 0


    11) 0


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    209) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadB-6_threadA-7 () Int 0


    68) 1


  (define-fun B_main-4_threadA-0 () Int 0


    73) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-0 () Int 0


    179) 1


  (define-fun B_threadA-7_main-3 () Int 0


    128) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    52) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    17) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-0 () Int 0


    138) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    41) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    103) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    16) 1


  (define-fun B_main-6_threadA-4 () Int 0


    106) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    117) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    33) 1


  (define-fun B_threadA-6_main-1 () Int 0


    118) 1


  (define-fun B_threadA-6_main-3 () Int 0


    120) 1


  (define-fun B_threadB-5_main-3 () Int 0


    174) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    134) 1


  (define-fun RF_threadA-4_main-2 () Int 0


    0) 0


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-7 () Int 0


    132) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    48) 1


  (define-fun B_main-3_threadB-0 () Int 0


    136) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    21) 1


  (define-fun B_threadA-4_threadB-5 () Int 0


    45) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    81) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    123) 1


  (define-fun B_main-4_threadA-6 () Int 0


    121) 1


  (define-fun B_main-3_threadA-0 () Int 0


    72) 1


  (define-fun B_threadB-2_threadA-7 () Int 0


    64) 1


  (define-fun B_threadB-2_main-1 () Int 0


    0) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    213) 1


  (define-fun B_main-6_threadA-2 () Int 0


    90) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-4 () Int 0


    210) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    44) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    163) 1


  (define-fun B_threadA-6_threadA-2 () Int 0


    205) 1


  (define-fun B_threadB-4_main-2 () Int 0


    165) 1


  (define-fun RF_threadA-3_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-0 () Int 0


    15) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    116) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    206) 1


  (define-fun B_main-1_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    153) 1


  (define-fun B_main-5_threadB-6 () Int 0


    184) 1


  (define-fun B_threadA-3_main-1 () Int 0


    93) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    22) 1


  (define-fun S_threadB-1 () Int 0


    2) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    51) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    40) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    101) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    154) 1


  (define-fun B_threadA-7_main-1 () Int 0


    126) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    160) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    1) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-3 () Int 0


    208) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    27) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    25) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    173) 1


  (define-fun B_threadA-6_threadB-5 () Int 0


    59) 1


  (define-fun B_threadA-0_threadB-1 () Int 0


    13) 1


  (define-fun B_threadB-3_main-0 () Int 0


    155) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadB-5 () Int 0


    177) 1


) 0


(error "line 3188 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadA-2
dd1: threadA-1
dd1: threadB-1
dd1: threadB-2
Generate new schedule: 0x7fe7d3e049b0
222: 2
schPrefix: threadA 2
schPrefix: threadB 2
prefixMap: 2 0
write: main-2
RF: threadA 1 0
write: threadB-3
RF: threadA 2 2
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: main-1
RF: threadB 3 0
write: main-2
RF: threadA 1 0
write: threadB-3
RF: threadA 2 2
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: main-1
RF: threadB 3 0
ccc7
fMap: threadA 2 2
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 2
1: threadB-2 : 1
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 2 
enforce0: 0x7fe7d3d00c40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f00c80
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3f00c80 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f01020
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f01020 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f008b0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f008b0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f00d50
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f00d50 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 4250 column 10: model is not available") 0
[Solver] (error "line 4250 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 4
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
test2
ccc7
fMap: threadA 2 2
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadB 1 0
checking: read:val
0: threadA-2 : 2
1: threadB-2 : 2
prefix & reads: 2 2
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 2 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e082e0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3e082e0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e08680
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e08680 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e08800
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e08800 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
add value: threadA-3 2
add value: threadA-3 0
add value: threadA-3 0
add value: threadB-3 1
add value: threadB-3 0
add value: threadB-3 0
fMap: threadA 3 0
fMap: threadB 3 0
fMap: threadA 2 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3c06490 threadA-2 0 
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce1: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 0 
enforce2: 0x7fe7d3c06800 threadA-3 0 
enforce0: 0x7fe7d3d00f50 threadB-3 0 
enforce2: 0x7fe7d3d00f50 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f8e0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c0f8e0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f980
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0f980 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c10a50
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c10a50 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c10b00
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c10b00 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c080c0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c080c0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c145f0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c145f0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c08660
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c08660 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c082c0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c082c0 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
RW: (assert (! (and  (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 5314 column 10: model is not available") 0
[Solver] (error "line 5314 column 10: model is not available")


(SCConsistent RW ASW) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 6
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
test2
ccc7
fMap: threadA 3 2
fMap: threadB 3 0
fMap: threadA 2 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3c06490 threadA-2 0 
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce1: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 2 
enforce2: 0x7fe7d3c06800 threadA-3 2 
enforce0: 0x7fe7d3d00f50 threadB-3 0 
enforce2: 0x7fe7d3d00f50 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07cb0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f07cb0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07820
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f07820 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
fMap: threadA 3 2
fMap: threadB 3 1
fMap: threadA 2 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 1
prefix & reads: 4 2
enforce1: 0x7fe7d3c06490 threadA-2 0 
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce1: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 2 
enforce2: 0x7fe7d3c06800 threadA-3 2 
enforce0: 0x7fe7d3d00f50 threadB-3 1 
enforce2: 0x7fe7d3d00f50 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
Gurantee end: threadB-4 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02540
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3d02540 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f023d0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f023d0 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02650
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3f02650 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02cd0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f02cd0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02a80
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f02a80 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02b20
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f02b20 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
add value: threadA-4 1
add value: threadA-4 0
add value: threadB-5 0
fMap: threadA 4 1
fMap: threadB 5 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadB 3 1
checking: read:val
0: threadA-4 : 1
1: threadB-5 : 0
prefix & reads: 6 2
enforce1: 0x7fe7d3c06490 threadA-2 0 
enforce1: 0x7fe7d3c06800 threadA-3 0 
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce1: 0x7fe7d3d00c40 threadB-2 0 
enforce1: 0x7fe7d3d00f50 threadB-3 1 
enforce0: 0x7fe7d3c06bc0 threadA-4 1 
enforce0: 0x7fe7d3d01690 threadB-5 0 
enforce2: 0x7fe7d3d00f50 threadB-3 1 
enforce2: 0x7fe7d3d01690 threadB-5 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c11aa0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c11aa0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c11d10
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c11d10 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f1f0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0f1f0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07400
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f07400 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07010
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f07010 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07960
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f07960 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadA-4 1
In addRWRelation: 

xxxx read: threadA-4 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06df0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f06df0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-4 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06d40
111: 11
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3f06d40 threadB-5 threadA-4
xxx: threadA-4 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-4_threadB-5 1) (= B_threadA-4_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-4 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-4_threadB-5 1) (= B_threadA-4_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-4 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07080
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f07080 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06ec0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f06ec0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07a40
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f07a40 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f07bf0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f07bf0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadB-5 0
In addRWRelation: 

xxxx read: threadB-5 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f08820
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f08820 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f084f0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f084f0 main-2 threadB-5
xxx: threadB-5 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-4_threadB-5 1) (= B_threadA-4_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-4 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))):named RW))

Adding SW Constraints: 14
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    137) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    141) 1


  (define-fun B_main-4_threadA-4 () Int 0


    99) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-5_main-1 () Int 0


    104) 1


  (define-fun B_threadA-4_main-2 () Int 0


    97) 1


  (define-fun B_main-5_threadB-5 () Int 0


    169) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun RF_threadA-6_main-2 () Int 0


    0) 0


  (define-fun S_threadA-1 () Int 0


    4) 0


  (define-fun RF_threadB-3_threadB-4 () Int 0


    0) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    139) 1


  (define-fun B_main-7_threadB-4 () Int 0


    164) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    208) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-2_main-3 () Int 0


    144) 1


  (define-fun B_main-5_threadB-2 () Int 0


    146) 1


  (define-fun S_threadA-2 () Int 0


    5) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-1 () Int 0


    53) 1


  (define-fun B_main-4_threadA-3 () Int 0


    91) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    171) 1


  (define-fun B_threadA-3_main-0 () Int 0


    88) 1


  (define-fun RF_threadB-5_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    143) 1


  (define-fun B_threadA-1_main-0 () Int 0


    74) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-1 () Int 0


    205) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    44) 1


  (define-fun B_threadB-0_threadA-7 () Int 0


    59) 1


  (define-fun S_threadA-3 () Int 0


    6) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    106) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    19) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    142) 1


  (define-fun B_threadA-5_main-0 () Int 0


    103) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    200) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-2 () Int 0


    54) 1


  (define-fun B_threadB-4_main-1 () Int 0


    158) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    23) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    93) 1


  (define-fun B_main-4_threadA-7 () Int 0


    123) 1


  (define-fun B_threadA-2_main-1 () Int 0


    0) 1


  (define-fun B_main-4_threadB-0 () Int 0


    131) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    58) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    36) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-3 () Int 0


    38) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-4 () Int 0


    0) 0


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadA-4_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-6 () Int 0


    178) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    27) 1


  (define-fun S_threadB-5 () Int 0


    9) 0


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    71) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-7 () Int 0


    64) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    118) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    0) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    116) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    68) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    113) 1


  (define-fun B_main-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    185) 1


  (define-fun B_threadA-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-6_main-1 () Int 0


    173) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    179) 1


  (define-fun B_threadA-6_threadB-3 () Int 0


    55) 1


  (define-fun B_threadB-4_main-3 () Int 0


    160) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    108) 1


  (define-fun S_threadB-4 () Int 0


    8) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    109) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    156) 1


  (define-fun B_threadB-1_main-1 () Int 0


    136) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    35) 1


  (define-fun B_main-7_threadA-1 () Int 0


    80) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    85) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    89) 1


  (define-fun B_main-4_threadA-1 () Int 0


    77) 1


  (define-fun RF_threadA-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-3_threadB-3 () Int 0


    216) 1


  (define-fun B_main-4_threadA-5 () Int 0


    107) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    51) 1


  (define-fun B_main-6_threadB-3 () Int 0


    155) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    25) 1


  (define-fun B_threadA-6_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    47) 1


  (define-fun B_threadB-1_threadA-7 () Int 0


    60) 1


  (define-fun S_threadB-3 () Int 0


    7) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    30) 1


  (define-fun B_threadB-5_main-0 () Int 0


    165) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    0) 0


  (define-fun RF_threadB-5_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-3 () Int 0


    217) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    213) 1


  (define-fun B_main-5_threadA-3 () Int 0


    92) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-1 () Int 0


    75) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-6_main-3 () Int 0


    175) 1


  (define-fun B_main-0_threadB-0 () Int 0


    127) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    34) 1


  (define-fun B_threadB-5_threadB-2 () Int 0


    212) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    28) 1


  (define-fun B_threadB-3_threadA-7 () Int 0


    62) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    95) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    42) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-5 () Int 0


    218) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    45) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-5_threadB-3 () Int 0


    214) 1


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-1 () Int 0


    209) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    135) 1


  (define-fun B_threadA-2_main-2 () Int 0


    82) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    2) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    18) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    22) 1


  (define-fun B_threadB-4_threadA-7 () Int 0


    63) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    211) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    204) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    152) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    145) 1


  (define-fun RF_threadB-2_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-3_main-4 () Int 0


    153) 1


  (define-fun B_threadB-5_threadB-4 () Int 0


    215) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    100) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-6_threadB-5 () Int 0


    1) 0


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    41) 1


  (define-fun B_main-6_threadA-7 () Int 0


    125) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    138) 1


  (define-fun B_threadB-3_main-2 () Int 0


    151) 1


  (define-fun B_threadA-2_main-3 () Int 0


    83) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun S_threadB-2 () Int 0


    3) 0


  (define-fun B_main-7_threadA-3 () Int 0


    94) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_threadA-1_threadA-7 () Int 0


    1) 1


  (define-fun B_main-6_threadB-4 () Int 0


    163) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_threadA-7_main-6 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    67) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    197) 1


  (define-fun B_threadA-2_main-0 () Int 0


    81) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    52) 1


  (define-fun B_main-6_threadB-0 () Int 0


    133) 1


  (define-fun B_main-6_threadB-1 () Int 0


    140) 1


  (define-fun B_threadA-6_threadB-4 () Int 0


    56) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    66) 1


  (define-fun B_threadB-6_main-4 () Int 0


    176) 1


  (define-fun M_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    90) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-0 () Int 0


    119) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    161) 1


  (define-fun B_threadA-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    1) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    29) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    48) 1


  (define-fun S_threadA-4 () Int 0


    10) 0


  (define-fun B_threadB-5_main-1 () Int 0


    166) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    196) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    17) 1


  (define-fun B_main-7_threadB-0 () Int 0


    134) 1


  (define-fun B_main-5_threadB-4 () Int 0


    162) 1


  (define-fun B_main-7_threadA-0 () Int 0


    73) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    1) 1


  (define-fun M_threadB-4 () Int 0


    3) 0


  (define-fun B_main-6_threadA-0 () Int 0


    72) 1


  (define-fun B_main-4_threadA-2 () Int 0


    84) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    207) 1


  (define-fun B_threadB-3_main-1 () Int 0


    150) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    37) 1


  (define-fun B_threadA-7_main-2 () Int 0


    121) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    102) 1


  (define-fun B_threadA-5_main-2 () Int 0


    105) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    210) 1


  (define-fun B_main-7_threadA-2 () Int 0


    87) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    0) 0


  (define-fun B_main-2_threadB-0 () Int 0


    129) 1


  (define-fun B_main-6_threadA-1 () Int 0


    79) 1


  (define-fun M_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    76) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    31) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    174) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_main-5_threadA-7 () Int 0


    124) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-5_main-4 () Int 0


    168) 1


  (define-fun S_threadA-6 () Int 0


    11) 0


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    202) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadB-6_threadA-7 () Int 0


    65) 1


  (define-fun B_main-4_threadA-0 () Int 0


    70) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-0 () Int 0


    172) 1


  (define-fun B_threadA-7_main-3 () Int 0


    122) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    50) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    16) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-0 () Int 0


    132) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    40) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    98) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    15) 1


  (define-fun B_main-6_threadA-4 () Int 0


    101) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    111) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    33) 1


  (define-fun B_threadA-6_main-1 () Int 0


    112) 1


  (define-fun B_threadA-6_main-3 () Int 0


    114) 1


  (define-fun B_threadB-5_main-3 () Int 0


    167) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    128) 1


  (define-fun RF_threadA-4_main-2 () Int 0


    0) 0


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-7 () Int 0


    126) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    46) 1


  (define-fun B_main-3_threadB-0 () Int 0


    130) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    20) 1


  (define-fun B_threadA-4_threadB-5 () Int 0


    0) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    78) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    117) 1


  (define-fun B_main-4_threadA-6 () Int 0


    115) 1


  (define-fun B_main-3_threadA-0 () Int 0


    69) 1


  (define-fun B_threadB-2_threadA-7 () Int 0


    61) 1


  (define-fun B_threadB-2_main-1 () Int 0


    0) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    206) 1


  (define-fun B_main-6_threadA-2 () Int 0


    86) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-4 () Int 0


    203) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    43) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    157) 1


  (define-fun B_threadA-6_threadA-2 () Int 0


    198) 1


  (define-fun B_threadB-4_main-2 () Int 0


    159) 1


  (define-fun RF_threadA-3_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-0 () Int 0


    14) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    110) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    199) 1


  (define-fun B_main-1_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    147) 1


  (define-fun B_main-5_threadB-6 () Int 0


    177) 1


  (define-fun B_threadA-3_main-1 () Int 0


    0) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    21) 1


  (define-fun S_threadB-1 () Int 0


    2) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    49) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    39) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    96) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    148) 1


  (define-fun B_threadA-7_main-1 () Int 0


    120) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    154) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-3 () Int 0


    201) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    26) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    24) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    0) 1


  (define-fun B_threadA-6_threadB-5 () Int 0


    57) 1


  (define-fun B_threadB-3_main-0 () Int 0


    149) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadB-5 () Int 0


    170) 1


) 0


(error "line 6380 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadA-2
dd1: threadA-3
dd1: threadA-4
dd1: threadA-1
dd1: threadB-1
dd1: threadB-2
dd1: threadB-3
dd1: threadB-5
Generate new schedule: 0x7fe7d3f0a960
222: 2
schPrefix: threadA 4
schPrefix: threadB 5
prefixMap: 2 0
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-1
RF: threadA 3 0
write: threadB-5
RF: threadA 4 1
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: threadA-3
RF: threadB 3 1
write: main-2
RF: threadB 5 0
ccc7
add value: threadA-6 1
add value: threadA-6 0
fMap: threadA 6 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 4 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadB 3 1
fMap: threadB 5 0
checking: read:val
0: threadA-6 : 0
prefix & reads: 8 1
enforce1: 0x7fe7d3c06490 threadA-2 0 
enforce1: 0x7fe7d3c06800 threadA-3 0 
enforce1: 0x7fe7d3c06bc0 threadA-4 0 
enforce1: 0x7fe7d3d007f0 threadA-1 0 
enforce1: 0x7fe7d3d009c0 threadB-1 0 
enforce1: 0x7fe7d3d00c40 threadB-2 0 
enforce1: 0x7fe7d3d00f50 threadB-3 1 
enforce1: 0x7fe7d3d01690 threadB-5 0 
enforce0: 0x7fe7d3c06f80 threadA-6 0 
enforce2: 0x7fe7d3c06bc0 threadA-4 0 
enforce2: 0x7fe7d3d007f0 threadA-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 9
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d01cc0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d01cc0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d03f90
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3d03f90 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04210
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d04210 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d07da0
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d07da0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02640
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3d02640 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d040e0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d040e0 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadA-4 0
In addRWRelation: 

xxxx read: threadA-4 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d07e70
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d07e70 main-2 threadA-4
xxx: threadA-4 (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1)))))
ttt: (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1)))))
Add RW: threadA-6 0
In addRWRelation: 

xxxx read: threadA-6 1 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-6 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d01e70
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d01e70 main-2 threadA-6
xxx: threadA-6 (or  (and  (= RF_threadA-6_main-2 1) (= B_threadA-6_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-6 1)))))
ttt: (or  (and  (= RF_threadA-6_main-2 1) (= B_threadA-6_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-6 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02c70
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d02c70 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02d10
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d02d10 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d030e0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d030e0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02e40
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d02e40 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadB-5 0
In addRWRelation: 

xxxx read: threadB-5 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d03770
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d03770 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d02eb0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d02eb0 main-2 threadB-5
xxx: threadB-5 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1))))) (or  (and  (= RF_threadA-6_main-2 1) (= B_threadA-6_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-6 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))):named RW))

Adding SW Constraints: 14
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    136) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    140) 1


  (define-fun B_main-4_threadA-4 () Int 0


    99) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-5_main-1 () Int 0


    104) 1


  (define-fun B_threadA-4_main-2 () Int 0


    0) 1


  (define-fun B_main-5_threadB-5 () Int 0


    168) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun RF_threadA-6_main-2 () Int 0


    1) 0


  (define-fun S_threadA-1 () Int 0


    4) 0


  (define-fun RF_threadB-3_threadB-4 () Int 0


    0) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    138) 1


  (define-fun B_main-7_threadB-4 () Int 0


    163) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    207) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-2_main-3 () Int 0


    143) 1


  (define-fun B_main-5_threadB-2 () Int 0


    145) 1


  (define-fun S_threadA-2 () Int 0


    5) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-1 () Int 0


    54) 1


  (define-fun B_main-4_threadA-3 () Int 0


    92) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    170) 1


  (define-fun B_threadA-3_main-0 () Int 0


    89) 1


  (define-fun RF_threadB-5_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    142) 1


  (define-fun B_threadA-1_main-0 () Int 0


    75) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-1 () Int 0


    204) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    45) 1


  (define-fun B_threadB-0_threadA-7 () Int 0


    60) 1


  (define-fun S_threadA-3 () Int 0


    6) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    106) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    19) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    141) 1


  (define-fun B_threadA-5_main-0 () Int 0


    103) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    199) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadA-6_threadB-2 () Int 0


    55) 1


  (define-fun B_threadB-4_main-1 () Int 0


    157) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    23) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    94) 1


  (define-fun B_main-4_threadA-7 () Int 0


    122) 1


  (define-fun B_threadA-2_main-1 () Int 0


    0) 1


  (define-fun B_main-4_threadB-0 () Int 0


    130) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    59) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    36) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-3 () Int 0


    38) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-4 () Int 0


    0) 0


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadA-4_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-6 () Int 0


    177) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    27) 1


  (define-fun S_threadB-5 () Int 0


    11) 0


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    72) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-7 () Int 0


    65) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    117) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    0) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    115) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    69) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    0) 1


  (define-fun B_main-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    58) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    184) 1


  (define-fun B_threadA-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-6_main-1 () Int 0


    172) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    178) 1


  (define-fun B_threadA-6_threadB-3 () Int 0


    56) 1


  (define-fun B_threadB-4_main-3 () Int 0


    159) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    108) 1


  (define-fun S_threadB-4 () Int 0


    8) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    109) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    155) 1


  (define-fun B_threadB-1_main-1 () Int 0


    135) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    35) 1


  (define-fun B_main-7_threadA-1 () Int 0


    81) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    86) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    90) 1


  (define-fun B_main-4_threadA-1 () Int 0


    78) 1


  (define-fun RF_threadA-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-3_threadB-3 () Int 0


    215) 1


  (define-fun B_main-4_threadA-5 () Int 0


    107) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    52) 1


  (define-fun B_main-6_threadB-3 () Int 0


    154) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    25) 1


  (define-fun B_threadA-6_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    48) 1


  (define-fun B_threadB-1_threadA-7 () Int 0


    61) 1


  (define-fun S_threadB-3 () Int 0


    7) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    30) 1


  (define-fun B_threadB-5_main-0 () Int 0


    164) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    0) 0


  (define-fun RF_threadB-5_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-3 () Int 0


    216) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    212) 1


  (define-fun B_main-5_threadA-3 () Int 0


    93) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-1 () Int 0


    76) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-6_main-3 () Int 0


    174) 1


  (define-fun B_main-0_threadB-0 () Int 0


    126) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    34) 1


  (define-fun B_threadB-5_threadB-2 () Int 0


    211) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    28) 1


  (define-fun B_threadB-3_threadA-7 () Int 0


    63) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    96) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    42) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-5 () Int 0


    217) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    46) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-5_threadB-3 () Int 0


    213) 1


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-1 () Int 0


    208) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    134) 1


  (define-fun B_threadA-2_main-2 () Int 0


    83) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    2) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    18) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    22) 1


  (define-fun B_threadB-4_threadA-7 () Int 0


    64) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    210) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    203) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    151) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    144) 1


  (define-fun RF_threadB-2_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-3_main-4 () Int 0


    152) 1


  (define-fun B_threadB-5_threadB-4 () Int 0


    214) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    100) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-6_threadB-5 () Int 0


    0) 0


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    41) 1


  (define-fun B_main-6_threadA-7 () Int 0


    124) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    137) 1


  (define-fun B_threadB-3_main-2 () Int 0


    150) 1


  (define-fun B_threadA-2_main-3 () Int 0


    84) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun S_threadB-2 () Int 0


    3) 0


  (define-fun B_main-7_threadA-3 () Int 0


    95) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_threadA-1_threadA-7 () Int 0


    1) 1


  (define-fun B_main-6_threadB-4 () Int 0


    162) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_threadA-7_main-6 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    68) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    196) 1


  (define-fun B_threadA-2_main-0 () Int 0


    82) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    53) 1


  (define-fun B_main-6_threadB-0 () Int 0


    132) 1


  (define-fun B_main-6_threadB-1 () Int 0


    139) 1


  (define-fun B_threadA-6_threadB-4 () Int 0


    57) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    67) 1


  (define-fun B_threadB-6_main-4 () Int 0


    175) 1


  (define-fun M_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    91) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-7_main-0 () Int 0


    118) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    160) 1


  (define-fun B_threadA-0_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    1) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    29) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    49) 1


  (define-fun S_threadA-4 () Int 0


    9) 0


  (define-fun B_threadB-5_main-1 () Int 0


    165) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    195) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    17) 1


  (define-fun B_main-7_threadB-0 () Int 0


    133) 1


  (define-fun B_main-5_threadB-4 () Int 0


    161) 1


  (define-fun B_main-7_threadA-0 () Int 0


    74) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    1) 1


  (define-fun M_threadB-4 () Int 0


    3) 0


  (define-fun B_main-6_threadA-0 () Int 0


    73) 1


  (define-fun B_main-4_threadA-2 () Int 0


    85) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    206) 1


  (define-fun B_threadB-3_main-1 () Int 0


    149) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    37) 1


  (define-fun B_threadA-7_main-2 () Int 0


    120) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    102) 1


  (define-fun B_threadA-5_main-2 () Int 0


    105) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    209) 1


  (define-fun B_main-7_threadA-2 () Int 0


    88) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    0) 0


  (define-fun B_main-2_threadB-0 () Int 0


    128) 1


  (define-fun B_main-6_threadA-1 () Int 0


    80) 1


  (define-fun M_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    77) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    31) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    173) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-3_threadA-7 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_main-5_threadA-7 () Int 0


    123) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-5_main-4 () Int 0


    167) 1


  (define-fun S_threadA-6 () Int 0


    10) 0


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    201) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadB-6_threadA-7 () Int 0


    66) 1


  (define-fun B_main-4_threadA-0 () Int 0


    71) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-0 () Int 0


    171) 1


  (define-fun B_threadA-7_main-3 () Int 0


    121) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    51) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    16) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-0 () Int 0


    131) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    40) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    98) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    15) 1


  (define-fun B_main-6_threadA-4 () Int 0


    101) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    111) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    33) 1


  (define-fun B_threadA-6_main-1 () Int 0


    112) 1


  (define-fun B_threadA-6_main-3 () Int 0


    113) 1


  (define-fun B_threadB-5_main-3 () Int 0


    166) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    127) 1


  (define-fun RF_threadA-4_main-2 () Int 0


    1) 0


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-7 () Int 0


    125) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    47) 1


  (define-fun B_main-3_threadB-0 () Int 0


    129) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    20) 1


  (define-fun B_threadA-4_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    79) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    116) 1


  (define-fun B_main-4_threadA-6 () Int 0


    114) 1


  (define-fun B_main-3_threadA-0 () Int 0


    70) 1


  (define-fun B_threadB-2_threadA-7 () Int 0


    62) 1


  (define-fun B_threadB-2_main-1 () Int 0


    0) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    205) 1


  (define-fun B_main-6_threadA-2 () Int 0


    87) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-4 () Int 0


    202) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    43) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    156) 1


  (define-fun B_threadA-6_threadA-2 () Int 0


    197) 1


  (define-fun B_threadB-4_main-2 () Int 0


    158) 1


  (define-fun RF_threadA-3_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-0 () Int 0


    14) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    110) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    198) 1


  (define-fun B_main-1_threadA-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    146) 1


  (define-fun B_main-5_threadB-6 () Int 0


    176) 1


  (define-fun B_threadA-3_main-1 () Int 0


    0) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    21) 1


  (define-fun S_threadB-1 () Int 0


    2) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    50) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    39) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    97) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    147) 1


  (define-fun B_threadA-7_main-1 () Int 0


    119) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    153) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-6_threadA-3 () Int 0


    200) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    26) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    24) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    0) 1


  (define-fun B_threadA-6_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-3_main-0 () Int 0


    148) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    44) 1


  (define-fun B_main-6_threadB-5 () Int 0


    169) 1


) 0


(error "line 7444 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadA-2
dd1: threadA-3
dd1: threadA-4
dd1: threadA-6
dd1: threadA-1
dd1: threadB-1
dd1: threadB-2
dd1: threadB-3
dd1: threadB-5
Generate new schedule: 0x7fe7d3d08c40
222: 1
schPrefix: threadA 6
prefixMap: 1 0
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-1
RF: threadA 3 0
write: main-2
RF: threadA 4 0
write: main-2
RF: threadA 6 0
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: threadA-3
RF: threadB 3 1
write: main-2
RF: threadB 5 0
ccc7
Checking previous unsat schedules: 12
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3d009c0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0c5b0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d0c5b0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 1 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile17_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile17_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e08040
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e08040 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e02320
111: 11
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3e02320 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e02b30
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e02b30 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 8506 column 10: model is not available") 0
[Solver] (error "line 8506 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d007f0 threadA-1 1 
enforce0: 0x7fe7d3d009c0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile18_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile18_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f02440
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f02440 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f019f0
111: 11
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3f019f0 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile19_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile19_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c08990
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c08990 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0f4a0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c0f4a0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c07fd0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c07fd0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c08360
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c08360 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c11fc0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c11fc0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 0
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile20_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile20_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile21_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile21_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 1 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile22_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile22_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 2 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile23_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile23_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e08b10
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3e08b10 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e031b0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e031b0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e02fa0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e02fa0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e03090
111: 8
xx: main-0
xx: main-1
xx: main-2
xx: threadA-2
xx: threadA-3
xx: main-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e03090 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 9570 column 10: model is not available") 0
[Solver] (error "line 9570 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 2 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile24_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile24_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c12bf0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3c12bf0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c12e30
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c12e30 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c12f80
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3c12f80 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 0 
enforce2: 0x7fe7d3c06800 threadA-3 0 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3d00f50 threadB-3 0 
enforce2: 0x7fe7d3d00f50 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile25_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile25_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f00a90
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f00a90 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f08e10
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f08e10 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f08f90
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f08f90 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f09570
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f09570 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f09200
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f09200 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f092e0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f092e0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f09900
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f09900 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c13c80
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c13c80 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
RW: (assert (! (and  (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3f00140
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 10634 column 10: model is not available") 0
[Solver] (error "line 10634 column 10: model is not available")


(SCConsistent RW ASW) 0
end checksat!
ccc6
test1
0x7fe7d3e00000 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 2 
enforce2: 0x7fe7d3c06800 threadA-3 2 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3d00f50 threadB-3 0 
enforce2: 0x7fe7d3d00f50 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile26_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile26_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c18600
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3c18600 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c18ab0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c18ab0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d007f0 threadA-1 0 
enforce0: 0x7fe7d3c06490 threadA-2 0 
enforce0: 0x7fe7d3c06800 threadA-3 2 
enforce2: 0x7fe7d3c06800 threadA-3 2 
enforce0: 0x7fe7d3d009c0 threadB-1 0 
enforce0: 0x7fe7d3d00c40 threadB-2 0 
enforce0: 0x7fe7d3d00f50 threadB-3 1 
enforce2: 0x7fe7d3d00f50 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile27_0x7fe7d3e00000
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile27_0x7fe7d3e00000
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
Gurantee end: threadB-4 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e025d0
111: 10
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3e025d0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e03990
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e03990 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f00140
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c05e80
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c05e80
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e03a00
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: threadB-3
222
Add swRelation: 0x7fe7d3e03a00 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e03540
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e03540 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e03b40
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e03b40 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c04d70
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c04d70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c14ac0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c14ac0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
set new failed sch: 12 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In generateModel2 End!
### Solver Time: 584.142
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74393
Generate a new Executor: 0x7fe7d3c13e70 0x7fe7d3e037f0
Schedule: 0x7fe7d3c14730 5
For: main 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
For: threadA 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 5
    main 0
    main 1
    main 2
    main 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 7
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 0
Read Map: threadA 3 0
Read Map: threadB 1 0
Read Map: threadB 2 1

Prefix: threadA 2
Prefix: threadB 2

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3c13e70
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3d00db4 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3d0b1e0 0x7fe7d3d00db4 0

Write value1: main-1 0x7fe7d3d00db4 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3d00db8 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3d032f0 0x7fe7d3d00db8 0

Write value1: main-2 0x7fe7d3d00db8 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3c13e70
BeginFunc: 0x7fe7d3c13e70
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252
checker_addUses: 294 1 293

update load: 253 0
252 0 

checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 109 1 89
checker_addUses: 297 1 296

update load: 109 0
89 0 

checker_addUses: 300 1 299
BeginFunc: 0x7fe7d3c13e70
checker_addUses: 301 1 300
checker_addUses: 240 1 239

In checker_thread_begin: 0x103ed0000

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

Waitting for create thread 0x103ed0000
checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252
checker_addUses: 294 1 293

update load: 253 0
252 0 

checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 297 1 296
checker_addUses: 112 1 88
checker_addUses: 300 1 299

update load: 112 0
88 0 

checker_addUses: 301 1 300
checker_addUses: 113 1 112

In checker_thread_begin: 0x103f53000

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103ed0000
In add action: main-3
Waitting for create thread 0x103ed0000
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103f53000
Waitting for create thread 0x103f53000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

In add action: main-5
End add action! main-5
Waitting for create thread 0x103ed0000
checker_addUses: 120 1 115

update load: 120 0
115 0 

Waitting for create thread 0x103f53000
In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3d00db8 7 6!
In read action: 0x103ed0000
In add action: threadA-1
Tset: 2 2 0x103ed0000
0x103ed0000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1

add load: 6 threadA-1 1
In add action: main-6
End add action! main-6
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45
waiting read: 0x103ed0000 threadA-1
in update priority: 0x103ed0000

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3d00db8 7 48!
In read action: 0x103f53000
In add action: threadB-1
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In pre_read action: threadB-1
fetch expect value: 0x7fe7d3d00db8 0
hhhhh1
waiting read: 0x103ed0000 threadA-1
in update priority: 0x103ed0000

Read expect value: threadB-1 0x7fe7d3d00db8 0 0 0
End: 0x103f53000 threadB-1
In pre_read action: threadA-1
checker_addUses: 49 1 46
fetch expect value: 0x7fe7d3d00db8 0

update load: 49 0
46 0 

hhhhh1
checker_addUses: 50 1 45

Read expect value: threadA-1 0x7fe7d3d00db8 0 0 0

update load: 50 0
45 0 

End: 0x103ed0000 threadA-1
checker_addUses: 51 1 50
checker_addUses: 7 1 4

update load: 51 0
50 0 


update load: 7 0
4 0 

checker_addUses: 52 1 51
checker_addUses: 8 1 3

update load: 52 0
51 0 


update load: 8 0
3 0 

In atomic checker_preLoad: 0x7fe7d3d00db4 7 52!
checker_addUses: 9 1 8
In read action: 0x103f53000

update load: 9 0
8 0 

checker_addUses: 10 1 9
In add action: threadB-2

update load: 10 0
9 0 

Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
In atomic checker_preLoad: 0x7fe7d3d00db4 7 10!
In read action: 0x103ed0000
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In add action: threadA-2
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3d00db4 0
hhhhh1

Read expect value: threadA-2 0x7fe7d3d00db4 0 0 0
End: 0x103ed0000 threadA-2
checker_addUses: 11 1 8

update load: 11 0
8 0 

checker_addUses: 12 1 3
waiting read: 0x103f53000 
update load: 12 0
3 0 

threadB-2
checker_addUses: 13 1 12
in update priority: 0x103f53000

update load: 13 0
12 0 

checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-1 threadA-2 
nwait: 0, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3d00db4 1 7
In add action: threadA-3
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
waiting read: loads: 0x103f530001  threadB-23

in update priority: set Reachability map 111: 0x103f530000x7fe7d3d042b0
 3 1 0
hhhhh1

expect value rmw_add: threadA 3 0 !1!

update buffer: 0x7fe7d3e034e0 0x7fe7d3d00db4 1
update buffer: 0x7fe7d3d07290 0x7fe7d3d00db4 1
update buffer: 0x7fe7d3d0b1e0 0x7fe7d3d00db4 1
In pre_read action: checker_addUses: 17 1 8
threadB-2
fetch expect value: 
update load: 17 0
8 0 

0x7fe7d3d00db4 1
hhhhh1
checker_addUses: 18 1 12

Read expect value: threadB-2 0x7fe7d3d00db4 1 1 1
End: 0x103f53000 threadB-2
checker_addUses: 53 1 50

update load: 18 0
12 0 


update load: 53 0
50 0 

checker_addUses: 19 1 18
checker_addUses: 54 1 45

update load: 19 0
18 0 


update load: 54 0
45 0 

checker_addUses: 20 2 16
checker_addUses: 55 1 54

update load: 55 0
54 0 


update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 56 3 52
checker_addUses: 21 1 20

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 

update load: 21 1
20 0 
threadA-3 
nwait: 1, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

checker_addUses: 58 1 57
checker_addUses: 30 1 4

update load: 58 0
57 0 

In rmw_add: 0x7fe7d3d00db4 1 7

update load: 30 0
4 0 22 34 

checker_addUses: 31 1 30
In add action: threadB-3

update load: 31 0
30 0 22 34 

In atomic checker_preLoad: 0x7fe7d3d00db8 Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
7 31!
In read action: 0x103ed0000
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d029f0 3 1 0
get value: 0x7fe7d3d07290 0x7fe7d3d00db4 1

expect value rmw_add: threadB 3 1 !1!

update buffer: 0x7fe7d3e034e0 0x7fe7d3d00db4 2
update buffer: 0x7fe7d3d07290 0x7fe7d3d00db4 2
update buffer: 0x7fe7d3d0b1e0 0x7fe7d3d00db4 2
checker_addUses: 59 1 50

update load: 59 0
50 0 

In add action: threadA-4
checker_addUses: 60 1 54
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 

update load: 60 0
54 0 

End add action! threadA-4
loads: 0 4
checker_addUses: 61 1 60

add load: 31 threadA-4 1

update load: 61 0
60 0 

checker_addUses: 62 2 58

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 63 1 62

update load: 63 1
62 0 
threadB-3 
checker_addUses: 65 1 50

update load: 65 1
50 0 63 
threadB-3 
checker_addUses: 66 1 65

update load: 66 1
65 0 63 
threadB-3 
In atomic checker_preStore: 0x7fe7d3d00db4 0 7!
In write: 0x103f53000
In add action: threadB-4
waiting read: 0x103ed0000End add action! threadB-4
 action: threadB-4
loads: threadA-4
1 in update priority: 40x103ed0000

set Reachability map 111: 0x7fe7d3d029f0 4 1 1
update buffer: 0x7fe7d3e034e0 0x7fe7d3d00db4 0
update buffer: 0x7fe7d3d07290 0x7fe7d3d00db4 0
update buffer: 0x7fe7d3d0b1e0 0x7fe7d3d00db4 0

Write value1: threadB-4 0x7fe7d3d00db4 0!
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 
checker_addUses: 68 1 46

update load: 68 1
46 0 63 
threadB-3 
checker_addUses: 69 1 68

update load: 69 1
68 0 63 
threadB-3 
In rmw_add: 0x7fe7d3d00db8 1 7
In add action: threadB-5
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3d029f0 5 2 2
waiting read: 0x103ed0000 threadA-4
in update priority: 0x103ed0000
get value: 0x7fe7d3d07720 0x7fe7d3d00db8 0

expect value rmw_add: threadB 5 0 !1!

update buffer: 0x7fe7d3e01b10 0x7fe7d3d00db8 1
update buffer: 0x7fe7d3d07720 0x7fe7d3d00db8 1
update buffer: 0x7fe7d3d032f0 0x7fe7d3d00db8 1
In pre_read action: checker_addUses: 70 1 46
threadA-4
get value: 0x7fe7d3e01b10 0x7fe7d3d00db8 1

update load: 70 1
46 0 63 
threadB-3 

Read expect value: threadA-4 0x7fe7d3d00db8 1 1 1
End: 0x103ed0000 threadA-4
checker_addUses: 85 1 84
checker_addUses: 32 1 4

update load: 85 1
84 0 63 
threadB-3 

update load: 32 0
4 0 22 34 

var = 1
In checker_thread_end
Thread_end_action: 0x103f53000
checker_addUses: 33 2 31
erase enabledThreads: threadB-6
In add action: threadB-6

update load: 33 2
31 6 0 22 34 
threadA-4 threadA-1 
End add action! threadB-6
checker_addUses: 34 1 33
checker_addUses: 303 1 292
checker_addUses: 304 1 292

update load: 34 2
33 0 22 34 
threadA-4 threadA-1 
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3c13e70
In checker_thread_end
Thread_end_action: 0x103ed0000
erase enabledThreads: threadA-5
In add action: threadA-5
End add action! threadA-5
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3c13e70
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 1
threadB-1 0
threadB-2 1
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3c14730
vec1: 1 2
vec1: 1 4
vec1: 0 4
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add read: threadA-4
vec2: threadA 1 3
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-5
vec2: threadB 1 6
vec2: main 0 6
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
vec2: threadA 0 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 8
vec2: main 0 8
add value: threadA-3 2
add value: threadA-3 0
add value: threadA-3 0
add value: threadB-3 1
add value: threadB-3 0
add value: threadB-3 0
fMap: threadA 3 0
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadA 2 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d03c90 threadB-1 0 
enforce1: 0x7fe7d3d03e40 threadB-2 1 
enforce1: 0x7fe7d3e001c0 threadA-1 0 
enforce1: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 0 
enforce2: 0x7fe7d3f082c0 threadA-3 0 
enforce0: 0x7fe7d3e09190 threadB-3 0 
enforce2: 0x7fe7d3e09190 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a280
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0a280 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a3e0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3e0a3e0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a450
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0a450 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a350
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3e0a350 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0e530
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d0e530 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0e730
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d0e730 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0e9c0
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3d0e9c0 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0eb80
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d0eb80 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 896 column 10: model is not available") 0
[Solver] (error "line 896 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c13e70 0x7fe7d3d00000 6
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
test2
ccc7
fMap: threadA 3 2
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadA 2 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d03c90 threadB-1 0 
enforce1: 0x7fe7d3d03e40 threadB-2 1 
enforce1: 0x7fe7d3e001c0 threadA-1 0 
enforce1: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 2 
enforce2: 0x7fe7d3f082c0 threadA-3 2 
enforce0: 0x7fe7d3e09190 threadB-3 0 
enforce2: 0x7fe7d3e09190 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0bc30
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3c0bc30 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
fMap: threadA 3 2
fMap: threadB 3 1
fMap: threadB 1 0
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadA 2 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 1
prefix & reads: 4 2
enforce1: 0x7fe7d3d03c90 threadB-1 0 
enforce1: 0x7fe7d3d03e40 threadB-2 1 
enforce1: 0x7fe7d3e001c0 threadA-1 0 
enforce1: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 2 
enforce2: 0x7fe7d3f082c0 threadA-3 2 
enforce0: 0x7fe7d3e09190 threadB-3 1 
enforce2: 0x7fe7d3e09190 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0e800
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d0e800 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
add value: threadA-4 1
add value: threadA-4 0
add value: threadB-5 0
fMap: threadA 4 0
fMap: threadB 5 0
fMap: threadB 1 0
fMap: threadB 2 1
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadB 3 1
fMap: threadA 3 0
checking: read:val
0: threadA-4 : 0
1: threadB-5 : 0
prefix & reads: 6 2
enforce1: 0x7fe7d3d03c90 threadB-1 0 
enforce1: 0x7fe7d3d03e40 threadB-2 1 
enforce1: 0x7fe7d3e001c0 threadA-1 0 
enforce1: 0x7fe7d3e08ed0 threadA-2 0 
enforce1: 0x7fe7d3e09190 threadB-3 1 
enforce1: 0x7fe7d3f082c0 threadA-3 0 
enforce0: 0x7fe7d3d0c650 threadA-4 0 
enforce0: 0x7fe7d3e098b0 threadB-5 0 
enforce2: 0x7fe7d3e09190 threadB-3 1 
enforce2: 0x7fe7d3e098b0 threadB-5 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0c6f0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0c6f0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0c850
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3e0c850 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-4 0
In addRWRelation: 

xxxx read: threadA-4 1 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0c7c0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0c7c0 main-2 threadA-4
xxx: threadA-4 (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1)))))
ttt: (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0cdf0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0cdf0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0d4f0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3e0d4f0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f03e90
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f03e90 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0a740
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3f0a740 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0dea0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3f0dea0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadB-5 0
In addRWRelation: 

xxxx read: threadB-5 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0e450
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3f0e450 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0e580
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f0e580 main-2 threadB-5
xxx: threadB-5 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0e7b0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3f0e7b0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-4 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0a7b0
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f0a7b0 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0e960
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3f0e960 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-4_main-2 1) (= B_threadA-4_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-4 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadB-5_main-2 1) (= B_threadB-5_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-5 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))):named RW))

Adding SW Constraints: 13
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_main-6_threadB-5 () Int 0


    139) 1


  (define-fun B_threadB-1_main-3 () Int 0


    105) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    114) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    109) 1


  (define-fun B_main-4_threadA-4 () Int 0


    83) 1


  (define-fun B_threadB-3_main-4 () Int 0


    122) 1


  (define-fun RF_threadB-2_threadB-4 () Int 0


    0) 0


  (define-fun B_threadB-5_threadB-4 () Int 0


    179) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    84) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-5_main-1 () Int 0


    88) 1


  (define-fun B_threadA-4_main-2 () Int 0


    0) 1


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    39) 1


  (define-fun B_main-5_threadB-5 () Int 0


    138) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    106) 1


  (define-fun B_threadA-2_main-3 () Int 0


    68) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_main-2 () Int 0


    120) 1


  (define-fun S_threadA-1 () Int 0


    2) 0


  (define-fun S_threadB-2 () Int 0


    6) 0


  (define-fun B_main-7_threadA-3 () Int 0


    79) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_main-6_threadB-4 () Int 0


    132) 1


  (define-fun RF_threadB-3_threadB-4 () Int 0


    0) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    107) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-4 () Int 0


    133) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    166) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_main-1_threadA-0 () Int 0


    52) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    172) 1


  (define-fun B_threadA-2_main-0 () Int 0


    66) 1


  (define-fun B_threadB-2_main-3 () Int 0


    113) 1


  (define-fun B_main-5_threadB-2 () Int 0


    115) 1


  (define-fun S_threadA-2 () Int 0


    3) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-0 () Int 0


    101) 1


  (define-fun B_main-4_threadA-3 () Int 0


    76) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-6_threadB-1 () Int 0


    108) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    140) 1


  (define-fun B_threadA-3_main-0 () Int 0


    73) 1


  (define-fun RF_threadB-5_main-2 () Int 0


    1) 0


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-3_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    112) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    1) 0


  (define-fun B_threadA-1_main-0 () Int 0


    59) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    51) 1


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    43) 1


  (define-fun B_threadB-6_main-4 () Int 0


    145) 1


  (define-fun M_threadA-3 () Int 0


    1) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun S_threadA-3 () Int 0


    4) 0


  (define-fun B_threadA-3_main-3 () Int 0


    75) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    90) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    130) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    0) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadA-1 () Int 0


    18) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-2 () Int 0


    28) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    47) 1


  (define-fun B_threadB-2_main-0 () Int 0


    110) 1


  (define-fun B_threadB-5_main-1 () Int 0


    135) 1


  (define-fun S_threadA-4 () Int 0


    9) 0


  (define-fun B_threadA-5_main-0 () Int 0


    87) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    173) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    16) 1


  (define-fun B_main-7_threadB-0 () Int 0


    102) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-0 () Int 0


    58) 1


  (define-fun B_main-5_threadB-4 () Int 0


    131) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    176) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadB-4_main-1 () Int 0


    127) 1


  (define-fun B_main-6_threadA-0 () Int 0


    57) 1


  (define-fun B_main-4_threadA-2 () Int 0


    69) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    22) 1


  (define-fun M_threadB-4 () Int 0


    3) 0


  (define-fun B_threadB-3_main-1 () Int 0


    119) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    78) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    165) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    0) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    35) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadA-2_main-1 () Int 0


    0) 1


  (define-fun B_main-4_threadB-0 () Int 0


    99) 1


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun B_threadB-1_threadA-3 () Int 0


    33) 1


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    34) 1


  (define-fun B_main-7_threadA-4 () Int 0


    86) 1


  (define-fun B_threadA-5_main-2 () Int 0


    89) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    168) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_main-7_threadA-2 () Int 0


    72) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    0) 0


  (define-fun B_main-2_threadB-0 () Int 0


    97) 1


  (define-fun B_threadB-6_threadA-3 () Int 0


    36) 1


  (define-fun B_main-6_threadA-1 () Int 0


    64) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-4 () Int 0


    0) 0


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun M_threadB-5 () Int 0


    1) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    20) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    26) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadA-4_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-1_main-3 () Int 0


    61) 1


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    30) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    143) 1


  (define-fun B_main-6_threadB-6 () Int 0


    147) 1


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun RF_threadB-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-0 () Int 0


    12) 1


  (define-fun B_threadB-5_main-4 () Int 0


    137) 1


  (define-fun S_threadB-5 () Int 0


    10) 0


  (define-fun B_main-5_threadA-0 () Int 0


    56) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    175) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-4_threadA-0 () Int 0


    55) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    27) 1


  (define-fun B_threadB-6_main-0 () Int 0


    141) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    49) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    15) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    0) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadB-0 () Int 0


    100) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    53) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-1 () Int 0


    38) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    154) 1


  (define-fun B_threadA-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    82) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    14) 1


  (define-fun B_main-6_threadA-4 () Int 0


    85) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    32) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-5_main-3 () Int 0


    136) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    96) 1


  (define-fun RF_threadA-4_main-2 () Int 0


    1) 0


  (define-fun B_threadB-6_main-1 () Int 0


    142) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    148) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    45) 1


  (define-fun B_threadB-4_main-3 () Int 0


    129) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    92) 1


  (define-fun B_main-3_threadB-0 () Int 0


    98) 1


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    63) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    93) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun S_threadB-4 () Int 0


    8) 0


  (define-fun B_threadB-0_threadA-0 () Int 0


    11) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    125) 1


  (define-fun B_threadB-1_main-1 () Int 0


    104) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    1) 1


  (define-fun B_main-7_threadA-1 () Int 0


    65) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-3_threadA-0 () Int 0


    54) 1


  (define-fun B_main-5_threadA-2 () Int 0


    70) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-1 () Int 0


    111) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    74) 1


  (define-fun B_main-4_threadA-1 () Int 0


    62) 1


  (define-fun B_main-6_threadA-2 () Int 0


    71) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-4_threadA-5 () Int 0


    91) 1


  (define-fun RF_threadA-1_threadB-5 () Int 0


    0) 0


  (define-fun B_threadA-4_threadB-4 () Int 0


    41) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    50) 1


  (define-fun B_main-6_threadB-3 () Int 0


    124) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    24) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    46) 1


  (define-fun B_threadB-4_main-0 () Int 0


    126) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_main-2 () Int 0


    128) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun S_threadB-3 () Int 0


    7) 0


  (define-fun RF_threadA-3_threadB-4 () Int 0


    0) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    29) 1


  (define-fun B_threadB-5_main-0 () Int 0


    134) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-2_threadB-1 () Int 0


    164) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    94) 1


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    174) 1


  (define-fun B_threadB-3_threadB-3 () Int 0


    180) 1


  (define-fun RF_threadB-5_threadB-5 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    19) 1


  (define-fun B_threadA-3_threadA-3 () Int 0


    182) 1


  (define-fun B_main-6_threadB-2 () Int 0


    116) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    177) 1


  (define-fun B_main-5_threadB-6 () Int 0


    146) 1


  (define-fun B_threadA-3_main-1 () Int 0


    0) 1


  (define-fun B_main-5_threadA-3 () Int 0


    77) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    1) 1


  (define-fun S_threadB-1 () Int 0


    5) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    48) 1


  (define-fun B_threadA-1_main-1 () Int 0


    60) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    37) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    31) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-0 () Int 0


    95) 1


  (define-fun B_threadB-6_main-3 () Int 0


    144) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun RF_threadB-2_threadA-3 () Int 0


    1) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadB-5_threadB-2 () Int 0


    170) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-1 () Int 0


    81) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    80) 1


  (define-fun B_main-7_threadB-2 () Int 0


    117) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    123) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    40) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-0_threadA-5 () Int 0


    44) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    1) 0


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-1 () Int 0


    167) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    25) 1


  (define-fun B_threadB-5_threadB-3 () Int 0


    178) 1


  (define-fun B_threadB-5_threadB-5 () Int 0


    181) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    103) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    23) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-2_main-2 () Int 0


    67) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    2) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    0) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    17) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    21) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    169) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    171) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    42) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-0 () Int 0


    118) 1


  (define-fun B_threadB-3_main-3 () Int 0


    121) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


) 0


(error "line 1800 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadB-1
dd1: threadB-2
dd1: threadA-4
dd1: threadA-1
dd1: threadA-2
dd1: threadB-3
dd1: threadB-5
dd1: threadA-3
Generate new schedule: 0x7fe7d3f10e90
222: 2
schPrefix: threadA 4
schPrefix: threadB 5
curPrefix: threadA 2
curPrefix: threadB 2
prefixMap: 2 2
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-1
RF: threadA 3 0
write: main-2
RF: threadA 4 0
write: main-2
RF: threadB 1 0
write: threadA-3
RF: threadB 2 1
write: threadA-3
RF: threadB 3 1
write: main-2
RF: threadB 5 0
ccc7
Checking previous unsat schedules: 15
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3d03c90 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3e001c0 threadA-1 1 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0d740
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f0d740 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0d7b0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3f0d7b0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0da50
111: 11
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
xx: threadB-5
222
Add swRelation: 0x7fe7d3f0da50 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2700 column 10: model is not available") 0
[Solver] (error "line 2700 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3c13e70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e001c0 threadA-1 1 
enforce0: 0x7fe7d3d03c90 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04b20
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d04b20 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 0
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 1 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f05ac0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f05ac0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f05c00
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3f05c00 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f05dd0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f05dd0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 1 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a7c0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0a7c0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0d1e0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3e0d1e0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0d850
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0d850 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 1 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0eaf0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f0eaf0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 2 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0cfc0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d0cfc0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c176d0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3c176d0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0d3d0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f0d3d0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0d550
111: 9
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
222
Add swRelation: 0x7fe7d3f0d550 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 3602 column 10: model is not available") 0
[Solver] (error "line 3602 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c13e70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 2 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c12db0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3c12db0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 2 
enforce2: 0x7fe7d3f082c0 threadA-3 2 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 0 
enforce0: 0x7fe7d3e09190 threadB-3 1 
enforce2: 0x7fe7d3e09190 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0d720
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0d720 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0a950
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e0a950 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0d420
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0d420 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
Gurantee end: threadB-4 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0a600
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3f0a600 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d01d30
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d01d30 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 0 
enforce2: 0x7fe7d3f082c0 threadA-3 0 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 1 
enforce0: 0x7fe7d3e09190 threadB-3 0 
enforce2: 0x7fe7d3e09190 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0b830
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0b830 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0b8a0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: main-3
xx: threadA-2
xx: threadA-3
222
Add swRelation: 0x7fe7d3e0b8a0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0beb0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e0beb0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0bd00
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3e0bd00 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0c610
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e0c610 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0bf80
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e0bf80 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d029f0
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0c240
111: 10
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: main-0
xx: threadB-0
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-4
222
Add swRelation: 0x7fe7d3e0c240 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d042b0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0da40
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e0da40 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3d029f0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d042b0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 4504 column 10: model is not available") 0
[Solver] (error "line 4504 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c13e70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 2 
enforce2: 0x7fe7d3f082c0 threadA-3 2 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 1 
enforce0: 0x7fe7d3e09190 threadB-3 0 
enforce2: 0x7fe7d3e09190 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c18cd0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3c18cd0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3e001c0 threadA-1 0 
enforce0: 0x7fe7d3e08ed0 threadA-2 0 
enforce0: 0x7fe7d3f082c0 threadA-3 2 
enforce2: 0x7fe7d3f082c0 threadA-3 2 
enforce0: 0x7fe7d3d03c90 threadB-1 0 
enforce0: 0x7fe7d3d03e40 threadB-2 1 
enforce0: 0x7fe7d3e09190 threadB-3 1 
enforce2: 0x7fe7d3e09190 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3c13e70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3c13e70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d04150
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d04150
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f04620
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f04620 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
set new failed sch: 15 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In generateModel2 End!
### Solver Time: 849.72
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74394
Generate a new Executor: 0x7fe7d3e0ff40 0x7fe7d3f0d9c0
Schedule: 0x7fe7d3e049b0 5
For: main 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
For: threadA 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 5
    main 0
    main 1
    main 2
    main 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 7
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 2
Read Map: threadB 1 0
Read Map: threadB 2 0
Read Map: threadB 3 0

Prefix: threadA 2
Prefix: threadB 2

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3e0ff40
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3c07534 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3c0bca0 0x7fe7d3c07534 0

Write value1: main-1 0x7fe7d3c07534 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3c07538 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3c12d20 0x7fe7d3c07538 0

Write value1: main-2 0x7fe7d3c07538 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3e0ff40
BeginFunc: 0x7fe7d3e0ff40
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 109 1 89
checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 301 1 300

In checker_thread_begin: 0x103ed0000

update load: 109 0
89 0 

BeginFunc: 0x7fe7d3e0ff40
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

Waitting for create thread 0x103ed0000
checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 294 1 293
checker_addUses: 253 1 252
checker_addUses: 295 1 292

update load: 253 0
252 0 

checker_addUses: 296 1 291
checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 112 1 88
checker_addUses: 301 1 300

update load: 112 0
88 0 


In checker_thread_begin: 0x103f53000
checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103ed0000
In add action: main-3
End add action! main-3
Waitting for create thread 0x103ed0000
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103f53000
Waitting for create thread 0x103f53000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

In add action: main-5
Waitting for create thread 0x103ed0000
End add action! main-5
checker_addUses: 120 1 115

update load: 120 0
115 0 

Waitting for create thread 0x103f53000
In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3c07538 7 6!
In read action: 0x103ed0000
In add action: threadA-1
Tset: 2 2 0x103ed0000
0x103ed0000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1

add load: 6 threadA-1 1
In add action: main-6
End add action! main-6
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

waiting read: 0x103ed0000 threadA-1
in update priority: 0x103ed0000
checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3c07538 7 48!
In read action: 0x103f53000
In add action: threadB-1
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In pre_read action: threadB-1
fetch expect value: 0x7fe7d3c07538 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3c07538 0 0 0
End: 0x103f53000 threadB-1
checker_addUses: 49 1 46

update load: 49 0
46 0 

waiting read: 0x103ed0000 checker_addUses: 50 1 45
threadA-1
in update priority: 0x103ed0000

update load: 50 0
45 0 

checker_addUses: 51 1 50

update load: 51 0
50 0 

checker_addUses: 52 1 51

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3c07534 7 52!
In read action: 0x103f53000
In add action: threadB-2
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3c07534 0
hhhhh1

Read expect value: threadB-2 0x7fe7d3c07534 0 0 0
waiting read: 0x103ed0000 End: 0x103f53000 threadB-2
threadA-1
in update priority: 0x103ed0000
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 54 0
45 0 

checker_addUses: 55 1 54

update load: 55 0
54 0 

checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 
nwait: 0, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

checker_addUses: 58 1 57

update load: 58 0
57 0 

In rmw_add: 0x7fe7d3c07534 1 7
waiting read: 0x103ed0000 threadA-1
in update priority: 0x103ed0000
In add action: threadB-3
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d06390 3 1 0
hhhhh1

expect value rmw_add: threadB 3 0 !1!

update buffer: 0x7fe7d3e09fb0 0x7fe7d3c07534 1
update buffer: 0x7fe7d3d06610 0x7fe7d3c07534 1
update buffer: 0x7fe7d3c0bca0 0x7fe7d3c07534 1
In pre_read action: checker_addUses: 59 1 50
threadA-1

update load: 59 0
50 0 

fetch expect value: 0x7fe7d3c07538 0
hhhhh1
checker_addUses: 60 1 54

Read expect value: threadA-1 0x7fe7d3c07538 0 0 0

update load: 60 0
54 0 

End: 0x103ed0000 threadA-1
checker_addUses: 61 1 60
checker_addUses: 7 1 4

update load: 61 0
60 0 


update load: 7 0
4 0 

checker_addUses: 62 2 58
checker_addUses: 8 1 3

update load: 8 0
3 0 


update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 9 1 8
checker_addUses: 63 1 62

update load: 9 0
8 0 


update load: 63 1
62 0 
threadB-3 
checker_addUses: 10 1 9

update load: 10 0
9 0 

In atomic checker_preLoad: 0x7fe7d3c07534 7 10!
In read action: 0x103ed0000
checker_addUses: 72 1 46

update load: 72 0
46 0 64 76 

In add action: threadA-2
checker_addUses: 73 1 72
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 

update load: 73 0
72 0 64 76 

In atomic checker_preLoad: 0x7fe7d3c07538 End add action! threadA-2
7loads:  073 !
2
In read action: 0x103f53000

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3c07534 2

Read expect value: threadA-2 0x7fe7d3c07534 2 2 2
End: 0x103ed0000 threadA-2
checker_addUses: 11 1 8
In add action: threadB-4

update load: 11 0
8 0 

checker_addUses: 12 1 3
Tset: 3 3 0x103f53000
0x103ed0000 0x103f53000 0x7fff7d800300 

update load: 12 0
3 0 

End add action! threadB-4
loads: 0 checker_addUses: 13 1 12
4

update load: 13 0
12 0 


add load: 73 threadB-4 1
checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-2 threadA-1 
nwait: 2, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3c07534 1 7
In add action: threadA-3
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3e0e880 3 1 0
waiting read: 0x103f53000 threadB-4
in update priority: 0x103f53000
get value: 0x7fe7d3e09fb0 0x7fe7d3c07534 1

expect value rmw_add: threadA 3 1 !1!

update buffer: 0x7fe7d3e09fb0 0x7fe7d3c07534 2
update buffer: 0x7fe7d3d06610 0x7fe7d3c07534 2
update buffer: 0x7fe7d3c0bca0 0x7fe7d3c07534 2
checker_addUses: 17 1 8
In pre_read action: 
update load: 17 0
8 0 

threadB-4
checker_addUses: 18 1 12

update load: 18 0
12 0 

checker_addUses: 19 1 18

update load: 19 0
18 0 

get value: 0x7fe7d3d06670 0x7fe7d3c07538 0
checker_addUses: 20 2 16

Read expect value: threadB-4 0x7fe7d3c07538 0 0 0
End: 0x103f53000 threadB-4

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 74 1 46
checker_addUses: 21 1 20

update load: 74 0
46 0 64 76 


update load: 21 1
20 0 
threadA-3 
checker_addUses: 75 2 73
checker_addUses: 23 1 8

update load: 75 2
73 48 0 64 76 
threadB-4 threadB-1 

update load: 23 1
8 0 21 
threadA-3 
checker_addUses: 76 1 75
checker_addUses: 24 1 23

update load: 24 1
23 0 21 
threadA-3 

update load: 76 2
75 0 64 76 
threadB-4 threadB-1 
In atomic checker_preStore: 0x7fe7d3c07534 0 7!
In write: 0x103ed0000
In thread_yield_action!
Begin thread yield!
In thread yield!
In add action: threadA-4
End add action! threadA-4
action: threadA-4
loads: 1 4
set Reachability map 111: 0x7fe7d3e0e880 4 1 1
In add action: threadB-5
update buffer: 0x7fe7d3e09fb0 0x7fe7d3c07534 0
update buffer: 0x7fe7d3d06610 0x7fe7d3c07534 0
update buffer: 0x7fe7d3c0bca0 0x7fe7d3c07534 0

Write value1: threadA-4 0x7fe7d3c07534 0!
End add action! threadB-5
End thread yield!
checker_addUses: 25 1 8

update load: 25 1
8 0 21 
threadA-3 
checker_addUses: 26 1 4

update load: 26 1
4 0 21 
threadA-3 
checker_addUses: 27 1 26

update load: 27 1
26 0 21 
threadA-3 
In rmw_add: 0x7fe7d3c07538 1 7
In add action: threadA-5
Tset: 3 3 0x103ed0000
0x103ed0000 0x103f53000 0x7fff7d800300 
End add action! threadA-5

add load: 27 threadA-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3e0e880 5 2 2
get value: 0x7fe7d3e0b970 0x7fe7d3c07538 0

expect value rmw_add: threadA 5 0 !1!

update buffer: 0x7fe7d3e0b970 0x7fe7d3c07538 1
update buffer: 0x7fe7d3d06670 0x7fe7d3c07538 1
update buffer: 0x7fe7d3c12d20 0x7fe7d3c07538 1
checker_addUses: 28 1 4

update load: 28 1
4 0 21 
threadA-3 
In checker_thread_end
Thread_end_action: 0x103ed0000
erase enabledThreads: threadA-6
In add action: threadA-6
End add action! threadA-6
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e0ff40
checker_addUses: 72 1 46

update load: 72 2
46 0 64 76 
threadB-4 threadB-1 
checker_addUses: 73 1 72

update load: 73 2
72 0 64 76 
threadB-4 threadB-1 
In atomic checker_preLoad: 0x7fe7d3c07538 7 73!
In read action: 0x103f53000
In add action: threadB-6
Tset: 2 2 0x103f53000
0x103f53000 0x7fff7d800300 
End add action! threadB-6
loads: 2 6
set Reachability map 111: 0x7fe7d3d06390 6 2 1

add load: 73 threadB-6 1
In pre_read action: threadB-6
get value: 0x7fe7d3d06670 0x7fe7d3c07538 1

Read expect value: threadB-6 0x7fe7d3c07538 1 1 1
End: 0x103f53000 threadB-6
checker_addUses: 74 1 46

update load: 74 2
46 0 64 76 
threadB-4 threadB-1 
checker_addUses: 75 2 73

update load: 75 3
73 48 0 64 76 
threadB-4 threadB-1 threadB-6 
checker_addUses: 76 1 75

update load: 76 3
75 0 64 76 
threadB-4 threadB-1 threadB-6 
checker_addUses: 85 1 84

update load: 85 1
84 0 63 
threadB-3 
var = 1
In checker_thread_end
Thread_end_action: 0x103f53000
erase enabledThreads: threadB-7
In add action: threadB-7
End add action! threadB-7
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e0ff40
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 2
threadA-3 1
threadA-4 0
threadA-5 0
threadB-1 0
threadB-2 0
threadB-3 0
threadB-4 0
threadB-6 1
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3e049b0
vec1: 1 2
vec1: 1 4
vec1: 0 4
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add read: threadA-5
vec2: threadA 1 3
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-4
vec2: threadB 1 6
vec2: main 0 6
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-5
vec2: threadA 0 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-4
add read: threadB-6
vec2: threadB 1 8
vec2: main 0 8
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-5
vec2: threadA 0 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-4
add prefix: threadB-6
vec2: threadB 0 9
vec2: main 0 9
add value: threadA-3 0
add value: threadA-3 1
add value: threadA-3 0
add value: threadB-3 2
add value: threadB-3 0
add value: threadB-3 0
fMap: threadA 3 0
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 2 2
fMap: threadA 1 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d08350 threadB-1 0 
enforce1: 0x7fe7d3d08520 threadB-2 0 
enforce1: 0x7fe7d3e06a70 threadA-2 2 
enforce1: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06bb0 threadA-3 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 0 
enforce2: 0x7fe7d3d06cc0 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0f230
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d0f230 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f10360
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f10360 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f10780
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f10780 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f10850
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3f10850 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f10bf0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f10bf0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
fMap: threadA 3 0
fMap: threadB 3 2
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 2 2
fMap: threadA 1 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 2
prefix & reads: 4 2
enforce1: 0x7fe7d3d08350 threadB-1 0 
enforce1: 0x7fe7d3d08520 threadB-2 0 
enforce1: 0x7fe7d3e06a70 threadA-2 2 
enforce1: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06bb0 threadA-3 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 2 
enforce2: 0x7fe7d3d06cc0 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
fMap: threadA 3 1
fMap: threadB 3 2
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 2 2
fMap: threadA 1 0
checking: read:val
0: threadA-3 : 1
1: threadB-3 : 2
prefix & reads: 4 2
enforce1: 0x7fe7d3d08350 threadB-1 0 
enforce1: 0x7fe7d3d08520 threadB-2 0 
enforce1: 0x7fe7d3e06a70 threadA-2 2 
enforce1: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce0: 0x7fe7d3d06cc0 threadB-3 2 
enforce2: 0x7fe7d3d06cc0 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0f0b0
111: 8
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e0f0b0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0f400
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e0f400 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
Gurantee end: threadA-4 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0f910
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e0f910 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0f5e0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e0f5e0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
add value: threadA-5 0
add value: threadB-4 1
add value: threadB-4 0
fMap: threadA 5 0
fMap: threadB 4 1
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 2 2
fMap: threadA 3 1
fMap: threadA 1 0
checking: read:val
0: threadA-5 : 0
1: threadB-4 : 1
prefix & reads: 6 2
enforce1: 0x7fe7d3d06cc0 threadB-3 0 
enforce1: 0x7fe7d3d08350 threadB-1 0 
enforce1: 0x7fe7d3d08520 threadB-2 0 
enforce1: 0x7fe7d3e06a70 threadA-2 2 
enforce1: 0x7fe7d3e06bb0 threadA-3 1 
enforce1: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3f09e50 threadA-5 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3f09e50 threadA-5 0 
enforce0: 0x7fe7d3d04c70 threadB-4 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadB-4 1
In addRWRelation: 

xxxx read: threadB-4 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0e7e0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c0e7e0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-4 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0b8a0
111: 10
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
xx: threadA-5
222
Add swRelation: 0x7fe7d3c0b8a0 threadA-5 threadB-4
xxx: threadB-4 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c18220
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c18220 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0e400
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c0e400 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c182f0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c182f0 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0e8e0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c0e8e0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c15860
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c15860 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c183f0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c183f0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c159c0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c159c0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
add value: threadB-6 1
add value: threadB-6 0
fMap: threadB 6 0
fMap: threadB 4 0
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 2 2
fMap: threadA 3 1
fMap: threadA 1 0
fMap: threadA 5 0
checking: read:val
0: threadB-6 : 0
prefix & reads: 8 1
enforce1: 0x7fe7d3d04c70 threadB-4 0 
enforce1: 0x7fe7d3d06cc0 threadB-3 0 
enforce1: 0x7fe7d3d08350 threadB-1 0 
enforce1: 0x7fe7d3d08520 threadB-2 0 
enforce1: 0x7fe7d3e06a70 threadA-2 2 
enforce1: 0x7fe7d3e06bb0 threadA-3 1 
enforce1: 0x7fe7d3e0f360 threadA-1 0 
enforce1: 0x7fe7d3f09e50 threadA-5 0 
enforce0: 0x7fe7d3f0e150 threadB-6 0 
enforce2: 0x7fe7d3d04c70 threadB-4 0 
enforce2: 0x7fe7d3d08350 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 9
Add RW: threadB-4 0
In addRWRelation: 

xxxx read: threadB-4 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0b6d0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d0b6d0 main-2 threadB-4
xxx: threadB-4 (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
ttt: (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e068b0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e068b0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e062b0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e062b0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e06370
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e06370 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0efb0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e0efb0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e0e960
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e0e960 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e074a0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e074a0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e064b0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e064b0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
Checking previous unsat schedules: 20
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3d08350 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14350
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e14350 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-1 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e149f0
111: 10
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
xx: threadA-5
222
Add swRelation: 0x7fe7d3e149f0 threadA-5 threadB-1
xxx: threadB-1 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14850
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e14850 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1058 column 10: model is not available") 0
[Solver] (error "line 1058 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3e0ff40 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3e0f360 threadA-1 1 
enforce0: 0x7fe7d3d08350 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0f330
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f0f330 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e0f360 threadA-1 1 
enforce0: 0x7fe7d3d08350 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e16610
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e16610 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-1 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e16ba0
111: 10
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
xx: threadA-5
222
Add swRelation: 0x7fe7d3e16ba0 threadA-5 threadB-1
xxx: threadB-1 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 0 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0d690
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c0d690 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0db20
111: 8
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c0db20 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 2 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0db90
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0db90 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0dc30
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c0dc30 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    134) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-7 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    138) 1


  (define-fun B_main-4_threadA-4 () Int 0


    103) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-7_main-4 () Int 0


    183) 1


  (define-fun B_threadA-5_main-1 () Int 0


    108) 1


  (define-fun B_threadA-4_main-2 () Int 0


    101) 1


  (define-fun B_main-5_threadB-5 () Int 0


    168) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadB-6_threadA-5 () Int 0


    1) 0


  (define-fun B_threadB-6_threadB-1 () Int 0


    211) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-7_threadA-3 () Int 0


    44) 1


  (define-fun S_threadA-1 () Int 0


    2) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    136) 1


  (define-fun B_main-7_threadB-4 () Int 0


    162) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    204) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-7_threadA-5 () Int 0


    60) 1


  (define-fun B_threadB-3_threadB-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-3 () Int 0


    142) 1


  (define-fun B_main-5_threadB-2 () Int 0


    144) 1


  (define-fun RF_threadB-6_main-2 () Int 0


    0) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun S_threadA-2 () Int 0


    3) 0


  (define-fun B_threadB-6_threadB-3 () Int 0


    209) 1


  (define-fun B_main-4_threadA-3 () Int 0


    95) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-3 () Int 0


    219) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    170) 1


  (define-fun B_threadA-3_main-0 () Int 0


    91) 1


  (define-fun RF_threadA-1_threadA-5 () Int 0


    0) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    141) 1


  (define-fun B_threadA-1_main-0 () Int 0


    77) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-5_threadB-1 () Int 0


    54) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    51) 1


  (define-fun S_threadA-3 () Int 0


    4) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    110) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    21) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    139) 1


  (define-fun B_threadA-5_main-0 () Int 0


    107) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    217) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadB-4_main-1 () Int 0


    156) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    25) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    97) 1


  (define-fun B_main-7_threadB-7 () Int 0


    186) 1


  (define-fun B_threadA-5_threadA-2 () Int 0


    216) 1


  (define-fun B_threadA-2_main-1 () Int 0


    0) 1


  (define-fun B_main-4_threadB-0 () Int 0


    128) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    39) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    67) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    41) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-4 () Int 0


    0) 0


  (define-fun B_threadB-6_threadA-3 () Int 0


    43) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-5_threadA-5 () Int 0


    225) 1


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun RF_threadB-4_threadA-5 () Int 0


    1) 0


  (define-fun B_threadB-6_threadB-2 () Int 0


    212) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-6_threadB-6 () Int 0


    177) 1


  (define-fun B_threadB-7_threadA-6 () Int 0


    68) 1


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    74) 1


  (define-fun B_threadB-7_threadA-0 () Int 0


    20) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-1_threadB-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-6_main-4 () Int 0


    119) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    123) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    40) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    121) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    71) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    117) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    66) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    191) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    49) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-7 () Int 0


    1) 1


  (define-fun RF_threadB-4_main-2 () Int 0


    0) 0


  (define-fun B_threadA-5_threadA-1 () Int 0


    222) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-7 () Int 0


    184) 1


  (define-fun B_threadB-6_main-1 () Int 0


    172) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    178) 1


  (define-fun B_main-3_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-4_main-3 () Int 0


    158) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    112) 1


  (define-fun S_threadB-4 () Int 0


    10) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    113) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    154) 1


  (define-fun B_threadB-1_main-1 () Int 0


    133) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-7_threadA-4 () Int 0


    52) 1


  (define-fun B_main-7_threadA-1 () Int 0


    83) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    88) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    93) 1


  (define-fun B_main-4_threadA-1 () Int 0


    80) 1


  (define-fun B_threadB-3_threadB-3 () Int 0


    224) 1


  (define-fun B_main-4_threadA-5 () Int 0


    111) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    59) 1


  (define-fun B_main-6_threadB-3 () Int 0


    153) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    27) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-7_main-0 () Int 0


    179) 1


  (define-fun M_threadA-5 () Int 0


    1) 0


  (define-fun S_threadB-3 () Int 0


    7) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    34) 1


  (define-fun B_threadB-5_main-0 () Int 0


    163) 1


  (define-fun B_main-4_threadB-7 () Int 0


    1) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    22) 1


  (define-fun RF_threadA-5_main-2 () Int 0


    1) 0


  (define-fun B_threadA-3_threadA-3 () Int 0


    223) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    203) 1


  (define-fun B_threadB-2_threadB-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-3 () Int 0


    96) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-7_main-1 () Int 0


    180) 1


  (define-fun B_threadA-1_main-1 () Int 0


    78) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    36) 1


  (define-fun B_threadB-6_main-3 () Int 0


    174) 1


  (define-fun B_main-0_threadB-0 () Int 0


    124) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun RF_threadA-3_threadA-4 () Int 0


    0) 0


  (define-fun B_threadA-4_main-0 () Int 0


    99) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    48) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-7_main-2 () Int 0


    181) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    53) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    1) 0


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    132) 1


  (define-fun B_threadA-2_main-2 () Int 0


    85) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    2) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    19) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    24) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    205) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    64) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    220) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    150) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    143) 1


  (define-fun B_threadB-7_main-3 () Int 0


    182) 1


  (define-fun B_threadB-1_threadA-6 () Int 0


    62) 1


  (define-fun B_threadB-3_main-4 () Int 0


    151) 1


  (define-fun B_threadB-6_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    104) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    47) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    135) 1


  (define-fun B_threadB-3_main-2 () Int 0


    149) 1


  (define-fun B_threadA-2_main-3 () Int 0


    86) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun B_threadB-7_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-3 () Int 0


    98) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_main-6_threadB-4 () Int 0


    161) 1


  (define-fun S_threadB-2 () Int 0


    6) 0


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    70) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    214) 1


  (define-fun B_threadA-2_main-0 () Int 0


    84) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    61) 1


  (define-fun B_main-6_threadB-0 () Int 0


    130) 1


  (define-fun B_main-6_threadB-1 () Int 0


    137) 1


  (define-fun B_main-6_threadB-7 () Int 0


    185) 1


  (define-fun B_threadA-5_threadB-3 () Int 0


    56) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    1) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    69) 1


  (define-fun B_threadB-6_main-4 () Int 0


    175) 1


  (define-fun M_threadA-3 () Int 0


    1) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    94) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-4 () Int 0


    159) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    0) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    33) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    1) 1


  (define-fun S_threadA-4 () Int 0


    8) 0


  (define-fun B_threadB-5_main-1 () Int 0


    164) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    213) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    18) 1


  (define-fun B_main-7_threadB-0 () Int 0


    131) 1


  (define-fun B_main-5_threadB-4 () Int 0


    160) 1


  (define-fun B_main-7_threadA-0 () Int 0


    76) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-5_threadB-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-0 () Int 0


    75) 1


  (define-fun B_main-4_threadA-2 () Int 0


    87) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    207) 1


  (define-fun B_threadA-5_threadA-4 () Int 0


    221) 1


  (define-fun B_threadB-3_main-1 () Int 0


    148) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    0) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    42) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    106) 1


  (define-fun B_threadA-5_main-2 () Int 0


    109) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    208) 1


  (define-fun B_main-7_threadA-2 () Int 0


    90) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    0) 0


  (define-fun B_threadA-2_threadB-0 () Int 0


    29) 1


  (define-fun B_main-2_threadB-0 () Int 0


    126) 1


  (define-fun S_threadB-6 () Int 0


    11) 0


  (define-fun B_main-6_threadA-1 () Int 0


    82) 1


  (define-fun RF_threadA-5_threadA-5 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    23) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    31) 1


  (define-fun B_threadA-1_main-3 () Int 0


    79) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    35) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    173) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadA-4 () Int 0


    0) 0


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    14) 1


  (define-fun B_threadB-5_main-4 () Int 0


    167) 1


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    218) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadA-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-4_threadA-0 () Int 0


    73) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-6_main-0 () Int 0


    171) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    58) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    17) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    63) 1


  (define-fun B_main-5_threadB-0 () Int 0


    129) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun B_threadB-7_threadA-2 () Int 0


    37) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    46) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-7 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    102) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    16) 1


  (define-fun B_main-6_threadA-4 () Int 0


    105) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    115) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    38) 1


  (define-fun B_threadA-6_main-1 () Int 0


    116) 1


  (define-fun B_threadB-4_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-6_main-3 () Int 0


    118) 1


  (define-fun B_threadB-5_main-3 () Int 0


    166) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    125) 1


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-5 () Int 0


    1) 1


  (define-fun B_main-3_threadB-0 () Int 0


    127) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    81) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    122) 1


  (define-fun S_threadA-5 () Int 0


    9) 0


  (define-fun B_main-4_threadA-6 () Int 0


    120) 1


  (define-fun B_main-3_threadA-0 () Int 0


    72) 1


  (define-fun B_threadB-2_main-1 () Int 0


    140) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    210) 1


  (define-fun B_main-6_threadA-2 () Int 0


    89) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    155) 1


  (define-fun B_threadB-4_main-2 () Int 0


    157) 1


  (define-fun B_threadB-2_threadA-0 () Int 0


    15) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    114) 1


  (define-fun B_threadA-5_threadB-2 () Int 0


    55) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    215) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    145) 1


  (define-fun B_main-5_threadB-6 () Int 0


    176) 1


  (define-fun B_threadA-3_main-1 () Int 0


    92) 1


  (define-fun M_threadA-4 () Int 0


    3) 0


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    1) 1


  (define-fun S_threadB-1 () Int 0


    5) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    57) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    45) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    1) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    100) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    146) 1


  (define-fun B_main-5_threadB-3 () Int 0


    152) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-6_threadB-4 () Int 0


    206) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadA-5 () Int 0


    0) 0


  (define-fun RF_threadA-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    30) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    26) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    65) 1


  (define-fun B_threadB-7_threadA-1 () Int 0


    28) 1


  (define-fun B_threadA-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    165) 1


  (define-fun B_threadA-0_threadB-1 () Int 0


    13) 1


  (define-fun B_threadB-3_main-0 () Int 0


    147) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    50) 1


  (define-fun B_main-6_threadB-5 () Int 0


    169) 1


) 0


(error "line 2124 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadB-1
dd1: threadB-2
dd1: threadA-2
dd1: threadA-1
Generate new schedule: 0x7fe7d3c1e880
222: 2
schPrefix: threadA 2
schPrefix: threadB 2
curPrefix: threadA 2
curPrefix: threadB 2
prefixMap: 2 2
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-2
RF: threadB 1 0
write: threadA-3
RF: threadB 2 2
write: main-2
RF: threadA 1 0
write: main-1
RF: threadA 2 0
write: main-1
RF: threadA 3 0
write: main-2
RF: threadB 1 0
write: threadA-3
RF: threadB 2 2
ccc7
Find a new Schedule!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 0
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 1 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1c7c0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1c7c0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1cc00
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c1cc00 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1c950
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c1c950 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1d480
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c1d480 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 2 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1cfa0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c1cfa0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1c8a0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1c8a0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))):named RW))

Adding SW Constraints: 6
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    132) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-7 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    136) 1


  (define-fun B_main-4_threadA-4 () Int 0


    102) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadB-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-7_main-4 () Int 0


    180) 1


  (define-fun B_threadA-5_main-1 () Int 0


    107) 1


  (define-fun B_threadA-4_main-2 () Int 0


    100) 1


  (define-fun B_main-5_threadB-5 () Int 0


    165) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun RF_threadB-6_threadA-5 () Int 0


    1) 0


  (define-fun B_threadB-6_threadB-1 () Int 0


    208) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-7_threadA-3 () Int 0


    42) 1


  (define-fun S_threadA-1 () Int 0


    2) 0


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    134) 1


  (define-fun B_main-7_threadB-4 () Int 0


    159) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    201) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_threadB-7_threadA-5 () Int 0


    58) 1


  (define-fun B_threadB-3_threadB-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-3 () Int 0


    139) 1


  (define-fun B_main-5_threadB-2 () Int 0


    141) 1


  (define-fun RF_threadB-6_main-2 () Int 0


    0) 0


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun S_threadA-2 () Int 0


    6) 0


  (define-fun B_threadB-6_threadB-3 () Int 0


    206) 1


  (define-fun B_main-4_threadA-3 () Int 0


    94) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-3 () Int 0


    216) 1


  (define-fun B_threadB-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-5 () Int 0


    167) 1


  (define-fun B_threadA-3_main-0 () Int 0


    90) 1


  (define-fun RF_threadA-1_threadA-5 () Int 0


    0) 0


  (define-fun RF_threadA-3_main-1 () Int 0


    0) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    138) 1


  (define-fun B_threadA-1_main-0 () Int 0


    75) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-5_threadB-1 () Int 0


    52) 1


  (define-fun B_threadB-6_threadA-4 () Int 0


    49) 1


  (define-fun S_threadA-3 () Int 0


    7) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-5_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    109) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-1 () Int 0


    20) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    137) 1


  (define-fun B_threadA-5_main-0 () Int 0


    106) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    214) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadB-4_main-1 () Int 0


    153) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    24) 1


  (define-fun B_threadB-2_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    96) 1


  (define-fun B_main-7_threadB-7 () Int 0


    183) 1


  (define-fun B_threadA-5_threadA-2 () Int 0


    213) 1


  (define-fun B_threadA-2_main-1 () Int 0


    83) 1


  (define-fun B_main-4_threadB-0 () Int 0


    126) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-6 () Int 0


    65) 1


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    39) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-4 () Int 0


    0) 0


  (define-fun B_threadB-6_threadA-3 () Int 0


    41) 1


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-5_threadA-5 () Int 0


    222) 1


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun RF_threadB-4_threadA-5 () Int 0


    1) 0


  (define-fun B_threadB-6_threadB-2 () Int 0


    209) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    29) 1


  (define-fun B_main-6_threadB-6 () Int 0


    174) 1


  (define-fun B_threadB-7_threadA-6 () Int 0


    66) 1


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-0 () Int 0


    72) 1


  (define-fun B_threadB-7_threadA-0 () Int 0


    19) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-1_threadB-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    121) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    1) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_main-5_threadA-6 () Int 0


    119) 1


  (define-fun B_main-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-0 () Int 0


    69) 1


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    116) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    64) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    188) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    47) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-7 () Int 0


    1) 1


  (define-fun RF_threadB-4_main-2 () Int 0


    0) 0


  (define-fun B_threadA-5_threadA-1 () Int 0


    219) 1


  (define-fun B_threadB-4_threadB-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-7 () Int 0


    181) 1


  (define-fun B_threadB-6_main-1 () Int 0


    169) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-6 () Int 0


    175) 1


  (define-fun B_main-3_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-4_main-3 () Int 0


    155) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    111) 1


  (define-fun S_threadB-4 () Int 0


    10) 0


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-5 () Int 0


    112) 1


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-7_threadB-3 () Int 0


    151) 1


  (define-fun B_threadB-1_main-1 () Int 0


    131) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    37) 1


  (define-fun B_threadB-7_threadA-4 () Int 0


    50) 1


  (define-fun B_main-7_threadA-1 () Int 0


    81) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-2 () Int 0


    87) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    92) 1


  (define-fun B_main-4_threadA-1 () Int 0


    78) 1


  (define-fun B_threadB-3_threadB-3 () Int 0


    221) 1


  (define-fun B_main-4_threadA-5 () Int 0


    110) 1


  (define-fun B_threadB-6_threadA-5 () Int 0


    57) 1


  (define-fun B_main-6_threadB-3 () Int 0


    150) 1


  (define-fun B_main-2_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-1 () Int 0


    26) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-7_main-0 () Int 0


    176) 1


  (define-fun M_threadA-5 () Int 0


    1) 0


  (define-fun S_threadB-3 () Int 0


    5) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    31) 1


  (define-fun B_threadB-5_main-0 () Int 0


    160) 1


  (define-fun B_main-4_threadB-7 () Int 0


    1) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    1) 0


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    21) 1


  (define-fun RF_threadA-5_main-2 () Int 0


    1) 0


  (define-fun B_threadA-3_threadA-3 () Int 0


    220) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    200) 1


  (define-fun B_threadB-2_threadB-7 () Int 0


    1) 1


  (define-fun B_main-5_threadA-3 () Int 0


    95) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-7_main-1 () Int 0


    177) 1


  (define-fun B_threadA-1_main-1 () Int 0


    76) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    38) 1


  (define-fun B_threadB-6_threadA-2 () Int 0


    33) 1


  (define-fun B_threadB-6_main-3 () Int 0


    171) 1


  (define-fun B_main-0_threadB-0 () Int 0


    122) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-1 () Int 0


    36) 1


  (define-fun B_threadA-2_threadB-2 () Int 0


    30) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun RF_threadA-3_threadA-4 () Int 0


    0) 0


  (define-fun B_threadA-4_main-0 () Int 0


    98) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    46) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-7_main-2 () Int 0


    178) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    51) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    130) 1


  (define-fun B_threadA-2_main-2 () Int 0


    84) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    1) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-6_threadA-0 () Int 0


    18) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    23) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    202) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    62) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    217) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-3 () Int 0


    147) 1


  (define-fun B_threadB-3_threadB-6 () Int 0


    1) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    140) 1


  (define-fun B_threadB-7_main-3 () Int 0


    179) 1


  (define-fun B_threadB-1_threadA-6 () Int 0


    60) 1


  (define-fun B_threadB-3_main-4 () Int 0


    148) 1


  (define-fun B_threadB-6_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    103) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    45) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_main-4 () Int 0


    133) 1


  (define-fun B_threadB-3_main-2 () Int 0


    146) 1


  (define-fun B_threadA-2_main-3 () Int 0


    85) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun B_threadB-7_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadA-3 () Int 0


    97) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_main-6_threadB-4 () Int 0


    158) 1


  (define-fun S_threadB-2 () Int 0


    4) 0


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadA-0 () Int 0


    68) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    211) 1


  (define-fun B_threadA-2_main-0 () Int 0


    82) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    59) 1


  (define-fun B_main-6_threadB-0 () Int 0


    128) 1


  (define-fun B_main-6_threadB-1 () Int 0


    135) 1


  (define-fun B_main-6_threadB-7 () Int 0


    182) 1


  (define-fun B_threadA-5_threadB-3 () Int 0


    54) 1


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    0) 0


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    67) 1


  (define-fun B_threadB-6_main-4 () Int 0


    172) 1


  (define-fun M_threadA-3 () Int 0


    2) 0


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    93) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-4 () Int 0


    156) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    1) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    1) 1


  (define-fun S_threadA-4 () Int 0


    8) 0


  (define-fun B_threadB-5_main-1 () Int 0


    161) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    210) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    17) 1


  (define-fun B_main-7_threadB-0 () Int 0


    129) 1


  (define-fun B_main-5_threadB-4 () Int 0


    157) 1


  (define-fun B_main-7_threadA-0 () Int 0


    74) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    0) 1


  (define-fun B_threadA-5_threadB-4 () Int 0


    1) 1


  (define-fun B_main-6_threadA-0 () Int 0


    73) 1


  (define-fun B_main-4_threadA-2 () Int 0


    86) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    204) 1


  (define-fun B_threadA-5_threadA-4 () Int 0


    218) 1


  (define-fun B_threadB-3_main-1 () Int 0


    145) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    40) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-1_threadB-6 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-7_threadA-4 () Int 0


    105) 1


  (define-fun B_threadA-5_main-2 () Int 0


    108) 1


  (define-fun B_threadB-0_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    205) 1


  (define-fun B_main-7_threadA-2 () Int 0


    89) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    1) 0


  (define-fun B_main-2_threadB-0 () Int 0


    124) 1


  (define-fun S_threadB-6 () Int 0


    11) 0


  (define-fun B_main-6_threadA-1 () Int 0


    80) 1


  (define-fun RF_threadA-5_threadA-5 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    22) 1


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    77) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    32) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-2 () Int 0


    170) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadA-4 () Int 0


    0) 0


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-5_main-4 () Int 0


    164) 1


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    215) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_threadA-5_threadB-6 () Int 0


    1) 1


  (define-fun B_main-4_threadA-0 () Int 0


    71) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-6_main-0 () Int 0


    168) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    56) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    16) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    61) 1


  (define-fun B_main-5_threadB-0 () Int 0


    127) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun B_threadB-7_threadA-2 () Int 0


    34) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-1 () Int 0


    44) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-0_threadB-7 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    101) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    15) 1


  (define-fun B_main-6_threadA-4 () Int 0


    104) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    114) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    35) 1


  (define-fun B_threadA-6_main-1 () Int 0


    115) 1


  (define-fun B_threadB-4_threadB-7 () Int 0


    1) 1


  (define-fun B_threadA-6_main-3 () Int 0


    117) 1


  (define-fun B_threadB-5_main-3 () Int 0


    163) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-1_threadB-0 () Int 0


    123) 1


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-4 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-5 () Int 0


    1) 1


  (define-fun B_main-3_threadB-0 () Int 0


    125) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    79) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    12) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    120) 1


  (define-fun S_threadA-5 () Int 0


    9) 0


  (define-fun B_main-4_threadA-6 () Int 0


    118) 1


  (define-fun B_main-3_threadA-0 () Int 0


    70) 1


  (define-fun B_threadB-2_main-1 () Int 0


    0) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    207) 1


  (define-fun B_main-6_threadA-2 () Int 0


    88) 1


  (define-fun B_main-3_threadB-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-0 () Int 0


    152) 1


  (define-fun B_threadB-4_main-2 () Int 0


    154) 1


  (define-fun B_threadB-2_threadA-0 () Int 0


    14) 1


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    113) 1


  (define-fun B_threadA-5_threadB-2 () Int 0


    53) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    212) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-6_threadB-2 () Int 0


    142) 1


  (define-fun B_main-5_threadB-6 () Int 0


    173) 1


  (define-fun B_threadA-3_main-1 () Int 0


    91) 1


  (define-fun M_threadA-4 () Int 0


    3) 0


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    1) 1


  (define-fun S_threadB-1 () Int 0


    3) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    55) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    43) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun RF_threadB-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-4_main-1 () Int 0


    99) 1


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_main-7_threadB-2 () Int 0


    143) 1


  (define-fun B_main-5_threadB-3 () Int 0


    149) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-6_threadB-4 () Int 0


    203) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadA-5 () Int 0


    0) 0


  (define-fun RF_threadA-2_threadB-3 () Int 0


    1) 0


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    28) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    25) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    63) 1


  (define-fun B_threadB-7_threadA-1 () Int 0


    27) 1


  (define-fun B_threadA-1_threadB-6 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    162) 1


  (define-fun B_threadB-3_main-0 () Int 0


    144) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    48) 1


  (define-fun B_main-6_threadB-5 () Int 0


    166) 1


) 0


(error "line 3188 column 15: unsat core is not available") 0
[Solver] Solution found in 1s:

end checksat!
ccc6
dd1: threadB-1
dd1: threadB-2
dd1: threadA-2
dd1: threadA-1
Generate new schedule: 0x7fe7d3d171c0
222: 2
schPrefix: threadA 2
schPrefix: threadB 2
curPrefix: threadA 2
curPrefix: threadB 2
prefixMap: 2 2
write: main-2
RF: threadA 1 0
write: threadB-3
RF: threadA 2 1
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: main-1
RF: threadB 3 0
write: main-2
RF: threadA 1 0
write: threadB-3
RF: threadA 2 1
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: main-1
RF: threadB 3 0
ccc7
Find a new Schedule!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 1 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e15500
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e15500 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 1 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1e910
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1e910 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1c9c0
111: 8
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c1c9c0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 2 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e12240
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e12240 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e12320
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e12320 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 4250 column 10: model is not available") 0
[Solver] (error "line 4250 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3e0ff40 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e12040
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e12040 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e13b20
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e13b20 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e13dd0
111: 8
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e13dd0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3e06bb0 threadA-3 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 0 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 0 
enforce2: 0x7fe7d3d06cc0 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0f390
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d0f390 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04f80
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d04f80 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0f310
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d0f310 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d04d70
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3d04d70 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0ce90
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d0ce90 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3e06bb0 threadA-3 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 0 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 2 
enforce2: 0x7fe7d3d06cc0 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 2 
enforce2: 0x7fe7d3d06cc0 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c19ac0
111: 8
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c19ac0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c19dc0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c19dc0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
Gurantee end: threadA-4 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c19ee0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c19ee0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c19b30
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c19b30 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 8
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadA-5 : 0
4: threadB-1 : 0
5: threadB-2 : 0
6: threadB-3 : 0
7: threadB-4 : 1
prefix & reads: 0 8
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce0: 0x7fe7d3f09e50 threadA-5 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3f09e50 threadA-5 0 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 0 
enforce2: 0x7fe7d3d06cc0 threadB-3 0 
enforce0: 0x7fe7d3d04c70 threadB-4 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile17_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile17_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadB-4 1
In addRWRelation: 

xxxx read: threadB-4 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e17cf0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e17cf0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-4 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e112d0
111: 10
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
xx: threadA-5
222
Add swRelation: 0x7fe7d3e112d0 threadA-5 threadB-4
xxx: threadB-4 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e17e30
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e17e30 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e17dc0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e17dc0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e11340
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e11340 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e114b0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e114b0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e11750
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3e11750 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e11980
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3e11980 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e118e0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e118e0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 9
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadA-5 : 0
4: threadB-1 : 0
5: threadB-2 : 0
6: threadB-3 : 0
7: threadB-4 : 0
8: threadB-6 : 0
prefix & reads: 0 9
enforce0: 0x7fe7d3e0f360 threadA-1 0 
enforce0: 0x7fe7d3e06a70 threadA-2 2 
enforce0: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce0: 0x7fe7d3f09e50 threadA-5 0 
enforce2: 0x7fe7d3e06bb0 threadA-3 1 
enforce2: 0x7fe7d3f09e50 threadA-5 0 
enforce0: 0x7fe7d3d08350 threadB-1 0 
enforce0: 0x7fe7d3d08520 threadB-2 0 
enforce0: 0x7fe7d3d06cc0 threadB-3 0 
enforce2: 0x7fe7d3d06cc0 threadB-3 0 
enforce0: 0x7fe7d3d04c70 threadB-4 0 
enforce0: 0x7fe7d3f0e150 threadB-6 0 
enforce2: 0x7fe7d3d04c70 threadB-4 0 
enforce2: 0x7fe7d3d08350 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile18_0x7fe7d3e0ff40
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile18_0x7fe7d3e0ff40
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 9
Add RW: threadB-4 0
In addRWRelation: 

xxxx read: threadB-4 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0dca0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c0dca0 main-2 threadB-4
xxx: threadB-4 (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
ttt: (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1d090
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c1d090 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c18c60
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c18c60 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0de80
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c0de80 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c0bbb0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c0bbb0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0e880
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d06390
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3d06390
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1e710
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-0
xx: threadB-1
xx: threadB-2
222
Add swRelation: 0x7fe7d3c1e710 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3e0e880
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c15ac0
111: 9
xx: main-0
xx: main-2
xx: main-1
xx: main-3
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: threadA-0
xx: threadA-1
222
Add swRelation: 0x7fe7d3c15ac0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c07470
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c07470
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c19a40
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c19a40 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 2 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
set new failed sch: 18 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In generateModel2 End!
### Solver Time: 1218.17
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74395
Generate a new Executor: 0x7fe7d3c1a7c0 0x7fe7d3c1c6a0
Schedule: 0x7fe7d3f0a960 8
For: main 6
    main 0
    main 1
    main 2
    main 3
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
For: threadA 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 5
    main 0
    main 1
    main 2
    main 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 7
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 0
Read Map: threadA 3 0
Read Map: threadA 4 1
Read Map: threadB 1 0
Read Map: threadB 2 0
Read Map: threadB 3 1
Read Map: threadB 5 0

Prefix: threadA 4
Prefix: threadB 5

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3c1a7c0
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3f047d4 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3f0b150 0x7fe7d3f047d4 0

Write value1: main-1 0x7fe7d3f047d4 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3f047d8 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3f0ab90 0x7fe7d3f047d8 0

Write value1: main-2 0x7fe7d3f047d8 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3c1a7c0
BeginFunc: 0x7fe7d3c1a7c0
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 109 1 89
checker_addUses: 295 1 292

update load: 109 0
89 0 

checker_addUses: 296 1 291
BeginFunc: checker_addUses: 297 1 296
0x7fe7d3c1a7c0checker_addUses: 300 1 299

checker_addUses: 301 1 300

In checker_thread_begin: 0x103f00000
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244
Waitting for create thread 0x103f00000

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 294 1 293
checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 112 1 88
checker_addUses: 297 1 296

update load: 112 0
88 0 

checker_addUses: 300 1 299
checker_addUses: 113 1 112
checker_addUses: 301 1 300

In checker_thread_begin: 0x103f83000

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103f00000
Waitting for create thread 0x103f00000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103f83000
In add action: main-4
Waitting for create thread 0x103f83000
End add action! main-4
Waitting for create thread 0x103f00000
checker_addUses: 118 1 112

update load: 118 0
112 0 

In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3
Waitting for create thread 0x103f83000

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

In add action: main-5
checker_addUses: 6 1 5
End add action! main-5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3f047d8 7 6!
In read action: 0x103f00000
In add action: threadA-1
Tset: 2 2 0x103f00000
0x103f00000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1

add load: 6 threadA-1 1
checker_addUses: 120 1 115

update load: 120 0
115 0 

In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45

update load: 46 0
45 0 

checker_addUses: 47 1 46

update load: 47 0
46 0 

checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3f047d8 7 48!
In read action: 0x103f83000
waiting read: 0x103f00000 threadA-1
in update priority: 0x103f00000
In add action: threadB-1
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In add action: main-6
In pre_read action: threadB-1
End add action! main-6
fetch expect value: 0x7fe7d3f047d8 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3f047d8 0 0 0
End: 0x103f83000 threadB-1
checker_addUses: 49 1 46

update load: 49 0
46 0 

checker_addUses: 50 1 45

update load: 50 0
45 0 

checker_addUses: 51 1 50

update load: 51 0
50 0 

checker_addUses: 52 1 51

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3f047d4 7 52!
In read action: 0x103f83000
In add action: threadB-2
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
waiting read: 0x103f00000In pre_read action:  threadB-2
threadA-1
in update priority: 0x103f00000
fetch expect value: 0x7fe7d3f047d4 0
hhhhh1

Read expect value: threadB-2 0x7fe7d3f047d4 0 0 0
End: 0x103f83000 threadB-2
In pre_read action: checker_addUses: 53 1 50
threadA-1

update load: 53 0
50 0 

fetch expect value: 0x7fe7d3f047d8 0
checker_addUses: 54 1 45
hhhhh1

update load: 54 0
45 0 


Read expect value: threadA-1 0x7fe7d3f047d8 0 0 0
checker_addUses: 55 1 54
End: 0x103f00000 threadA-1

update load: 55 0
54 0 

checker_addUses: 7 1 4
checker_addUses: 56 3 52

update load: 7 0
4 0 

checker_addUses: 8 1 3

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 

update load: 8 0
3 0 

nwait: 0, 2, 0
checker_addUses: 9 1 8
checker_addUses: 57 1 50

update load: 9 0
8 0 


update load: 57 0
50 0 

checker_addUses: 10 1 9
checker_addUses: 58 1 57

update load: 10 0
9 0 

In atomic checker_preLoad: 0x7fe7d3f047d4 7 10!

update load: 58 0
57 0 

In read action: In rmw_add: 0x103f000000x7fe7d3f047d4
 1 7
In add action: threadA-2
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3f047d4 0
hhhhh1

Read expect value: threadA-2 0x7fe7d3f047d4 0 0 0
End: 0x103f00000 threadA-2
checker_addUses: 11 1 8
In add action: threadB-3

update load: 11 0
8 0 

Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
checker_addUses: 12 1 3
End add action! threadB-3

update load: 12 0
3 0 

checker_addUses: 13 1 12

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3f0f240 3 1 
update load: 13 0
12 0 

0
checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-2 threadA-1 
nwait: 0, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3f047d4 1 7
In add action: threadA-3
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3c1ae50 3 1 0
waiting rmw_add!
hhhhh1

expect value rmw_add: threadA 3 0 !1!

update buffer: 0x7fe7d3c180a0 0x7fe7d3f047d4 1
update buffer: 0x7fe7d3f0ca90 0x7fe7d3f047d4 1
update buffer: 0x7fe7d3f0b150 0x7fe7d3f047d4 1
checker_addUses: 17 1 8

update load: 17 0
8 0 

hhhhh1
checker_addUses: 18 1 12

expect value rmw_add: threadB 3 1 !1!

update buffer: 0x7fe7d3c180a0 0x7fe7d3f047d4 2

update load: 18 0
12 0 

update buffer: 0x7fe7d3f0ca90 0x7fe7d3f047d4 2
checker_addUses: 19 1 18
update buffer: 0x7fe7d3f0b150 0x7fe7d3f047d4 2

update load: 19 0
18 0 

checker_addUses: 59 1 50
checker_addUses: 20 2 16

update load: 59 0
50 0 

checker_addUses: 60 1 54

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 21 1 20

update load: 60 0
54 0 

checker_addUses: 61 1 60

update load: 21 1
20 0 
threadA-3 

update load: 61 0
60 0 

checker_addUses: 62 2 58

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 30 1 4
checker_addUses: 63 1 62

update load: 30 0
4 0 22 34 


update load: 63 1
62 0 
threadB-3 
checker_addUses: 31 1 30

update load: 31 0
30 0 22 34 

In atomic checker_preLoad: 0x7fe7d3f047d8 7 31!
checker_addUses: 65 1 50
In read action: 0x103f00000
In add action: threadA-4

update load: 65 1
50 0 63 
threadB-3 
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
checker_addUses: 66 1 65
End add action! threadA-4
loads: 0 4

update load: 66 1
65 0 63 
threadB-3 

add load: 31 threadA-4 1
In atomic checker_preStore: 0x7fe7d3f047d4 0 7!
In write: 0x103f83000
In add action: threadB-4
End add action! threadB-4
action: threadB-4
loads: 1 4
set Reachability map 111: 0x7fe7d3f0f240 4 1 1
update buffer: 0x7fe7d3c180a0 0x7fe7d3f047d4 0
update buffer: 0x7fe7d3f0ca90 0x7fe7d3f047d4 0
update buffer: 0x7fe7d3f0b150 0x7fe7d3f047d4 0

Write value1: threadB-4 0x7fe7d3f047d4 0!
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 
checker_addUses: 68 1 46

update load: 68 1
46 0 63 
threadB-3 
checker_addUses: 69 1 68
waiting read: 0x103f00000 threadA-4
in update priority: 0x103f00000

update load: 69 1
68 0 63 
threadB-3 
In rmw_add: 0x7fe7d3f047d8 1 7
In add action: threadB-5
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3f0f240 5 2 2
hhhhh1

expect value rmw_add: threadB 5 0 !1!

update buffer: 0x7fe7d3c11ea0 0x7fe7d3f047d8 1
update buffer: 0x7fe7d3f0bfd0 0x7fe7d3f047d8 1
update buffer: 0x7fe7d3f0ab90 0x7fe7d3f047d8 1
checker_addUses: 70 1 46
waiting read: 0x103f00000 threadA-4
in update priority: 0x103f00000
In pre_read action: threadA-4

update load: 70 1
46 0 63 
threadB-3 
fetch expect value: 0x7fe7d3f047d8 1
hhhhh1
checker_addUses: 85 1 84

Read expect value: threadA-4 0x7fe7d3f047d8 1 1 1
End: 0x103f00000 threadA-4

update load: 85 1
84 0 63 
threadB-3 
checker_addUses: 32 1 4
var = 1
In checker_thread_end
Thread_end_action: 0x103f83000
erase enabledThreads: 
update load: 32 0
4 0 22 34 

threadB-6
In add action: threadB-6
checker_addUses: 33 2 31
End add action! threadB-6
checker_addUses: 303 1 292

update load: 33 2
31 6 0 22 34 
threadA-1 threadA-4 
checker_addUses: 304 1 292
checker_addUses: 34 1 33
checker_addUses: 305 1 303
checker_addUses: 306 1 305

update load: 34 2
33 0 22 34 
threadA-1 threadA-4 
BeginFunc: 0x7fe7d3c1a7c0
In checker_thread_end
Thread_end_action: 0x103f00000
erase enabledThreads: threadA-5
In add action: threadA-5
End add action! threadA-5
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3c1a7c0
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 1
threadB-1 0
threadB-2 0
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3f0a960
vec1: 0 4
vec1: 0 9
vec1: 0 9
Checking previous unsat schedules: 18
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3f05820 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d10530
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d10530 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3c1e3c0 threadA-1 1 
enforce0: 0x7fe7d3f05820 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c1ae50
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06300
111: 8
xx: threadA-2
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-1
xx: main-2
xx: threadA-3
xx: main-0
222
Add swRelation: 0x7fe7d3f06300 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06570
111: 11
xx: threadB-5
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3f06570 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14980
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e14980 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 896 column 10: model is not available") 0
[Solver] (error "line 896 column 10: model is not available")


(SCConsistent RW MOConsistent CORF CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c1a7c0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3c1e3c0 threadA-1 1 
enforce0: 0x7fe7d3f05820 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c1ae50
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06170
111: 8
xx: threadA-2
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-1
xx: main-2
xx: threadA-3
xx: main-0
222
Add swRelation: 0x7fe7d3f06170 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f14640
111: 11
xx: threadB-5
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3f14640 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 1 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 1 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 2 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e120b0
111: 9
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3e120b0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e12150
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e12150 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e101c0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e101c0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c1ae50
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14200
111: 8
xx: threadA-2
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-1
xx: main-2
xx: threadA-3
xx: main-0
222
Add swRelation: 0x7fe7d3e14200 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1798 column 10: model is not available") 0
[Solver] (error "line 1798 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c1a7c0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 2 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f032a0
111: 9
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3f032a0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f03340
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f03340 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f146b0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f146b0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 0 
enforce0: 0x7fe7d3f0b5b0 threadA-3 0 
enforce2: 0x7fe7d3f0b5b0 threadA-3 0 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 0 
enforce0: 0x7fe7d3f0b470 threadB-3 0 
enforce2: 0x7fe7d3f0b470 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1d900
111: 10
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3d1d900 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1d9b0
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1d9b0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1dd00
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d1dd00 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1db60
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d1db60 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e000
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e000 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e330
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e330 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c1ae50
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e4e0
111: 10
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3d1e4e0 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c1ae50
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e690
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e690 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3c1ae50
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2700 column 10: model is not available") 0
[Solver] (error "line 2700 column 10: model is not available")


(SCConsistent RW ASW) 0
end checksat!
ccc6
test1
0x7fe7d3c1a7c0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 0 
enforce0: 0x7fe7d3f0b5b0 threadA-3 2 
enforce2: 0x7fe7d3f0b5b0 threadA-3 2 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 0 
enforce0: 0x7fe7d3f0b470 threadB-3 0 
enforce2: 0x7fe7d3f0b470 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14de0
111: 10
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3e14de0 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e3a0
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e3a0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1dbd0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d1dbd0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d103a0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d103a0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e7d0
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e7d0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1e870
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1e870 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 0 
enforce0: 0x7fe7d3f0b5b0 threadA-3 2 
enforce2: 0x7fe7d3f0b5b0 threadA-3 2 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 0 
enforce0: 0x7fe7d3f0b470 threadB-3 1 
enforce2: 0x7fe7d3f0b470 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
Gurantee end: threadB-4 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f14b70
111: 10
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3f14b70 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14b60
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e14b60 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e14110
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e14110 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e122b0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e122b0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e126e0
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e126e0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 0 
enforce0: 0x7fe7d3f0b5b0 threadA-3 2 
enforce2: 0x7fe7d3f0b5b0 threadA-3 2 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 1 
enforce0: 0x7fe7d3f0b470 threadB-3 1 
enforce2: 0x7fe7d3f0b470 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f0f240
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
Gurantee end: threadB-4 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f0f240
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1df90
111: 10
xx: threadB-4
xx: main-3
xx: main-4
xx: threadB-1
xx: threadB-2
xx: main-1
xx: main-2
xx: threadB-3
xx: threadB-0
xx: main-0
222
Add swRelation: 0x7fe7d3d1df90 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d1dc90
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3d1dc90 main-1 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c08ef0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3c08ef0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f108c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f108c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c08fa0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3c08fa0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 2 
enforce0: 0x7fe7d3f0b5b0 threadA-3 0 
enforce2: 0x7fe7d3f0b5b0 threadA-3 0 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 0 
enforce0: 0x7fe7d3f0b470 threadB-3 0 
enforce2: 0x7fe7d3f0b470 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3c1e3c0 threadA-1 0 
enforce0: 0x7fe7d3c1dde0 threadA-2 2 
enforce0: 0x7fe7d3f0b5b0 threadA-3 0 
enforce2: 0x7fe7d3f0b5b0 threadA-3 0 
enforce0: 0x7fe7d3f05820 threadB-1 0 
enforce0: 0x7fe7d3f058c0 threadB-2 0 
enforce0: 0x7fe7d3f0b470 threadB-3 2 
enforce2: 0x7fe7d3f0b470 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c1a7c0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c1a7c0
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 8
Checking fMap: 9
set new failed sch: 18 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In generateModel2 End!
### Solver Time: 1365.05
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74396
Generate a new Executor: 0x7fe7d3c1a770 0x7fe7d3c07600
Schedule: 0x7fe7d3d08c40 9
For: main 6
    main 0
    main 1
    main 2
    main 3
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadA 7
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
For: threadA 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
For: threadA 5
    main 0
    main 1
    main 2
    main 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
For: threadA 7
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 6
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 0
Read Map: threadA 3 0
Read Map: threadA 4 0
Read Map: threadA 6 0
Read Map: threadB 1 0
Read Map: threadB 2 0
Read Map: threadB 3 1
Read Map: threadB 5 0

Prefix: threadA 6

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3c1a770
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3f10da4 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3f033b0 0x7fe7d3f10da4 0

Write value1: main-1 0x7fe7d3f10da4 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3f10da8 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3f067b0 0x7fe7d3f10da8 0

Write value1: main-2 0x7fe7d3f10da8 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3c1a770
BeginFunc: 0x7fe7d3c1a770
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252
checker_addUses: 294 1 293

update load: 253 0
252 0 

checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 109 1 89
checker_addUses: 297 1 296

update load: 109 0
89 0 

checker_addUses: 300 1 299
BeginFunc: 0x7fe7d3c1a770
checker_addUses: 301 1 300
checker_addUses: 240 1 239

In checker_thread_begin: 0x103f00000

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251
checker_addUses: 294 1 293

update load: 252 0
251 0 

checker_addUses: 295 1 292
checker_addUses: 296 1 291
Waitting for create thread 0x103f00000
checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 301 1 300

In checker_thread_begin: 0x103f83000
checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 112 1 88

update load: 112 0
88 0 

checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103f00000
Waitting for create thread 0x103f00000
Waitting for create thread 0x103f83000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103f83000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

In add action: main-5
End add action! main-5
checker_addUses: 120 1 115
Waitting for create thread 0x103f00000
Waitting for create thread 0x103f83000

update load: 120 0
115 0 

In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5
In add action: threadB-0

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3f10da8 7 6!
End add action! threadB-0
In read action: 0x103f00000
checker_addUses: 46 1 45
In add action: threadA-1

update load: 46 0
45 0 

Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
checker_addUses: 47 1 46

update load: 47 0
46 0 

End add action! threadA-1
loads: 0 1
checker_addUses: 48 1 47

add load: 6 threadA-1 1

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3f10da8 7 In add action: main-6
48!
In read action: 0x103f83000
End add action! main-6
In add action: threadB-1
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In pre_read action: threadB-1
fetch expect value: 0x7fe7d3f10da8 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3f10da8 0 0 0
End: 0x103f83000 threadB-1
checker_addUses: 49 1 46

update load: 49 0
46 0 

checker_addUses: 50 1 45

update load: 50 0
45 0 

checker_addUses: 51 1 50
waiting read: 0x103f00000 threadA-1
update load: 51 0
50 0 


in update priority: 0x103f00000
checker_addUses: 52 1 51

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3f10da4 7 52!
In read action: 0x103f83000
In add action: threadB-2
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3f10da4 0
hhhhh1

Read expect value: threadB-2 0x7fe7d3f10da4 0 0 0
End: 0x103f83000 threadB-2
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 54 0
45 0 

checker_addUses: 55 1 54

update load: 55 0
54 0 

checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-2 threadB-1 
nwait: 0, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

waiting read: 0x103f00000 checker_addUses: 58 1 57
threadA-1
in update priority: 0x103f00000
In pre_read action: 
update load: 58 0
57 0 

threadA-1
In rmw_add: 0x7fe7d3f10da4 1 7
fetch expect value: 0x7fe7d3f10da8 0
hhhhh1

Read expect value: threadA-1 0x7fe7d3f10da8 0 0 0
End: 0x103f00000 threadA-1
checker_addUses: 7 1 4

update load: 7 0
4 0 

checker_addUses: 8 1 3
In add action: threadB-3

update load: 8 0
3 0 

checker_addUses: 9 1 8
Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 

update load: 9 0
8 0 

End add action! threadB-3
checker_addUses: 10 1 9

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3f05380 3 1 
update load: 10 0
9 0 

0
In atomic checker_preLoad: 0x7fe7d3f10da4 7 10!
In read action: 0x103f00000
In add action: threadA-2
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3f10da4 0
hhhhh1

Read expect value: threadA-2 0x7fe7d3f10da4 0 0 0
End: 0x103f00000 threadA-2
checker_addUses: 11 1 8

update load: 11 0
8 0 

checker_addUses: 12 1 3

update load: 12 0
3 0 

checker_addUses: 13 1 12

update load: 13 0
12 0 

checker_addUses: 14 3 10
waiting rmw_add!

update load: 14 2
10 13 6 0 
threadA-2 threadA-1 
nwait: 0, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3f10da4 1 7
In add action: threadA-3
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3e0ea30 3 1 0
hhhhh1

expect value rmw_add: threadA 3 0 !1!

waiting rmw_add!
update buffer: 0x7fe7d3e07430 0x7fe7d3f10da4 1
update buffer: 0x7fe7d3f055a0 0x7fe7d3f10da4 1
update buffer: 0x7fe7d3f033b0 0x7fe7d3f10da4 1
checker_addUses: 17 1 8

update load: 17 0
8 0 

hhhhh1
checker_addUses: 18 1 12

expect value rmw_add: threadB 3 1 !1!

update buffer: 0x7fe7d3e07430 0x7fe7d3f10da4 2

update load: 18 0
12 0 

update buffer: 0x7fe7d3f055a0 0x7fe7d3f10da4 2
checker_addUses: 19 1 18
update buffer: 0x7fe7d3f033b0 0x7fe7d3f10da4 2

update load: 19 0
18 0 

checker_addUses: 59 1 50
checker_addUses: 20 2 16

update load: 59 0
50 0 

checker_addUses: 60 1 54

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 21 1 20

update load: 60 0
54 0 

checker_addUses: 61 1 60

update load: 21 1
20 0 
threadA-3 

update load: 61 0
60 0 

checker_addUses: 62 2 58

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 30 1 4
checker_addUses: 63 1 62

update load: 30 0
4 0 22 34 


update load: 63 1
62 0 
threadB-3 
checker_addUses: 31 1 30
checker_addUses: 65 1 50

update load: 31 0
30 0 22 34 

In atomic checker_preLoad: 0x7fe7d3f10da8 7 31!

update load: 65 1
50 0 63 
threadB-3 
In read action: 0x103f00000
checker_addUses: 66 1 65
In add action: threadA-4

update load: 66 1
65 0 63 
threadB-3 
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
In atomic checker_preStore: 0x7fe7d3f10da4 0 7!
In write: 0x103f83000
End add action! threadA-4
loads: 0 4

add load: 31 threadA-4 1
In add action: threadB-4
End add action! threadB-4
action: threadB-4
loads: 1 4
set Reachability map 111: 0x7fe7d3f05380 4 1 1
update buffer: 0x7fe7d3e07430 0x7fe7d3f10da4 0
update buffer: 0x7fe7d3f055a0 0x7fe7d3f10da4 0
update buffer: 0x7fe7d3f033b0 0x7fe7d3f10da4 0

Write value1: threadB-4 0x7fe7d3f10da4 0!
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 
checker_addUses: 68 1 46

update load: 68 1
46 0 63 
threadB-3 
checker_addUses: 69 1 68
waiting read: 0x103f00000 threadA-4
in update priority: 0x103f00000
In pre_read action: 
update load: 69 1
68 0 63 
threadB-3 
threadA-4
In rmw_add: 0x7fe7d3f10da8 1 7
fetch expect value: 0x7fe7d3f10da8 0
hhhhh1

Read expect value: threadA-4 0x7fe7d3f10da8 0 0 0
End: 0x103f00000 threadA-4
checker_addUses: 32 1 4
In add action: threadB-5

update load: 32 0
4 0 22 34 

Tset: 3 3 0x103f83000
0x103f00000 0x103f83000 0x7fff7d800300 
checker_addUses: 33 2 31
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5

update load: 33 2
31 6 0 22 34 
threadA-1 threadA-4 
set Reachability map 111: 0x7fe7d3f05380 5 2 2
checker_addUses: 34 1 33

update load: 34 2
33 0 22 34 
threadA-1 threadA-4 
In thread_yield_action!
Begin thread yield!
In thread yield!
In add action: threadA-5
End add action! threadA-5
End thread yield!
waiting rmw_add!
checker_addUses: 30 1 4

update load: 30 2
4 0 22 34 
threadA-1 threadA-4 
checker_addUses: 31 1 30

update load: 31 2
30 0 22 34 
threadA-1 threadA-4 
In atomic checker_preLoad: 0x7fe7d3f10da8 7 31!
In read action: 0x103f00000
waiting rmw_add!
In add action: threadA-6
Tset: 3 3 0x103f00000
0x103f00000 0x103f83000 0x7fff7d800300 
End add action! threadA-6
loads: 2 6
set Reachability map 111: 0x7fe7d3e0ea30 6 2 1

add load: 31 threadA-6 1
In pre_read action: threadA-6
fetch expect value: 0x7fe7d3f10da8 0
hhhhh1

Read expect value: threadA-6 0x7fe7d3f10da8 0 0 0
End: 0x103f00000 threadA-6
checker_addUses: 32 1 4
hhhhh1

expect value rmw_add: threadB 5 0 !1!


update load: 32 2
4 0 22 34 
threadA-1 threadA-4 
update buffer: 0x7fe7d3e167d0 0x7fe7d3f10da8 1
checker_addUses: 33 2 31
update buffer: 0x7fe7d3f05600 0x7fe7d3f10da8 1
update buffer: 0x7fe7d3f067b0 0x7fe7d3f10da8 1
checker_addUses: 70 1 46

update load: 33 3
31 6 0 22 34 
threadA-1 threadA-4 threadA-6 

update load: 70 1
46 0 63 
threadB-3 
checker_addUses: 34 1 33
checker_addUses: 85 1 84

update load: 34 3
33 0 22 34 
threadA-1 threadA-4 threadA-6 

update load: 85 1
84 0 63 
threadB-3 
var = 1
In thread_yield_action!
In checker_thread_end
Begin thread yield!
Thread_end_action: 0x103f83000
erase enabledThreads: threadB-6
In add action: threadB-6
End add action! threadB-6
In thread yield!
checker_addUses: 303 1 292
In add action: threadA-7
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3c1a770
add prio: 0x103f00000 0x7fff7d800300
End add action! threadA-7
End thread yield!
checker_addUses: 30 1 4

update load: 30 3
4 0 22 34 
threadA-1 threadA-4 threadA-6 
checker_addUses: 31 1 30

update load: 31 3
30 0 22 34 
threadA-1 threadA-4 threadA-6 
In atomic checker_preLoad: 0x7fe7d3f10da8 7 31!
In read action: 0x103f00000
In add action: threadA-8
0x103f00000
0x7fff7d800300 
Tset: 1 2 0x103f00000
0x7fff7d800300 
End add action! threadA-8
loads: 3 8
set Reachability map 111: 0x7fe7d3e0ea30 8 3 2

add load: 31 threadA-8 1
In pre_read action: threadA-8
get value: 0x7fe7d3e167d0 0x7fe7d3f10da8 1

Read expect value: threadA-8 0x7fe7d3f10da8 1 1 1
End: 0x103f00000 threadA-8
checker_addUses: 32 1 4

update load: 32 3
4 0 22 34 
threadA-1 threadA-4 threadA-6 
checker_addUses: 33 2 31

update load: 33 4
31 6 0 22 34 
threadA-8 threadA-1 threadA-4 threadA-6 
checker_addUses: 34 1 33

update load: 34 4
33 0 22 34 
threadA-8 threadA-1 threadA-4 threadA-6 
In checker_thread_end
Thread_end_action: 0x103f00000
erase enabledThreads: threadA-9
In add action: threadA-9
End add action! threadA-9
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3c1a770
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
erase prio: 0x103f00000 0x7fff7d800300
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 0
threadA-6 0
threadA-8 1
threadB-1 0
threadB-2 0
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3d08c40
vec1: 1 5
vec1: 1 5
vec1: 0 5
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
add prefix: threadA-8
vec2: threadA 0 6
add prefix: threadB-1
add read: threadB-2
vec2: threadB 1 7
vec2: main 0 7
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
add prefix: threadA-8
vec2: threadA 0 6
add prefix: threadB-1
add prefix: threadB-2
add read: threadB-3
vec2: threadB 1 8
vec2: main 0 8
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
add prefix: threadA-8
vec2: threadA 0 6
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-5
vec2: threadB 1 9
vec2: main 0 9
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
add prefix: threadA-8
vec2: threadA 0 6
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 10
vec2: main 0 10
add value: threadA-8 1
add value: threadA-8 0
add value: threadB-1 1
add value: threadB-1 0
fMap: threadA 8 0
fMap: threadB 1 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadA 4 0
fMap: threadA 6 0
checking: read:val
0: threadA-8 : 0
1: threadB-1 : 0
prefix & reads: 5 2
enforce1: 0x7fe7d3e05930 threadA-2 0 
enforce1: 0x7fe7d3e05c20 threadA-3 0 
enforce1: 0x7fe7d3e0ff80 threadA-1 0 
enforce1: 0x7fe7d3e12c70 threadA-4 0 
enforce1: 0x7fe7d3e13030 threadA-6 0 
enforce0: 0x7fe7d3c19390 threadA-8 0 
enforce2: 0x7fe7d3e0ff80 threadA-1 0 
enforce2: 0x7fe7d3e12c70 threadA-4 0 
enforce2: 0x7fe7d3e13030 threadA-6 0 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
ccc1
xx: threadA 4 0
xx: threadA 6 0
add a failed check2: 
Identify an unfair schedule!
fMap: threadA 8 0
fMap: threadB 1 1
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadA 4 0
fMap: threadA 6 0
Skip an inconsistent check!
threadA-8 0
threadB-1 1
fMap: threadA 8 1
fMap: threadB 1 1
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadA 4 0
fMap: threadA 6 0
Skip an inconsistent check!
threadA-8 1
threadB-1 1
add value: threadB-2 1
add value: threadB-2 2
add value: threadB-2 0
add value: threadB-2 0
fMap: threadB 2 1
fMap: threadA 8 1
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadA 4 0
fMap: threadA 6 0
fMap: threadB 1 0
Skip an inconsistent check!
threadB-2 1
fMap: threadB 2 2
fMap: threadA 8 1
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadA 4 0
fMap: threadA 6 0
fMap: threadB 1 0
Skip an inconsistent check!
threadB-2 2
add value: threadB-3 1
add value: threadB-3 0
add value: threadB-3 0
fMap: threadB 3 0
fMap: threadA 8 1
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 1 0
fMap: threadB 2 0
fMap: threadA 4 0
fMap: threadA 6 0
fMap: threadB 1 0
Skip an inconsistent check!
threadB-3 0
add value: threadB-5 0
Checking previous unsat schedules: 18
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3f14fe0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e135b0
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e135b0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3e0ff80 threadA-1 1 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0ea30
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1dcd0
111: 8
xx: threadA-2
xx: threadA-3
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1dcd0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1cd50
111: 11
xx: threadB-4
xx: threadB-5
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3e1cd50 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1e0d0
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1e0d0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-9
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1230 column 10: model is not available") 0
[Solver] (error "line 1230 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3c1a770 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3e0ff80 threadA-1 1 
enforce0: 0x7fe7d3f14fe0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0ea30
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e13120
111: 8
xx: threadA-2
xx: threadA-3
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e13120 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e136e0
111: 11
xx: threadB-4
xx: threadB-5
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3e136e0 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 1 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 1 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 2 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1a540
111: 9
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3e1a540 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1a650
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1a650 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0ea30
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1aaf0
111: 8
xx: threadA-2
xx: threadA-3
xx: threadA-1
xx: threadA-0
xx: main-3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1aaf0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1b030
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1b030 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-9
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2466 column 10: model is not available") 0
[Solver] (error "line 2466 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3c1a770 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 2 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1ff50
111: 9
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3e1ff50 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1fff0
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1fff0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 0 
enforce0: 0x7fe7d3e05c20 threadA-3 0 
enforce2: 0x7fe7d3e05c20 threadA-3 0 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 0 
enforce0: 0x7fe7d3e05760 threadB-3 0 
enforce2: 0x7fe7d3e05760 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16440
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f16440 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16550
111: 10
xx: threadB-4
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3f16550 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16770
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f16770 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0ea30
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16820
111: 10
xx: threadB-4
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3f16820 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3e0ea30
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16bf0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f16bf0 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16f70
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f16f70 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f16e50
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f16e50 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f170c0
111: 3
xx: main-2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f170c0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-9
msss!
mhb1: 0x7fe7d3e0ea30
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 3702 column 10: model is not available") 0
[Solver] (error "line 3702 column 10: model is not available")


(SCConsistent RW ASW) 0
end checksat!
ccc6
test1
0x7fe7d3c1a770 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 0 
enforce0: 0x7fe7d3e05c20 threadA-3 2 
enforce2: 0x7fe7d3e05c20 threadA-3 2 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 0 
enforce0: 0x7fe7d3e05760 threadB-3 0 
enforce2: 0x7fe7d3e05760 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1c140
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e1c140 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3f05380
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1c220
111: 10
xx: threadB-4
xx: threadB-3
xx: main-4
xx: threadB-2
xx: main-3
xx: main-2
xx: main-0
xx: main-1
xx: threadB-0
xx: threadB-1
222
Add swRelation: 0x7fe7d3e1c220 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d0a1d0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d0a1d0 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 2
In addRWRelation: 

xxxx read: threadA-3 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 0 
enforce0: 0x7fe7d3e05c20 threadA-3 2 
enforce2: 0x7fe7d3e05c20 threadA-3 2 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 0 
enforce0: 0x7fe7d3e05760 threadB-3 1 
enforce2: 0x7fe7d3e05760 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 0 
enforce0: 0x7fe7d3e05c20 threadA-3 2 
enforce2: 0x7fe7d3e05c20 threadA-3 2 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 1 
enforce0: 0x7fe7d3e05760 threadB-3 1 
enforce2: 0x7fe7d3e05760 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 2 
enforce0: 0x7fe7d3e05c20 threadA-3 0 
enforce2: 0x7fe7d3e05c20 threadA-3 0 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 0 
enforce0: 0x7fe7d3e05760 threadB-3 0 
enforce2: 0x7fe7d3e05760 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f05380
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f06370
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f06370
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c22e20
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c22e20 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3e0ff80 threadA-1 0 
enforce0: 0x7fe7d3e05930 threadA-2 2 
enforce0: 0x7fe7d3e05c20 threadA-3 0 
enforce2: 0x7fe7d3e05c20 threadA-3 0 
enforce0: 0x7fe7d3f14fe0 threadB-1 0 
enforce0: 0x7fe7d3e12990 threadB-2 0 
enforce0: 0x7fe7d3e05760 threadB-3 2 
enforce2: 0x7fe7d3e05760 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c1a770
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3c1a770
Adding sc constraints: 13
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 8
Checking fMap: 9
set new failed sch: 18 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In generateModel2 End!
### Solver Time: 1545.82
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74397
Generate a new Executor: 0x7fe7d3d203d0 0x7fe7d3f166d0
Schedule: 0x7fe7d3f10e90 8
For: main 6
    main 0
    main 1
    main 2
    main 3
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
For: threadA 1
    main 0
    main 1
    main 2
    main 3
For: threadA 2
    main 0
    main 1
    main 2
    main 3
For: threadA 3
    main 0
    main 1
    main 2
    main 3
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
    threadB 4
For: threadA 5
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 0
Read Map: threadA 3 0
Read Map: threadA 4 0
Read Map: threadB 1 0
Read Map: threadB 2 1
Read Map: threadB 3 1
Read Map: threadB 5 0

Prefix: threadA 4
Prefix: threadB 5

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3d203d0
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3f16764 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3f04e30 0x7fe7d3f16764 0

Write value1: main-1 0x7fe7d3f16764 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3f16768 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3f16e20 0x7fe7d3f16768 0

Write value1: main-2 0x7fe7d3f16768 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3d203d0
BeginFunc: 0x7fe7d3d203d0
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 109 1 89
checker_addUses: 295 1 292

update load: 109 0
89 0 

checker_addUses: 296 1 291
BeginFunc: 0x7fe7d3d203d0
checker_addUses: 297 1 296
checker_addUses: 240 1 239
checker_addUses: 300 1 299

update load: 240 0
239 0 

checker_addUses: 301 1 300
checker_addUses: 243 1 239

In checker_thread_begin: 0x103f33000

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

Waitting for create thread 0x103f33000
checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 112 1 88
checker_addUses: 296 1 291
checker_addUses: 297 1 296

update load: 112 0
88 0 

checker_addUses: 300 1 299
checker_addUses: 113 1 112
checker_addUses: 301 1 300

update load: 113 0
112 0 


In checker_thread_begin: 0x103fb6000

In checker_thread_create: 0x7fff7d800300 0x103f33000
Waitting for create thread 0x103f33000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103fb6000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112
Waitting for create thread 0x103f33000

update load: 118 0
112 0 

Waitting for create thread 0x103fb6000
In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3
In add action: main-5

update load: 4 0
3 0 

End add action! main-5
checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 120 1 115
checker_addUses: 6 1 5

update load: 120 0
115 0 


update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3f16768 7 6!
In read action: 0x103f33000
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45
In add action: threadA-1

update load: 46 0
45 0 

Tset: 3 3 0x103f33000
0x103f33000 0x103fb6000 0x7fff7d800300 
checker_addUses: 47 1 46
End add action! threadA-1

update load: 47 0
46 0 

loads: 0 1
checker_addUses: 48 1 47
In add action: main-6

add load: 6 threadA-1 1

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3f16768 7 48In pre_read action: !
End add action! main-6
threadA-1In read action: 
0x103fb6000
fetch expect value: 0x7fe7d3f16768 0
hhhhh1

Read expect value: threadA-1 0x7fe7d3f16768 0 0 0
End: 0x103f33000 threadA-1
checker_addUses: 7 1 4
In add action: threadB-1

update load: 7 0
4 0 

Tset: 3 3 0x103fb6000
0x103f33000 0x103fb6000 0x7fff7d800300 
checker_addUses: 8 1 3

update load: 8 0
3 0 

End add action! threadB-1
loads: 0 1
checker_addUses: 9 1 8

add load: 48 threadB-1 1

update load: 9 0
8 0 

checker_addUses: 10 1 9

update load: 10 0
9 0 

In atomic checker_preLoad: 0x7fe7d3f16764 7 10!
In read action: 0x103f33000
In add action: threadA-2
Tset: 3 3 0x103f33000
0x103f33000 0x103fb6000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3f16764 0
hhhhh1

Read expect value: threadA-2 0x7fe7d3f16764 0 0 0
End: 0x103f33000 threadA-2
checker_addUses: 11 1 8

update load: 11 0
8 0 

waiting read: 0x103fb6000 checker_addUses: 12 1 3
threadB-1
in update priority: 0x103fb6000

update load: 12 0
3 0 

checker_addUses: 13 1 12

update load: 13 0
12 0 

checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-1 threadA-2 
nwait: 0, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15
waiting read: 0x103fb6000 threadB-1
update load: 16 0
15 0 


In rmw_add: in update priority: 0x7fe7d3f167640x103fb6000 
1 7
In add action: threadA-3
Tset: 3 3 0x103f33000
0x103f33000 0x103fb6000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d1fee0 3 1 0
hhhhh1

expect value rmw_add: threadA 3 0 !1!

update buffer: 0x7fe7d3d09c80 0x7fe7d3f16764 1
update buffer: 0x7fe7d3f11e80 0x7fe7d3f16764 1
update buffer: 0x7fe7d3f04e30 0x7fe7d3f16764 1
checker_addUses: 17 1 8
waiting read: 0x103fb6000 
update load: 17 0
8 0 

threadB-1
in update priority: 0x103fb6000
In pre_read action: checker_addUses: 18 1 12
threadB-1

update load: 18 0
12 0 

fetch expect value: 0x7fe7d3f16768 checker_addUses: 19 1 18
0
hhhhh1

update load: 19 0
18 0 


Read expect value: threadB-1 0x7fe7d3f16768 0 0 0
checker_addUses: 20 2 16
End: 0x103fb6000 threadB-1

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 49 1 46
checker_addUses: 21 1 20

update load: 49 0
46 0 


update load: 21 1
20 0 
threadA-3 
checker_addUses: 50 1 45

update load: 50 0
45 0 

checker_addUses: 51 1 50
checker_addUses: 30 1 4

update load: 51 0
50 0 

checker_addUses: 52 1 51

update load: 30 0
4 0 22 34 

checker_addUses: 31 1 30

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3f16764 7 52!
In read action: 0x103fb6000

update load: 31 0
30 0 22 34 

In atomic checker_preLoad: 0x7fe7d3f16768 7 31!
In read action: 0x103f33000
In add action: threadB-2
Tset: 3 3 0x103fb6000
0x103f33000 0x103fb6000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3f16764 1
hhhhh1

Read expect value: threadB-2 0x7fe7d3f16764 1 1 1
End: 0x103fb6000 threadB-2
checker_addUses: 53 1 50
In add action: threadA-4

update load: 53 0
50 0 

Tset: 3 3 0x103f33000
0x103f33000 0x103fb6000 0x7fff7d800300 
checker_addUses: 54 1 45
End add action! threadA-4
loads: 0 
update load: 54 0
45 0 

4
checker_addUses: 55 1 54

add load: 31 threadA-4 1

update load: 55 0
54 0 

checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-2 threadB-1 
nwait: 1, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

checker_addUses: 58 1 57

update load: 58 0
57 0 

In rmw_add: 0x7fe7d3f16764 1 7
In add action: threadB-3
Tset: 3 3 0x103fb6000
0x103f33000 0x103fb6000 0x7fff7d800300 
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3c0ba10 waiting read: 30x103f33000  1 threadA-40

in update priority: 0x103f33000
hhhhh1

expect value rmw_add: threadB 3 1 !1!

update buffer: 0x7fe7d3d09c80 0x7fe7d3f16764 2
update buffer: 0x7fe7d3f11e80 0x7fe7d3f16764 2
update buffer: 0x7fe7d3f04e30 0x7fe7d3f16764 2
checker_addUses: 59 1 50

update load: 59 0
50 0 

checker_addUses: 60 1 54

update load: 60 0
54 0 

checker_addUses: 61 1 60

update load: 61 0
60 0 

checker_addUses: 62 2 58

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 63 1 62

update load: 63 1
62 0 
threadB-3 
checker_addUses: 65 1 50

update load: 65 1
50 0 63 
threadB-3 
checker_addUses: 66 1 65
waiting read: 0x103f33000 threadA-4
in update priority: 0x103f33000

update load: 66 1
65 0 63 
threadB-3 
In atomic checker_preStore: 0x7fe7d3f16764 0 7!
In write: 0x103fb6000
In add action: threadB-4
End add action! threadB-4
action: threadB-4
loads: 1 4
set Reachability map 111: 0x7fe7d3c0ba10 4 1 1
update buffer: 0x7fe7d3d09c80 0x7fe7d3f16764 0
update buffer: 0x7fe7d3f11e80 0x7fe7d3f16764 0
update buffer: 0x7fe7d3f04e30 0x7fe7d3f16764 0

Write value1: threadB-4 0x7fe7d3f16764 0!
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 
checker_addUses: 68 1 46

update load: 68 1
46 0 63 
threadB-3 
checker_addUses: 69 1 68

update load: 69 1
68 0 63 
threadB-3 
In rmw_add: 0x7fe7d3f16768 1 7
In add action: threadB-5
Tset: 3 3 0x103fb6000
0x103f33000 0x103fb6000 0x7fff7d800300 
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3c0ba10 5 2 2
hhhhh1

expect value rmw_add: threadB 5 0 !1!

update buffer: 0x7fe7d3d1db30 0x7fe7d3f16768 1
update buffer: 0x7fe7d3f11ee0 0x7fe7d3f16768 1
update buffer: 0x7fe7d3f16e20 0x7fe7d3f16768 1
checker_addUses: 70 1 46

update load: 70 1
46 0 63 
threadB-3 
checker_addUses: 85 1 84
waiting read: 0x103f33000 
update load: 85 1
84 0 63 
threadB-3 
var = 1
threadA-4In checker_thread_end

in update priority: 0x103f33000
Thread_end_action: 0x103fb6000
In pre_read action: threadA-4
erase enabledThreads: threadB-6
In add action: threadB-6
fetch expect value: 0x7fe7d3f16768 0
hhhhh1
End add action! threadB-6

Read expect value: threadA-4 0x7fe7d3f16768 0 0 0
checker_addUses: 303 1 292
End: 0x103f33000 threadA-4
checker_addUses: 304 1 292
checker_addUses: 32 1 4
checker_addUses: 305 1 303
checker_addUses: 306 1 305

update load: 32 0
4 0 22 34 

BeginFunc: 0x7fe7d3d203d0
checker_addUses: 33 2 31

update load: 33 2
31 6 0 22 34 
threadA-1 threadA-4 
checker_addUses: 34 1 33

update load: 34 2
33 0 22 34 
threadA-1 threadA-4 
In thread_yield_action!
Begin thread yield!
In thread yield!
In add action: threadA-5
End add action! threadA-5
End thread yield!
checker_addUses: 30 1 4

update load: 30 2
4 0 22 34 
threadA-1 threadA-4 
checker_addUses: 31 1 30

update load: 31 2
30 0 22 34 
threadA-1 threadA-4 
In atomic checker_preLoad: 0x7fe7d3f16768 7 31!
In read action: 0x103f33000
In add action: threadA-6
Tset: 2 2 0x103f33000
0x103f33000 0x7fff7d800300 
End add action! threadA-6
loads: 2 6
set Reachability map 111: 0x7fe7d3d1fee0 6 2 1

add load: 31 threadA-6 1
In pre_read action: threadA-6
get value: 0x7fe7d3d1db30 0x7fe7d3f16768 1

Read expect value: threadA-6 0x7fe7d3f16768 1 1 1
End: 0x103f33000 threadA-6
checker_addUses: 32 1 4

update load: 32 2
4 0 22 34 
threadA-1 threadA-4 
checker_addUses: 33 2 31

update load: 33 3
31 6 0 22 34 
threadA-1 threadA-4 threadA-6 
checker_addUses: 34 1 33

update load: 34 3
33 0 22 34 
threadA-1 threadA-4 threadA-6 
In checker_thread_end
Thread_end_action: 0x103f33000
erase enabledThreads: threadA-7
In add action: threadA-7
End add action! threadA-7
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3d203d0
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 0
threadA-6 1
threadB-1 0
threadB-2 1
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3f10e90
vec1: 1 4
vec1: 0 9
vec1: 0 9
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
vec2: threadA 0 5
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-4
add prefix: threadB-5
vec2: threadB 0 10
vec2: main 0 10
add value: threadA-6 1
add value: threadA-6 0
fMap: threadA 6 0
fMap: threadB 2 1
fMap: threadB 3 1
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadA 4 0
fMap: threadB 4 0
fMap: threadB 5 0
fMap: threadB 1 0
Skip an inconsistent check!
threadA-6 0
Checking previous unsat schedules: 18
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3f12600 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d235c0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d235c0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d20a30 threadA-1 1 
enforce0: 0x7fe7d3f12600 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2a9e0
111: 8
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-0
xx: main-2
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d2a9e0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2ac10
111: 11
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: main-0
xx: main-2
xx: main-4
xx: threadB-0
xx: threadB-5
xx: threadB-1
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d2ac10 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2aab0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d2aab0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1058 column 10: model is not available") 0
[Solver] (error "line 1058 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3d203d0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d20a30 threadA-1 1 
enforce0: 0x7fe7d3f12600 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2a750
111: 8
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-0
xx: main-2
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d2a750 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d23d10
111: 11
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: main-0
xx: main-2
xx: main-4
xx: threadB-0
xx: threadB-5
xx: threadB-1
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d23d10 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 1 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e19260
111: 8
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-0
xx: main-2
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3e19260 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f15670
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f15670 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 1 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 2 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28c10
111: 8
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-0
xx: main-2
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d28c10 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d29900
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d29900 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d29a60
111: 9
xx: threadB-2
xx: threadB-3
xx: main-0
xx: main-2
xx: main-4
xx: threadB-0
xx: threadB-1
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d29a60 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d29f30
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d29f30 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2122 column 10: model is not available") 0
[Solver] (error "line 2122 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d203d0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 2 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 1 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 0 
enforce0: 0x7fe7d3d20ed0 threadA-3 2 
enforce2: 0x7fe7d3d20ed0 threadA-3 2 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 0 
enforce0: 0x7fe7d3c13a10 threadB-3 1 
enforce2: 0x7fe7d3c13a10 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f19a10
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f19a10 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 0 
enforce0: 0x7fe7d3d20ed0 threadA-3 0 
enforce2: 0x7fe7d3d20ed0 threadA-3 0 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 1 
enforce0: 0x7fe7d3c13a10 threadB-3 0 
enforce2: 0x7fe7d3c13a10 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28140
111: 8
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-0
xx: main-2
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d28140 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 1 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28580
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d28580 main-1 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d283d0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d283d0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 0
In addRWRelation: 

xxxx read: threadA-2 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28210
111: 10
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: main-0
xx: main-2
xx: main-4
xx: threadB-0
xx: threadB-1
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d28210 threadB-4 threadA-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28690
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d28690 main-1 threadA-2
xxx: threadA-2 (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 0 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0ba10
ssfdfsfd3!
Guarantee begin: threadB-4 1
list: threadB-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-4
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28730
111: 10
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: main-0
xx: main-2
xx: main-4
xx: threadB-0
xx: threadB-1
xx: main-3
xx: main-1
222
Add swRelation: 0x7fe7d3d28730 threadB-4 threadA-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d1fee0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28ef0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d28ef0 main-1 threadA-3
xxx: threadA-3 (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f17300
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d28a30
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d28a30 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-3 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-2_threadB-4 1) (= B_threadA-2_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-2 1)))) (and  (= RF_threadA-2_main-1 1) (= B_threadA-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadA-3_threadB-4 1) (= B_threadA-3_threadB-4 0) (= false (and (= B_threadB-4_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-4_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_threadB-4_main-1 1) (= B_main-1_threadA-3 1)))) (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadA-3 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3f17300
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3c0ba10
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3d1fee0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 3186 column 10: model is not available") 0
[Solver] (error "line 3186 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d203d0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 0 
enforce0: 0x7fe7d3d20ed0 threadA-3 2 
enforce2: 0x7fe7d3d20ed0 threadA-3 2 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 1 
enforce0: 0x7fe7d3c13a10 threadB-3 0 
enforce2: 0x7fe7d3c13a10 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d20a30 threadA-1 0 
enforce0: 0x7fe7d3d20c10 threadA-2 0 
enforce0: 0x7fe7d3d20ed0 threadA-3 2 
enforce2: 0x7fe7d3d20ed0 threadA-3 2 
enforce0: 0x7fe7d3f12600 threadB-1 0 
enforce0: 0x7fe7d3c09ab0 threadB-2 1 
enforce0: 0x7fe7d3c13a10 threadB-3 1 
enforce2: 0x7fe7d3c13a10 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d203d0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d203d0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 8
Checking fMap: 9
set new failed sch: 18 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In generateModel2 End!
### Solver Time: 1688.88
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74398
Generate a new Executor: 0x7fe7d3e16ef0 0x7fe7d3e1a840
Schedule: 0x7fe7d3c1e880 5
For: main 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadB 1
    threadB 2
    threadB 3
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
    threadB 7
For: threadA 1
    main 0
    main 1
    main 2
    main 3
For: threadA 2
    main 0
    main 1
    main 2
    main 3
For: threadA 3
    main 0
    main 1
    main 2
    main 3
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
For: threadA 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadB 1
    threadB 2
    threadB 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadB 1
    threadB 2
    threadB 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadB 1
    threadB 2
    threadB 3
For: threadB 7
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 0
Read Map: threadA 3 0
Read Map: threadB 1 0
Read Map: threadB 2 2

Prefix: threadA 2
Prefix: threadB 2

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3e16ef0
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3c24834 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3c21a60 0x7fe7d3c24834 0

Write value1: main-1 0x7fe7d3c24834 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3c24838 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3c1ddb0 0x7fe7d3c24838 0

Write value1: main-2 0x7fe7d3c24838 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3e16ef0
BeginFunc: 0x7fe7d3e16ef0
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 109 1 89
checker_addUses: 297 1 296
checker_addUses: 300 1 299

update load: 109 0
89 0 

checker_addUses: 301 1 300
BeginFunc: 0x7fe7d3e16ef0

In checker_thread_begin: 0x103f63000
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

Waitting for create thread 0x103f63000
checker_addUses: 252 1 251
checker_addUses: 294 1 293

update load: 252 0
251 0 

checker_addUses: 295 1 292
checker_addUses: 253 1 252
checker_addUses: 296 1 291

update load: 253 0
252 0 

checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 112 1 88
checker_addUses: 301 1 300

update load: 112 0
88 0 


In checker_thread_begin: 0x103fe6000
checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103f63000
Waitting for create thread 0x103f63000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

Waitting for create thread checker_addUses: 116 1 115
0x103fe6000

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x103fe6000
Waitting for create thread 0x103f63000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

Waitting for create thread 0x103fe6000
In add action: threadA-0
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3c24838 7 6!
In read action: 0x103f63000
In add action: threadA-1
Tset: 2 2 0x103f63000
0x103f63000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1

add load: 6 threadA-1 1
In pre_read action: threadA-1
fetch expect value: 0x7fe7d3c24838 0
hhhhh1

Read expect value: threadA-1 0x7fe7d3c24838 0 0 0
End: 0x103f63000 threadA-1
checker_addUses: 7 1 4

update load: 7 0
4 0 

checker_addUses: 8 1 3

update load: 8 0
3 0 

checker_addUses: 9 1 8

update load: 9 0
8 0 

checker_addUses: 10 1 9

update load: 10 0
9 0 

In atomic checker_preLoad: 0x7fe7d3c24834 7 10!
In read action: 0x103f63000
In add action: threadA-2
Tset: 2 2 0x103f63000
0x103f63000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3c24834 0
hhhhh1

Read expect value: threadA-2 0x7fe7d3c24834 0 0 0
End: 0x103f63000 threadA-2
checker_addUses: 11 1 8

update load: 11 0
8 0 

checker_addUses: 12 1 3

update load: 12 0
3 0 

checker_addUses: 13 1 12

update load: 13 0
12 0 

checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-1 threadA-2 
nwait: 0, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3c24834 1 7
In add action: main-5
End add action! main-5
In add action: threadA-3
Tset: 2 2 0x103f63000
0x103f63000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d09ec0 3 1 0
hhhhh1

expect value rmw_add: threadA 3 0 !1!

update buffer: 0x7fe7d3d213d0 0x7fe7d3c24834 1
update buffer: 0x7fe7d3c21a60 0x7fe7d3c24834 1
checker_addUses: 17 1 8

update load: 17 0
8 0 

checker_addUses: 18 1 12
checker_addUses: 120 1 115

update load: 18 0
12 0 

checker_addUses: 19 1 18

update load: 120 0
115 0 


update load: 19 0
18 0 

checker_addUses: 20 2 16
In add action: threadB-0

update load: 20 1
16 19 0 
threadA-3 
End add action! threadB-0
checker_addUses: 21 1 20

update load: 21 1
20 0 
threadA-3 
checker_addUses: 46 1 45

update load: 46 0
45 0 

checker_addUses: 47 1 46
checker_addUses: 30 1 4

update load: 47 0
46 0 


update load: 30 0
4 0 22 34 

checker_addUses: 48 1 47
checker_addUses: 31 1 30

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3c24838 7 48!
In read action: 0x103fe6000
update load: 31 0
30 0 22 34 


In atomic checker_preLoad: In add action: main-6
0x7fe7d3c24838 7 31!
In read action: 0x103f63000
End add action! main-6
In add action: threadB-1
Tset: 3 3 0x103fe6000
0x103f63000 0x103fe6000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In pre_read action: threadB-1
fetch expect value: 0x7fe7d3c24838 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3c24838 0 0 0
End: 0x103fe6000 threadB-1
checker_addUses: 49 1 46

update load: 49 0
46 0 

In add action: threadA-4
checker_addUses: 50 1 45
Tset: 3 3 0x103f63000
0x103f63000 0x103fe6000 0x7fff7d800300 

update load: 50 0
45 0 

End add action! threadA-4
checker_addUses: 51 1 50
loads: 0 4

update load: 51 0
50 0 


add load: 31 threadA-4 1
checker_addUses: 52 1 51

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3c24834 7 52!
In read action: 0x103fe6000
In add action: threadB-2
Tset: 3 3 0x103fe6000
0x103f63000 0x103fe6000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3c24834 2

Read expect value: threadB-2 0x7fe7d3c24834 2 2 2
End: 0x103fe6000 threadB-2
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 54 0
45 0 

checker_addUses: 55 1 54
waiting read: 0x103f63000 
update load: 55 0
54 0 

threadA-4
in update priority: 0x103f63000
checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-2 threadB-1 
nwait: 2, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

checker_addUses: 58 1 57

update load: 58 0
57 0 

In rmw_add: 0x7fe7d3c24834 1 7
In add action: threadB-3
Tset: 3 3 0x103fe6000
0x103f63000 0x103fe6000 0x7fff7d800300 
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3f19160 3 1 0
waiting read: 0x103f63000 get value: 0x7fe7d3e19640 0x7fe7d3c24834 1
threadA-4
in update priority: 0x103f63000

expect value rmw_add: threadB 3 1 !1!

update buffer: 0x7fe7d3d213d0 0x7fe7d3c24834 2
update buffer: 0x7fe7d3e19640 0x7fe7d3c24834 2
update buffer: 0x7fe7d3c21a60 0x7fe7d3c24834 2
checker_addUses: 59 1 50
In pre_read action: threadA-4

update load: 59 0
50 0 

checker_addUses: 60 1 54
get value: 0x7fe7d3d29970 0x7fe7d3c24838 0

update load: 60 0
54 0 


Read expect value: threadA-4 0x7fe7d3c24838 0 0 0
End: 0x103f63000 threadA-4
checker_addUses: 61 1 60
checker_addUses: 32 1 4

update load: 61 0
60 0 

checker_addUses: 62 2 58

update load: 32 0
4 0 22 34 

checker_addUses: 33 2 31

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 63 1 62

update load: 33 2
31 6 0 22 34 
threadA-1 threadA-4 

update load: 63 1
62 0 
threadB-3 
checker_addUses: 34 1 33
checker_addUses: 65 1 50

update load: 34 2
33 0 22 34 
threadA-1 threadA-4 

update load: 65 1
50 0 63 
threadB-3 
checker_addUses: 66 1 65
In thread_yield_action!
Begin thread yield!
In thread yield!

update load: 66 1
65 0 63 
threadB-3 
In atomic checker_preStore: In add action: threadA-5
0x7fe7d3c24834 0 7!
In write: 0x103fe6000
End add action! threadA-5
End thread yield!
In add action: threadB-4
End add action! threadB-4
action: threadB-4
loads: 1 4
set Reachability map 111: 0x7fe7d3f19160 4 1 1
update buffer: 0x7fe7d3d213d0 0x7fe7d3c24834 0
update buffer: 0x7fe7d3e19640 0x7fe7d3c24834 0
update buffer: 0x7fe7d3c21a60 0x7fe7d3c24834 0

Write value1: threadB-4 0x7fe7d3c24834 0!
checker_addUses: 67 1 50

update load: 67 1
50 0 63 
threadB-3 
checker_addUses: 68 1 46

update load: 68 1
46 0 63 
threadB-3 
checker_addUses: 69 1 68

update load: 69 1
68 0 63 
threadB-3 
In rmw_add: 0x7fe7d3c24838 1 7
In add action: threadB-5
Tset: 3 3 0x103fe6000
0x103f63000 0x103fe6000 0x7fff7d800300 
End add action! threadB-5

add load: 69 threadB-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3f19160 5 2 2
get value: 0x7fe7d3e1ac70 0x7fe7d3c24838 0

expect value rmw_add: threadB 5 0 !1!

update buffer: 0x7fe7d3d29970 0x7fe7d3c24838 1
update buffer: 0x7fe7d3e1ac70 0x7fe7d3c24838 1
update buffer: 0x7fe7d3c1ddb0 0x7fe7d3c24838 1
checker_addUses: 70 1 46

update load: 70 1
46 0 63 
threadB-3 
checker_addUses: 85 1 84

update load: 85 1
84 0 63 
threadB-3 
var = 1
In checker_thread_end
Thread_end_action: 0x103fe6000
erase enabledThreads: threadB-6
In add action: threadB-6
End add action! threadB-6
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e16ef0
checker_addUses: 30 1 4

update load: 30 2
4 0 22 34 
threadA-1 threadA-4 
checker_addUses: 31 1 30

update load: 31 2
30 0 22 34 
threadA-1 threadA-4 
In atomic checker_preLoad: 0x7fe7d3c24838 7 31!
In read action: 0x103f63000
In add action: threadA-6
Tset: 2 2 0x103f63000
0x103f63000 0x7fff7d800300 
End add action! threadA-6
loads: 2 6
set Reachability map 111: 0x7fe7d3d09ec0 6 2 1

add load: 31 threadA-6 1
In pre_read action: threadA-6
get value: 0x7fe7d3d29970 0x7fe7d3c24838 1

Read expect value: threadA-6 0x7fe7d3c24838 1 1 1
End: 0x103f63000 threadA-6
checker_addUses: 32 1 4

update load: 32 2
4 0 22 34 
threadA-1 threadA-4 
checker_addUses: 33 2 31

update load: 33 3
31 6 0 22 34 
threadA-1 threadA-6 threadA-4 
checker_addUses: 34 1 33

update load: 34 3
33 0 22 34 
threadA-1 threadA-6 threadA-4 
In checker_thread_end
Thread_end_action: 0x103f63000
erase enabledThreads: threadA-7
In add action: threadA-7
End add action! threadA-7
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3e16ef0
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 0
threadA-3 0
threadA-4 0
threadA-6 1
threadB-1 0
threadB-2 2
threadB-3 1
threadB-4 0
threadB-5 0
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3c1e880
vec1: 1 2
vec1: 1 4
vec1: 0 4
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add read: threadA-4
vec2: threadA 1 3
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-5
vec2: threadB 1 6
vec2: main 0 6
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add read: threadA-6
vec2: threadA 1 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 8
vec2: main 0 8
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-6
vec2: threadA 0 5
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-5
vec2: threadB 0 9
vec2: main 0 9
add value: threadA-3 2
add value: threadA-3 0
add value: threadA-3 0
add value: threadB-3 1
add value: threadB-3 0
add value: threadB-3 0
fMap: threadA 3 0
fMap: threadB 3 0
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadB 1 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d0a580 threadB-2 2 
enforce1: 0x7fe7d3d200e0 threadA-1 0 
enforce1: 0x7fe7d3d20240 threadA-2 0 
enforce1: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d20480 threadA-3 0 
enforce2: 0x7fe7d3d20480 threadA-3 0 
enforce0: 0x7fe7d3d0a840 threadB-3 0 
enforce2: 0x7fe7d3d0a840 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 2
threadB 3 0
fMap: threadA 3 2
fMap: threadB 3 0
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadB 1 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d0a580 threadB-2 2 
enforce1: 0x7fe7d3d200e0 threadA-1 0 
enforce1: 0x7fe7d3d20240 threadA-2 0 
enforce1: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3d0a840 threadB-3 0 
enforce2: 0x7fe7d3d0a840 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 0
fMap: threadA 3 2
fMap: threadB 3 1
fMap: threadB 2 2
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadB 1 0
checking: read:val
0: threadA-3 : 2
1: threadB-3 : 1
prefix & reads: 4 2
enforce1: 0x7fe7d3d0a580 threadB-2 2 
enforce1: 0x7fe7d3d200e0 threadA-1 0 
enforce1: 0x7fe7d3d20240 threadA-2 0 
enforce1: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 1
add value: threadA-4 1
add value: threadA-4 0
add value: threadB-5 0
fMap: threadA 4 1
fMap: threadB 5 0
fMap: threadB 2 2
fMap: threadB 3 1
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadB 1 0
checking: read:val
0: threadA-4 : 1
1: threadB-5 : 0
prefix & reads: 6 2
enforce1: 0x7fe7d3d0a580 threadB-2 2 
enforce1: 0x7fe7d3d0a840 threadB-3 1 
enforce1: 0x7fe7d3d200e0 threadA-1 0 
enforce1: 0x7fe7d3d20240 threadA-2 0 
enforce1: 0x7fe7d3d20480 threadA-3 0 
enforce1: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3e1c290 threadA-4 1 
enforce0: 0x7fe7d3d220d0 threadB-5 0 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d220d0 threadB-5 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadA 4 1
threadB 1 0
threadB 2 2
threadB 3 1
threadB 5 0
add value: threadA-6 1
add value: threadA-6 0
fMap: threadA 6 0
fMap: threadB 2 2
fMap: threadB 3 1
fMap: threadA 1 0
fMap: threadA 2 0
fMap: threadA 3 0
fMap: threadB 5 0
fMap: threadB 1 0
fMap: threadA 4 0
Skip an inconsistent check!
threadA-6 0
Checking previous unsat schedules: 22
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3e19f80 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1d190
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3e1d190 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d200e0 threadA-1 1 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f19160
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f19160
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d09ec0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2f860
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3d2f860 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f19160
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2b380
111: 11
xx: main-1
xx: main-2
xx: main-0
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
xx: threadB-1
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d2b380 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2b1f0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d2b1f0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f19160
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1058 column 10: model is not available") 0
[Solver] (error "line 1058 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3e16ef0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d200e0 threadA-1 1 
enforce0: 0x7fe7d3e19f80 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2

write: threadB-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f19160
ssfdfsfd3!
Guarantee begin: threadB-5 1
list: threadB-3
guarantee: threadB-3 1
just before!
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f19160
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d09ec0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2b0b0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3d2b0b0 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Gurantee end: threadB-5 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadA-1 threadB-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f19160
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2b150
111: 11
xx: main-1
xx: main-2
xx: main-0
xx: threadB-2
xx: threadB-3
xx: threadB-4
xx: threadB-5
xx: threadB-1
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d2b150 threadB-5 threadA-1
xxx: threadA-1 (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))) (= RF_threadA-1_threadB-5 1) (= B_threadA-1_threadB-5 0) (= false (and (= B_threadB-5_main-2 1) (= B_main-2_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadB-5 1

write: main-2 0
writeset: 2
xxx: threadB-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 1 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 2 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d09ec0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d2bfd0
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3d2bfd0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d27330
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3d27330 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 0 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 1 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 2 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadA-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d09ec0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f03c00
111: 8
xx: main-1
xx: main-2
xx: main-0
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3f03c00 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f13f60
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f13f60 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 0 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: threadB-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f19160
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f19160
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f14530
111: 9
xx: main-1
xx: main-2
xx: main-0
xx: threadB-2
xx: threadB-3
xx: threadB-1
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3f14530 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadB-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f13dc0
111: 3
xx: main-1
xx: main-2
xx: main-0
222
Add swRelation: 0x7fe7d3f13dc0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_threadB-4 1) (= B_threadB-4_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadB-4 1) (= B_threadB-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadB-5 1) (= B_threadB-5_threadB-1 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-6
msss!
mhb1: 0x7fe7d3f19160
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-7
msss!
mhb1: 0x7fe7d3d09ec0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2122 column 10: model is not available") 0
[Solver] (error "line 2122 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3e16ef0 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 0 
enforce0: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 2 0

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3c0c5c0
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3c0c5c0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1fbf0
111: 2
xx: main-1
xx: main-0
222
Add swRelation: 0x7fe7d3e1fbf0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_main-1_threadB-4 1) (= B_threadB-4_threadB-2 1)))))
Add RW: threadB-3 1
In addRWRelation: 

xxxx read: threadB-3 1 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 1
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 1 
enforce0: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 2 1

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 8
Checking fMap: 9
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 2
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 0 
enforce2: 0x7fe7d3d20480 threadA-3 0 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
enforce0: 0x7fe7d3d0a840 threadB-3 0 
enforce2: 0x7fe7d3d0a840 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 2
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
enforce0: 0x7fe7d3d0a840 threadB-3 0 
enforce2: 0x7fe7d3d0a840 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 2
3: threadB-1 : 0
4: threadB-2 : 2
5: threadB-3 : 1
prefix & reads: 0 6
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 2 
enforce2: 0x7fe7d3d20480 threadA-3 2 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
enforce0: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 8
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 0
2: threadA-3 : 0
3: threadA-4 : 1
4: threadB-1 : 0
5: threadB-2 : 2
6: threadB-3 : 1
7: threadB-5 : 0
prefix & reads: 0 8
enforce0: 0x7fe7d3d200e0 threadA-1 0 
enforce0: 0x7fe7d3d20240 threadA-2 0 
enforce0: 0x7fe7d3d20480 threadA-3 0 
enforce2: 0x7fe7d3d20480 threadA-3 0 
enforce0: 0x7fe7d3e1c290 threadA-4 1 
enforce0: 0x7fe7d3e19f80 threadB-1 0 
enforce0: 0x7fe7d3d0a580 threadB-2 2 
enforce0: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
enforce0: 0x7fe7d3d220d0 threadB-5 0 
enforce2: 0x7fe7d3d0a840 threadB-3 1 
enforce2: 0x7fe7d3d220d0 threadB-5 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e16ef0
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile16_0x7fe7d3e16ef0
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 2 2

write: threadA-3 1

write: threadB-3 2

write: threadB-4 0

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
set new failed sch: 22 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadA 4 1
threadB 1 0
threadB 2 2
threadB 3 1
threadB 5 0
In generateModel2 End!
### Solver Time: 1897.94
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74399
Generate a new Executor: 0x7fe7d3d24d70 0x7fe7d3d2e260
Schedule: 0x7fe7d3d171c0 5
For: main 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadB 1
    threadB 2
    threadB 3
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
    threadB 6
    threadB 7
For: threadA 1
    main 0
    main 1
    main 2
    main 3
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadB 1
    threadB 2
    threadB 3
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadB 1
    threadB 2
    threadB 3
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadB 1
    threadB 2
    threadB 3
For: threadA 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadB 1
    threadB 2
    threadB 3
For: threadA 6
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadB 1
    threadB 2
    threadB 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 6
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadB 1
    threadB 2
    threadB 3
For: threadB 7
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 1
Read Map: threadB 1 0
Read Map: threadB 2 0
Read Map: threadB 3 0

Prefix: threadA 2
Prefix: threadB 2

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3d24d70
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3d2ede4 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3d31ce0 0x7fe7d3d2ede4 0

Write value1: main-1 0x7fe7d3d2ede4 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3d2ede8 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3d273a0 0x7fe7d3d2ede8 0

Write value1: main-2 0x7fe7d3d2ede8 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3d24d70
BeginFunc: 0x7fe7d3d24d70
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 296 1 291
checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 301 1 300

In checker_thread_begin: 0x103f93000
checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 109 1 89

update load: 109 0
89 0 

BeginFunc: 0x7fe7d3d24d70
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

Waitting for create thread 0x103f93000
checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 294 1 293
checker_addUses: 252 1 251
checker_addUses: 295 1 292
Waitting for create thread 0x103f93000

update load: 252 0
251 0 

checker_addUses: 296 1 291
checker_addUses: 253 1 252
checker_addUses: 297 1 296

update load: 253 0
252 0 

checker_addUses: 300 1 299
checker_addUses: 112 1 88
checker_addUses: 301 1 300

update load: 112 0
88 0 


In checker_thread_begin: 0x104016000
checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103f93000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x104016000
Waitting for create thread 0x103f93000
In add action: main-4
End add action! main-4
Waitting for create thread 0x104016000
checker_addUses: 118 1 112
In add action: threadA-0

update load: 118 0
112 0 

End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3d2ede8 7 6!
In read action: 0x103f93000
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45

update load: 46 0
45 0 

In add action: threadA-1
checker_addUses: 47 1 46

update load: 47 0
46 0 

Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3d2ede8 7 48!
End add action! threadA-1
In read action: 0x104016000
loads: 0 1

add load: 6 threadA-1 1
In pre_read action: threadA-1
fetch expect value: 0x7fe7d3d2ede8 0
hhhhh1

Read expect value: threadA-1 0x7fe7d3d2ede8 0 0 0
End: 0x103f93000 threadA-1
checker_addUses: 7 1 4

update load: 7 0
4 0 

In add action: main-5
checker_addUses: 8 1 3

update load: 8 0
3 0 

checker_addUses: 9 1 8
End add action! main-5

update load: 9 0
8 0 

checker_addUses: 10 1 9

update load: 10 0
9 0 

In add action: threadB-1
In atomic checker_preLoad: 0x7fe7d3d2ede4 7 10!
checker_addUses: 120 1 115
In read action: 0x103f93000
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-1

update load: 120 0
115 0 

loads: 0 1

add load: 48 threadB-1 1
In add action: main-6
In pre_read action: threadB-1
End add action! main-6
fetch expect value: 0x7fe7d3d2ede8 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3d2ede8 0 0 0
End: 0x104016000 threadB-1
checker_addUses: 49 1 46

update load: 49 0
46 0 

checker_addUses: 50 1 45
In add action: threadA-2

update load: 50 0
45 0 

checker_addUses: 51 1 50
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 

update load: 51 0
50 0 

checker_addUses: 52 1 51
End add action! threadA-2
loads: 0 2

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3d2ede4 7 52!
In read action: 0x104016000

add load: 10 threadA-2 1
In add action: threadB-2
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3d2ede4 0
hhhhh1

Read expect value: threadB-2 0x7fe7d3d2ede4 0 0 0
End: 0x104016000 threadB-2
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 54 0
45 0 

checker_addUses: 55 1 54

update load: 55 0
54 0 

checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 
nwait: 0, 2, 0
waiting read: 0x103f93000checker_addUses: 57 1 50
 threadA-2
in update priority: 0x103f93000

update load: 57 0
50 0 

checker_addUses: 58 1 57

update load: 58 0
57 0 

In rmw_add: 0x7fe7d3d2ede4 1 7
In add action: threadB-3
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3f03c70 3 1 0
hhhhh1

expect value rmw_add: threadB 3 0 !1!

update buffer: 0x7fe7d3d18070 0x7fe7d3d2ede4 1
update buffer: 0x7fe7d3f18460 0x7fe7d3d2ede4 1
update buffer: 0x7fe7d3d31ce0 0x7fe7d3d2ede4 1
checker_addUses: 59 1 50

update load: 59 0
50 0 

checker_addUses: 60 1 54

update load: 60 0
54 0 

checker_addUses: 61 1 60

update load: 61 0
60 0 

waiting read: 0x103f93000 checker_addUses: 62 2 58
threadA-2
in update priority: 0x103f93000
In pre_read action: threadA-2

update load: 62 1
58 61 0 
threadB-3 
checker_addUses: 63 1 62
fetch expect value: 0x7fe7d3d2ede4 1
hhhhh1

update load: 63 1
62 0 
threadB-3 

Read expect value: threadA-2 0x7fe7d3d2ede4 1 1 1
End: 0x103f93000 threadA-2
checker_addUses: 72 1 46
checker_addUses: 11 1 8

update load: 72 0
46 0 64 76 

checker_addUses: 73 1 72

update load: 11 0
8 0 


update load: 73 0
72 0 64 76 

In atomic checker_preLoad: 0x7fe7d3d2ede8 7 73!
In read action: 0x104016000
checker_addUses: 12 1 3
In add action: threadB-4

update load: 12 0
3 0 

Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
checker_addUses: 13 1 12
End add action! threadB-4
loads: 0 4

update load: 13 0
12 0 


add load: 73 threadB-4 1
checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-1 threadA-2 
nwait: 1, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3d2ede4 1 7
In add action: threadA-3
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadA-3

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d17ed0 3 1 0
get value: 0x7fe7d3d18070 0x7fe7d3d2ede4 1

expect value rmw_add: threadA 3 1 !1!

update buffer: 0x7fe7d3d18070 0x7fe7d3d2ede4 2
update buffer: 0x7fe7d3f18460 0x7fe7d3d2ede4 2
update buffer: 0x7fe7d3d31ce0 0x7fe7d3d2ede4 2
waiting read: 0x104016000 checker_addUses: 17 1 8
threadB-4
in update priority: 0x104016000

update load: 17 0
8 0 

checker_addUses: 18 1 12

update load: 18 0
12 0 

checker_addUses: 19 1 18

update load: 19 0
18 0 

checker_addUses: 20 2 16

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 21 1 20

update load: 21 1
20 0 
threadA-3 
checker_addUses: 23 1 8

update load: 23 1
8 0 21 
threadA-3 
checker_addUses: 24 1 23

update load: 24 1
23 0 21 
threadA-3 
In atomic checker_preStore: 0x7fe7d3d2ede4 0 7!
In write: 0x103f93000
In add action: threadA-4
End add action! threadA-4
action: threadA-4
loads: 1 4
set Reachability map 111: 0x7fe7d3d17ed0 4 1 1
update buffer: 0x7fe7d3d18070 0x7fe7d3d2ede4 0
update buffer: 0x7fe7d3f18460 0x7fe7d3d2ede4 0
update buffer: 0x7fe7d3d31ce0 0x7fe7d3d2ede4 0

Write value1: threadA-4 0x7fe7d3d2ede4 0!
waiting read: 0x104016000 checker_addUses: 25 1 8
threadB-4
in update priority: 0x104016000

update load: 25 1
8 0 21 
threadA-3 
checker_addUses: 26 1 4

update load: 26 1
4 0 21 
threadA-3 
checker_addUses: 27 1 26

update load: 27 1
26 0 21 
threadA-3 
In rmw_add: 0x7fe7d3d2ede8 1 7
In add action: threadA-5
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadA-5

add load: 27 threadA-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3d17ed0 5 2 2
get value: 0x7fe7d3d17c90 0x7fe7d3d2ede8 0

expect value rmw_add: threadA 5 0 !1!

update buffer: 0x7fe7d3d17c90 0x7fe7d3d2ede8 1
update buffer: 0x7fe7d3f19920 0x7fe7d3d2ede8 1
update buffer: 0x7fe7d3d273a0 0x7fe7d3d2ede8 1
checker_addUses: 28 1 4

update load: 28 1
4 0 21 
threadA-3 
In checker_thread_end
Thread_end_action: 0x103f93000
erase enabledThreads: waiting read: 0x104016000threadA-6 
threadB-4
in update priority: 0x104016000
In add action: threadA-6
End add action! threadA-6
In pre_read action: checker_addUses: 303 1 292
threadB-4
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
get value: 0x7fe7d3f19920 0x7fe7d3d2ede8 1
BeginFunc: 0x7fe7d3d24d70

Read expect value: threadB-4 0x7fe7d3d2ede8 1 1 1
End: 0x104016000 threadB-4
checker_addUses: 74 1 46

update load: 74 0
46 0 64 76 

checker_addUses: 75 2 73

update load: 75 2
73 48 0 64 76 
threadB-4 threadB-1 
checker_addUses: 76 1 75

update load: 76 2
75 0 64 76 
threadB-4 threadB-1 
checker_addUses: 85 1 84

update load: 85 1
84 0 63 
threadB-3 
var = 1
In checker_thread_end
Thread_end_action: 0x104016000
erase enabledThreads: threadB-5
In add action: threadB-5
End add action! threadB-5
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3d24d70
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 1
threadA-3 1
threadA-4 0
threadA-5 0
threadB-1 0
threadB-2 0
threadB-3 0
threadB-4 1
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3d171c0
vec1: 1 2
vec1: 1 4
vec1: 0 4
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add read: threadA-5
vec2: threadA 1 3
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add read: threadB-4
vec2: threadB 1 6
vec2: main 0 6
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-5
vec2: threadA 0 4
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-4
vec2: threadB 0 8
vec2: main 0 8
add value: threadA-3 0
add value: threadA-3 1
add value: threadA-3 0
add value: threadB-3 2
add value: threadB-3 0
add value: threadB-3 0
fMap: threadA 3 0
fMap: threadB 3 0
fMap: threadA 1 0
fMap: threadA 2 1
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 0
prefix & reads: 4 2
enforce1: 0x7fe7d3d18250 threadA-1 0 
enforce1: 0x7fe7d3d183b0 threadA-2 1 
enforce1: 0x7fe7d3d18bd0 threadB-1 0 
enforce1: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d30980 threadA-3 0 
enforce2: 0x7fe7d3d30980 threadA-3 0 
enforce0: 0x7fe7d3d18450 threadB-3 0 
enforce2: 0x7fe7d3d18450 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1f7f0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1f7f0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1f930
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3c1f930 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1f9a0
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3c1f9a0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b4f0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c1b4f0 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1bc70
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1bc70 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b3b0
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3c1b3b0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b5b0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c1b5b0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 1 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b030
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c1b030 main-1 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 896 column 10: model is not available") 0
[Solver] (error "line 896 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 6
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
test2
ccc7
fMap: threadA 3 0
fMap: threadB 3 2
fMap: threadA 1 0
fMap: threadA 2 1
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 0
1: threadB-3 : 2
prefix & reads: 4 2
enforce1: 0x7fe7d3d18250 threadA-1 0 
enforce1: 0x7fe7d3d183b0 threadA-2 1 
enforce1: 0x7fe7d3d18bd0 threadB-1 0 
enforce1: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d30980 threadA-3 0 
enforce2: 0x7fe7d3d30980 threadA-3 0 
enforce0: 0x7fe7d3d18450 threadB-3 2 
enforce2: 0x7fe7d3d18450 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e24720
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e24720 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
fMap: threadA 3 1
fMap: threadB 3 2
fMap: threadA 1 0
fMap: threadA 2 1
fMap: threadB 1 0
fMap: threadB 2 0
checking: read:val
0: threadA-3 : 1
1: threadB-3 : 2
prefix & reads: 4 2
enforce1: 0x7fe7d3d18250 threadA-1 0 
enforce1: 0x7fe7d3d183b0 threadA-2 1 
enforce1: 0x7fe7d3d18bd0 threadB-1 0 
enforce1: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d30980 threadA-3 1 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d18450 threadB-3 2 
enforce2: 0x7fe7d3d18450 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e22530
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e22530 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
add value: threadA-5 0
add value: threadB-4 1
add value: threadB-4 0
fMap: threadA 5 0
fMap: threadB 4 0
fMap: threadA 1 0
fMap: threadA 2 1
fMap: threadB 3 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadA 3 1
checking: read:val
0: threadA-5 : 0
1: threadB-4 : 0
prefix & reads: 6 2
enforce1: 0x7fe7d3d18250 threadA-1 0 
enforce1: 0x7fe7d3d183b0 threadA-2 1 
enforce1: 0x7fe7d3d18450 threadB-3 0 
enforce1: 0x7fe7d3d18bd0 threadB-1 0 
enforce1: 0x7fe7d3d18c70 threadB-2 0 
enforce1: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d2f270 threadA-5 0 
enforce2: 0x7fe7d3d2f270 threadA-5 0 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d185e0 threadB-4 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1fd80
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f1fd80 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b7c0
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3c1b7c0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e22e60
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e22e60 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e230c0
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3e230c0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e234c0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e234c0 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-4 0
In addRWRelation: 

xxxx read: threadB-4 1 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e22c40
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e22c40 main-2 threadB-4
xxx: threadB-4 (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
ttt: (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e22cf0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e22cf0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e23700
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e23700 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e22b50
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3e22b50 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e23ba0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e23ba0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-5 0
In addRWRelation: 

xxxx read: threadA-5 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e238c0
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e238c0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e23640
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e23640 main-2 threadA-5
xxx: threadA-5 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
Add RW: threadA-3 1
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e23c10
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e23c10 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))))) (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1))))) (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))):named RW))

Adding SW Constraints: 13
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


sat 0
[Solver] Model Satisfiability: sat


(model  0


  (define-fun B_threadB-1_main-3 () Int 0


    115) 1


  (define-fun B_main-1_main-3 () Int 0


    1) 1


  (define-fun B_threadB-2_main-4 () Int 0


    123) 1


  (define-fun B_main-1_threadA-3 () Int 0


    1) 1


  (define-fun B_main-1_main-2 () Int 0


    1) 1


  (define-fun B_main-7_threadB-1 () Int 0


    119) 1


  (define-fun B_threadB-1_threadA-6 () Int 0


    46) 1


  (define-fun B_main-4_threadA-4 () Int 0


    86) 1


  (define-fun B_threadB-3_main-4 () Int 0


    130) 1


  (define-fun CORW () Bool 0


    true) 0


  (define-fun B_threadA-0_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadA-4 () Int 0


    87) 1


  (define-fun B_threadA-5_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-1 () Int 0


    91) 1


  (define-fun B_threadA-4_main-2 () Int 0


    84) 1


  (define-fun MOConsistent () Bool 0


    true) 0


  (define-fun B_threadA-4_threadB-2 () Int 0


    35) 1


  (define-fun B_main-5_threadB-5 () Int 0


    146) 1


  (define-fun B_main-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-3 () Int 0


    20) 1


  (define-fun B_threadB-1_main-4 () Int 0


    116) 1


  (define-fun B_threadA-2_main-3 () Int 0


    69) 1


  (define-fun B_main-0_main-7 () Int 0


    1) 1


  (define-fun B_threadB-3_main-2 () Int 0


    128) 1


  (define-fun S_threadA-1 () Int 0


    5) 0


  (define-fun S_threadB-2 () Int 0


    3) 0


  (define-fun B_main-7_threadA-3 () Int 0


    81) 1


  (define-fun SCConsistent () Bool 0


    true) 0


  (define-fun B_main-6_threadB-4 () Int 0


    139) 1


  (define-fun M_main-2 () Int 0


    0) 0


  (define-fun B_main-5_threadB-1 () Int 0


    117) 1


  (define-fun B_threadB-3_main-7 () Int 0


    1) 1


  (define-fun B_main-7_threadB-4 () Int 0


    140) 1


  (define-fun B_threadB-4_threadB-1 () Int 0


    173) 1


  (define-fun B_threadA-3_threadA-5 () Int 0


    1) 1


  (define-fun Basic1 () Bool 0


    true) 1


  (define-fun B_main-1_threadA-0 () Int 0


    52) 1


  (define-fun B_threadA-4_threadA-2 () Int 0


    167) 1


  (define-fun B_threadA-2_main-0 () Int 0


    66) 1


  (define-fun B_threadA-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-6 () Int 0


    45) 1


  (define-fun B_threadB-2_main-3 () Int 0


    122) 1


  (define-fun B_main-5_threadB-2 () Int 0


    124) 1


  (define-fun B_main-0_main-3 () Int 0


    1) 1


  (define-fun B_main-3_main-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-0 () Int 0


    111) 1


  (define-fun S_threadA-2 () Int 0


    6) 0


  (define-fun B_main-4_threadA-3 () Int 0


    78) 1


  (define-fun B_main-4_threadB-5 () Int 0


    1) 1


  (define-fun RW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-3 () Int 0


    1) 1


  (define-fun B_main-2_threadA-1 () Int 0


    1) 1


  (define-fun B_main-6_threadB-1 () Int 0


    118) 1


  (define-fun B_main-0_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-3 () Int 0


    179) 1


  (define-fun B_threadA-5_threadB-3 () Int 0


    42) 1


  (define-fun B_main-7_threadB-5 () Int 0


    148) 1


  (define-fun B_threadA-3_main-0 () Int 0


    74) 1


  (define-fun RF_threadA-1_threadA-5 () Int 0


    0) 0


  (define-fun B_main-1_threadA-4 () Int 0


    1) 1


  (define-fun RF_threadA-3_main-1 () Int 0


    0) 0


  (define-fun B_main-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-2 () Int 0


    121) 1


  (define-fun RF_threadA-2_main-1 () Int 0


    0) 0


  (define-fun B_threadA-1_main-0 () Int 0


    59) 1


  (define-fun B_threadA-3_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-2 () Int 0


    1) 1


  (define-fun B_main-0_threadA-0 () Int 0


    51) 1


  (define-fun B_main-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-5_threadB-1 () Int 0


    40) 1


  (define-fun B_threadB-1_main-7 () Int 0


    1) 1


  (define-fun M_threadA-3 () Int 0


    2) 0


  (define-fun S_threadA-3 () Int 0


    7) 0


  (define-fun B_main-2_main-3 () Int 0


    1) 1


  (define-fun B_threadA-3_main-3 () Int 0


    77) 1


  (define-fun B_main-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-5_main-3 () Int 0


    92) 1


  (define-fun CORR () Bool 0


    true) 0


  (define-fun B_threadB-4_main-4 () Int 0


    137) 1


  (define-fun B_threadA-3_main-7 () Int 0


    1) 1


  (define-fun B_main-0_threadB-5 () Int 0


    1) 1


  (define-fun B_main-3_main-4 () Int 0


    1) 1


  (define-fun RF_threadB-2_main-1 () Int 0


    1) 0


  (define-fun ASW () Bool 0


    true) 0


  (define-fun B_threadB-0_threadA-1 () Int 0


    17) 1


  (define-fun B_main-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-2_main-0 () Int 0


    120) 1


  (define-fun B_threadB-5_main-1 () Int 0


    142) 1


  (define-fun S_threadA-4 () Int 0


    8) 0


  (define-fun B_threadA-5_main-0 () Int 0


    90) 1


  (define-fun B_threadA-3_threadA-2 () Int 0


    169) 1


  (define-fun B_threadB-5_threadA-0 () Int 0


    16) 1


  (define-fun B_main-7_threadB-0 () Int 0


    112) 1


  (define-fun B_main-4_threadB-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-0 () Int 0


    58) 1


  (define-fun B_main-3_threadA-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-4 () Int 0


    138) 1


  (define-fun B_threadA-2_threadB-3 () Int 0


    0) 1


  (define-fun B_threadA-1_main-6 () Int 0


    1) 1


  (define-fun B_main-2_main-4 () Int 0


    1) 1


  (define-fun B_threadA-5_threadB-4 () Int 0


    43) 1


  (define-fun B_main-6_threadA-0 () Int 0


    57) 1


  (define-fun B_main-4_threadA-2 () Int 0


    70) 1


  (define-fun B_threadB-4_threadA-1 () Int 0


    21) 1


  (define-fun B_threadB-4_main-1 () Int 0


    135) 1


  (define-fun B_threadB-3_main-1 () Int 0


    0) 1


  (define-fun B_threadB-3_threadB-1 () Int 0


    171) 1


  (define-fun B_main-3_threadB-5 () Int 0


    1) 1


  (define-fun B_main-6_threadA-3 () Int 0


    80) 1


  (define-fun B_threadA-5_threadA-2 () Int 0


    168) 1


  (define-fun B_threadB-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-3 () Int 0


    32) 1


  (define-fun B_threadA-5_threadA-4 () Int 0


    177) 1


  (define-fun B_threadA-4_threadA-3 () Int 0


    178) 1


  (define-fun MO0 () Bool 0


    true) 0


  (define-fun B_threadA-2_main-1 () Int 0


    67) 1


  (define-fun B_main-4_threadB-0 () Int 0


    109) 1


  (define-fun B_threadB-4_main-7 () Int 0


    1) 1


  (define-fun B_main-2_threadA-5 () Int 0


    1) 1


  (define-fun RF_threadB-1_main-2 () Int 0


    1) 0


  (define-fun B_threadB-1_threadA-3 () Int 0


    1) 1


  (define-fun RF_threadA-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-3_main-7 () Int 0


    1) 1


  (define-fun B_main-1_main-4 () Int 0


    1) 1


  (define-fun B_main-2_main-6 () Int 0


    1) 1


  (define-fun B_threadB-4_threadA-3 () Int 0


    31) 1


  (define-fun B_threadB-2_threadB-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-4 () Int 0


    89) 1


  (define-fun B_threadA-5_main-2 () Int 0


    0) 1


  (define-fun B_threadB-3_threadB-2 () Int 0


    172) 1


  (define-fun B_main-2_threadA-2 () Int 0


    1) 1


  (define-fun B_main-7_threadA-2 () Int 0


    73) 1


  (define-fun RF_threadB-3_main-1 () Int 0


    1) 0


  (define-fun B_main-2_threadB-0 () Int 0


    107) 1


  (define-fun RF_threadB-2_threadA-4 () Int 0


    0) 0


  (define-fun B_main-2_threadB-2 () Int 0


    1) 1


  (define-fun B_main-6_threadA-1 () Int 0


    64) 1


  (define-fun RF_threadB-3_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-5_threadA-5 () Int 0


    182) 1


  (define-fun COWR () Bool 0


    true) 0


  (define-fun B_main-3_threadA-3 () Int 0


    1) 1


  (define-fun RF_threadA-5_threadA-5 () Int 0


    0) 0


  (define-fun B_threadB-2_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadB-4_threadA-5 () Int 0


    0) 0


  (define-fun B_threadB-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-1_main-3 () Int 0


    61) 1


  (define-fun B_threadB-4_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_main-7 () Int 0


    1) 1


  (define-fun B_main-2_main-5 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_main-5 () Int 0


    1) 1


  (define-fun B_threadA-2_threadB-1 () Int 0


    24) 1


  (define-fun B_threadB-5_threadA-2 () Int 0


    27) 1


  (define-fun B_main-1_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_main-2 () Int 0


    0) 1


  (define-fun B_main-4_threadB-2 () Int 0


    1) 1


  (define-fun B_main-3_threadB-3 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadA-4 () Int 0


    0) 0


  (define-fun RF_threadB-2_threadB-3 () Int 0


    0) 0


  (define-fun B_threadA-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-0 () Int 0


    12) 1


  (define-fun B_threadB-5_main-4 () Int 0


    145) 1


  (define-fun B_main-5_threadA-0 () Int 0


    56) 1


  (define-fun B_main-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-1 () Int 0


    165) 1


  (define-fun B_main-3_threadA-2 () Int 0


    1) 1


  (define-fun B_threadA-1_main-7 () Int 0


    1) 1


  (define-fun B_threadA-5_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-2 () Int 0


    1) 1


  (define-fun S_main-2 () Int 0


    1) 0


  (define-fun B_main-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-7_threadA-6 () Int 0


    104) 1


  (define-fun B_main-4_threadA-0 () Int 0


    55) 1


  (define-fun B_threadB-2_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-5 () Int 0


    44) 1


  (define-fun B_threadB-4_threadA-0 () Int 0


    15) 1


  (define-fun B_threadB-3_threadA-3 () Int 0


    1) 1


  (define-fun Basic0 () Bool 0


    true) 1


  (define-fun B_threadB-2_threadA-6 () Int 0


    47) 1


  (define-fun B_main-5_threadA-6 () Int 0


    102) 1


  (define-fun B_threadB-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-6 () Int 0


    1) 1


  (define-fun B_main-5_threadB-0 () Int 0


    110) 1


  (define-fun B_main-2_threadA-0 () Int 0


    53) 1


  (define-fun B_main-2_threadB-3 () Int 0


    1) 1


  (define-fun COWW () Bool 0


    true) 0


  (define-fun B_threadA-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-6_main-2 () Int 0


    99) 1


  (define-fun B_threadA-4_threadB-1 () Int 0


    34) 1


  (define-fun B_threadB-5_threadA-6 () Int 0


    50) 1


  (define-fun B_main-1_threadB-1 () Int 0


    1) 1


  (define-fun B_main-4_threadB-3 () Int 0


    1) 1


  (define-fun B_main-0_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_main-3 () Int 0


    85) 1


  (define-fun B_threadA-1_threadA-2 () Int 0


    1) 1


  (define-fun B_threadB-3_threadB-5 () Int 0


    1) 1


  (define-fun B_threadB-3_threadA-0 () Int 0


    14) 1


  (define-fun B_main-6_threadA-4 () Int 0


    88) 1


  (define-fun B_threadB-4_threadA-4 () Int 0


    37) 1


  (define-fun B_threadB-0_threadA-3 () Int 0


    28) 1


  (define-fun B_main-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-0 () Int 0


    97) 1


  (define-fun B_threadA-6_main-1 () Int 0


    98) 1


  (define-fun B_threadA-1_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-6_main-3 () Int 0


    100) 1


  (define-fun B_threadB-5_main-3 () Int 0


    144) 1


  (define-fun RF_threadA-1_main-2 () Int 0


    1) 0


  (define-fun RF_threadB-4_main-2 () Int 0


    1) 0


  (define-fun B_threadA-5_threadA-1 () Int 0


    163) 1


  (define-fun B_main-0_threadA-6 () Int 0


    1) 1


  (define-fun B_main-2_main-1 () Int 0


    176) 1


  (define-fun B_main-1_threadB-0 () Int 0


    106) 1


  (define-fun B_threadA-0_threadA-1 () Int 0


    1) 1


  (define-fun B_main-0_main-4 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-5 () Int 0


    1) 1


  (define-fun B_main-5_main-7 () Int 0


    1) 1


  (define-fun B_threadB-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-0_main-5 () Int 0


    1) 1


  (define-fun RF_threadB-3_threadA-4 () Int 0


    0) 0


  (define-fun B_main-2_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-4_main-3 () Int 0


    136) 1


  (define-fun B_main-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-1_threadA-2 () Int 0


    1) 1


  (define-fun B_main-5_threadA-5 () Int 0


    94) 1


  (define-fun B_main-3_threadB-0 () Int 0


    108) 1


  (define-fun B_threadA-2_threadA-4 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-1 () Int 0


    18) 1


  (define-fun B_main-3_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadB-5 () Int 0


    1) 1


  (define-fun B_main-5_threadA-1 () Int 0


    63) 1


  (define-fun B_main-6_threadA-5 () Int 0


    95) 1


  (define-fun S_threadB-4 () Int 0


    9) 0


  (define-fun B_main-2_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-0 () Int 0


    11) 1


  (define-fun B_main-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-6_threadA-6 () Int 0


    103) 1


  (define-fun B_threadB-1_main-1 () Int 0


    114) 1


  (define-fun B_main-7_threadB-3 () Int 0


    133) 1


  (define-fun B_threadA-3_threadB-2 () Int 0


    30) 1


  (define-fun S_threadA-5 () Int 0


    10) 0


  (define-fun B_main-4_threadA-6 () Int 0


    101) 1


  (define-fun B_main-7_threadA-1 () Int 0


    65) 1


  (define-fun B_main-0_main-2 () Int 0


    1) 1


  (define-fun B_main-3_threadA-0 () Int 0


    54) 1


  (define-fun B_main-5_threadA-2 () Int 0


    71) 1


  (define-fun B_threadA-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_main-1 () Int 0


    0) 1


  (define-fun B_threadB-2_threadB-3 () Int 0


    1) 1


  (define-fun B_threadA-0_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_main-2 () Int 0


    76) 1


  (define-fun B_main-4_threadA-1 () Int 0


    62) 1


  (define-fun B_main-6_threadA-2 () Int 0


    72) 1


  (define-fun B_main-1_threadA-6 () Int 0


    1) 1


  (define-fun B_main-4_threadA-5 () Int 0


    93) 1


  (define-fun B_threadB-2_threadB-1 () Int 0


    175) 1


  (define-fun B_threadA-4_threadB-4 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-5 () Int 0


    1) 1


  (define-fun B_main-6_threadB-3 () Int 0


    132) 1


  (define-fun B_threadB-4_main-0 () Int 0


    134) 1


  (define-fun B_threadB-3_threadB-3 () Int 0


    181) 1


  (define-fun B_threadB-2_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-6 () Int 0


    1) 1


  (define-fun B_threadA-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-4_main-2 () Int 0


    0) 1


  (define-fun M_threadA-5 () Int 0


    1) 0


  (define-fun S_threadB-3 () Int 0


    4) 0


  (define-fun B_threadA-1_threadA-3 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-0 () Int 0


    13) 1


  (define-fun B_threadB-4_threadA-2 () Int 0


    26) 1


  (define-fun B_threadB-5_main-0 () Int 0


    141) 1


  (define-fun RF_threadA-3_threadB-3 () Int 0


    1) 0


  (define-fun B_main-1_main-5 () Int 0


    1) 1


  (define-fun B_main-7_threadA-5 () Int 0


    96) 1


  (define-fun B_threadB-1_main-2 () Int 0


    0) 1


  (define-fun B_threadA-5_threadB-2 () Int 0


    41) 1


  (define-fun B_threadA-2_threadA-1 () Int 0


    154) 1


  (define-fun B_threadB-1_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-4_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadA-6 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadA-1 () Int 0


    1) 1


  (define-fun RF_threadA-5_main-2 () Int 0


    1) 0


  (define-fun B_threadA-3_threadA-3 () Int 0


    180) 1


  (define-fun B_main-6_threadB-2 () Int 0


    125) 1


  (define-fun B_threadB-4_threadB-3 () Int 0


    170) 1


  (define-fun B_threadA-3_main-1 () Int 0


    75) 1


  (define-fun B_main-5_threadA-3 () Int 0


    79) 1


  (define-fun B_threadA-4_main-6 () Int 0


    1) 1


  (define-fun B_main-0_threadA-1 () Int 0


    1) 1


  (define-fun B_threadA-1_threadB-2 () Int 0


    19) 1


  (define-fun M_threadA-4 () Int 0


    3) 0


  (define-fun S_threadB-1 () Int 0


    2) 0


  (define-fun B_threadB-4_threadA-5 () Int 0


    1) 1


  (define-fun B_threadA-1_main-1 () Int 0


    60) 1


  (define-fun B_threadB-0_threadA-4 () Int 0


    33) 1


  (define-fun B_main-4_main-6 () Int 0


    1) 1


  (define-fun B_threadA-3_threadB-3 () Int 0


    0) 1


  (define-fun B_main-0_threadB-0 () Int 0


    105) 1


  (define-fun B_main-2_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-2_threadA-4 () Int 0


    1) 1


  (define-fun B_main-2_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-1_threadA-6 () Int 0


    1) 1


  (define-fun CORF () Bool 0


    true) 0


  (define-fun RF_threadB-2_threadA-3 () Int 0


    0) 0


  (define-fun B_threadA-5_main-7 () Int 0


    1) 1


  (define-fun B_threadA-3_threadB-1 () Int 0


    29) 1


  (define-fun B_threadB-5_main-7 () Int 0


    1) 1


  (define-fun M_main-1 () Int 0


    0) 0


  (define-fun B_threadA-2_threadB-2 () Int 0


    25) 1


  (define-fun B_threadA-2_main-7 () Int 0


    1) 1


  (define-fun B_threadA-4_main-1 () Int 0


    83) 1


  (define-fun RF_threadA-3_threadA-4 () Int 0


    0) 0


  (define-fun B_main-5_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_main-0 () Int 0


    82) 1


  (define-fun B_main-7_threadB-2 () Int 0


    126) 1


  (define-fun B_threadB-3_threadA-4 () Int 0


    1) 1


  (define-fun B_main-5_threadB-3 () Int 0


    131) 1


  (define-fun B_threadA-4_threadA-5 () Int 0


    1) 1


  (define-fun B_main-0_threadB-1 () Int 0


    1) 1


  (define-fun RF_threadB-1_threadA-5 () Int 0


    0) 0


  (define-fun S_main-1 () Int 0


    0) 0


  (define-fun B_main-1_main-6 () Int 0


    1) 1


  (define-fun B_threadA-4_threadA-6 () Int 0


    1) 1


  (define-fun MO1 () Bool 0


    true) 0


  (define-fun B_threadB-0_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-2 () Int 0


    1) 1


  (define-fun B_threadA-4_threadB-3 () Int 0


    36) 1


  (define-fun B_main-0_threadA-3 () Int 0


    1) 1


  (define-fun B_main-3_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-5 () Int 0


    39) 1


  (define-fun B_threadA-0_threadA-3 () Int 0


    1) 1


  (define-fun B_threadA-2_main-6 () Int 0


    1) 1


  (define-fun RF_threadA-2_threadB-3 () Int 0


    1) 0


  (define-fun RF_threadB-3_threadA-3 () Int 0


    0) 0


  (define-fun B_main-0_main-6 () Int 0


    1) 1


  (define-fun B_threadA-0_threadA-4 () Int 0


    1) 1


  (define-fun B_threadB-0_threadA-2 () Int 0


    23) 1


  (define-fun B_main-0_threadA-5 () Int 0


    1) 1


  (define-fun B_threadB-1_main-0 () Int 0


    113) 1


  (define-fun B_threadB-5_threadA-1 () Int 0


    22) 1


  (define-fun B_main-4_main-7 () Int 0


    1) 1


  (define-fun B_threadB-0_threadB-5 () Int 0


    1) 1


  (define-fun B_threadA-2_main-2 () Int 0


    68) 1


  (define-fun B_threadB-4_threadA-6 () Int 0


    49) 1


  (define-fun B_main-0_threadA-2 () Int 0


    1) 1


  (define-fun M_threadB-3 () Int 0


    1) 0


  (define-fun B_main-4_threadB-1 () Int 0


    1) 1


  (define-fun B_threadB-5_main-2 () Int 0


    143) 1


  (define-fun B_threadB-3_threadA-1 () Int 0


    1) 1


  (define-fun B_main-3_threadB-4 () Int 0


    1) 1


  (define-fun B_threadB-4_threadB-2 () Int 0


    174) 1


  (define-fun B_threadB-3_threadA-6 () Int 0


    48) 1


  (define-fun B_threadA-4_threadA-1 () Int 0


    161) 1


  (define-fun B_main-6_main-7 () Int 0


    1) 1


  (define-fun B_threadB-1_threadB-3 () Int 0


    1) 1


  (define-fun B_main-0_main-1 () Int 0


    1) 1


  (define-fun B_threadB-5_threadA-4 () Int 0


    38) 1


  (define-fun B_main-3_threadB-2 () Int 0


    1) 1


  (define-fun B_threadB-3_main-0 () Int 0


    127) 1


  (define-fun B_threadB-3_main-3 () Int 0


    129) 1


  (define-fun B_main-6_threadB-5 () Int 0


    147) 1


  (define-fun B_main-3_main-6 () Int 0


    1) 1


) 0


(error "line 1800 column 15: unsat core is not available") 0
[Solver] Solution found in 0s:

end checksat!
ccc6
dd1: threadA-1
dd1: threadA-2
dd1: threadB-3
dd1: threadB-4
dd1: threadB-1
dd1: threadB-2
dd1: threadA-5
dd1: threadA-3
Generate new schedule: 0x7fe7d3d33fc0
222: 2
schPrefix: threadA 5
schPrefix: threadB 4
curPrefix: threadA 2
curPrefix: threadB 2
prefixMap: 2 2
write: main-2
RF: threadA 1 0
write: threadB-3
RF: threadA 2 1
write: threadB-3
RF: threadA 3 1
write: main-2
RF: threadA 5 0
write: main-2
RF: threadB 1 0
write: main-1
RF: threadB 2 0
write: main-1
RF: threadB 3 0
write: main-2
RF: threadB 4 0
ccc7
Checking previous unsat schedules: 25
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d18bd0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3a200
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d3a200 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3aaf0
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3d3aaf0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-1 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3ae80
111: 10
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-5
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3d3ae80 threadA-5 threadB-1
xxx: threadB-1 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2700 column 10: model is not available") 0
[Solver] (error "line 2700 column 10: model is not available")


(SCConsistent RW MOConsistent CORF CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d18250 threadA-1 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d18250 threadA-1 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e24fc0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e24fc0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e25030
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e25030 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e250e0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e250e0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e17a50
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e17a50 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e17ac0
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3e17ac0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f14720
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f14720 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f149d0
111: 8
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3f149d0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 3602 column 10: model is not available") 0
[Solver] (error "line 3602 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 2 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e16440
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e16440 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 2 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d322a0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d322a0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 2 
enforce0: 0x7fe7d3d30980 threadA-3 1 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d18450 threadB-3 2 
enforce2: 0x7fe7d3d18450 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c1b620
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c1b620 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 8
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadA-5 : 0
4: threadB-1 : 0
5: threadB-2 : 0
6: threadB-3 : 0
7: threadB-4 : 1
prefix & reads: 0 8
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 2 
enforce0: 0x7fe7d3d30980 threadA-3 1 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d2f270 threadA-5 0 
enforce2: 0x7fe7d3d2f270 threadA-5 0 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d18450 threadB-3 0 
enforce2: 0x7fe7d3d18450 threadB-3 0 
enforce0: 0x7fe7d3d185e0 threadB-4 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1cba0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3f1cba0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 9
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 8
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 1 
enforce0: 0x7fe7d3d30980 threadA-3 0 
enforce2: 0x7fe7d3d30980 threadA-3 0 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d18450 threadB-3 0 
enforce2: 0x7fe7d3d18450 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c26970
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c26970 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c26a40
111: 9
xx: main-3
xx: main-4
xx: threadB-3
xx: threadB-1
xx: threadB-2
xx: main-0
xx: main-2
xx: main-1
xx: threadB-0
222
Add swRelation: 0x7fe7d3c26a40 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c26ab0
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3c26ab0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f03c70
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c27090
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c27090 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c27330
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3c27330 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c273a0
111: 9
xx: main-3
xx: threadA-0
xx: threadA-1
xx: threadA-2
xx: main-0
xx: main-2
xx: threadA-4
xx: threadA-3
xx: main-1
222
Add swRelation: 0x7fe7d3c273a0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c26df0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c26df0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 1 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d17ed0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c27700
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3c27700 main-1 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-5
msss!
mhb1: 0x7fe7d3f03c70
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d17ed0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 4504 column 10: model is not available") 0
[Solver] (error "line 4504 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 1 
enforce0: 0x7fe7d3d30980 threadA-3 0 
enforce2: 0x7fe7d3d30980 threadA-3 0 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d18450 threadB-3 2 
enforce2: 0x7fe7d3d18450 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile14_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d265a0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3d265a0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 1
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d18250 threadA-1 0 
enforce0: 0x7fe7d3d183b0 threadA-2 1 
enforce0: 0x7fe7d3d30980 threadA-3 1 
enforce2: 0x7fe7d3d30980 threadA-3 1 
enforce0: 0x7fe7d3d18bd0 threadB-1 0 
enforce0: 0x7fe7d3d18c70 threadB-2 0 
enforce0: 0x7fe7d3d18450 threadB-3 2 
enforce2: 0x7fe7d3d18450 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile15_0x7fe7d3d24d70
Adding sc constraints: 11
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d25060
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d25060
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e23ac0
111: 3
xx: main-0
xx: main-2
xx: main-1
222
Add swRelation: 0x7fe7d3e23ac0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
set new failed sch: 25 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadA 4 1
threadB 1 0
threadB 2 2
threadB 3 1
threadB 5 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In generateModel2 End!
### Solver Time: 2109.85
Solver path: /usr/local/bin/z3
Formula file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile
command: /usr/local/bin/z3 -smt2 -in 
[Solver] Init solver...
[Solver] create Z3 pid 74400
Generate a new Executor: 0x7fe7d3d24d70 0x7fe7d3e11020
Schedule: 0x7fe7d3d33fc0 8
For: main 6
    main 0
    main 1
    main 2
    main 3
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
For: main 7
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 0
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadA 5
    threadA 6
    threadB 0
    threadB 1
    threadB 2
    threadB 3
    threadB 4
    threadB 5
For: threadA 1
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 2
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 3
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadB 1
    threadB 2
    threadB 3
For: threadA 5
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadB 1
    threadB 2
    threadB 3
    threadB 4
For: threadA 6
    main 0
    main 1
    main 2
    main 3
For: threadB 1
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 2
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 3
    main 0
    main 1
    main 2
    main 3
    main 4
For: threadB 4
    main 0
    main 1
    main 2
    main 3
    main 4
    threadA 1
    threadA 2
    threadA 3
    threadA 4
    threadB 3
For: threadB 5
    main 0
    main 1
    main 2
    main 3
    main 4
Read Map: threadA 1 0
Read Map: threadA 2 1
Read Map: threadA 3 1
Read Map: threadA 5 0
Read Map: threadB 1 0
Read Map: threadB 2 0
Read Map: threadB 3 0
Read Map: threadB 4 0

Prefix: threadA 5
Prefix: threadB 4

In checker_thread_begin: 0x7fff7d800300
In add action: main-0
End add action! main-0
BeginFunc: 0x7fe7d3d24d70
checker_addUses: 93 1 92

update load: 93 0
92 0 

checker_addUses: 94 1 93

update load: 94 0
93 0 

checker_addUses: 95 1 92

update load: 95 0
92 0 

checker_addUses: 96 1 95

update load: 96 0
95 0 

checker_addUses: 97 1 96

update load: 97 0
96 0 

checker_addUses: 98 1 97

update load: 98 0
97 0 

In atomic checker_preStore: 0x7fe7d3d2e254 0 7!
In write: 0x7fff7d800300
In add action: main-1
End add action! main-1
action: main-1
loads: 0 1
update buffer: 0x7fe7d3d19260 0x7fe7d3d2e254 0

Write value1: main-1 0x7fe7d3d2e254 0!
checker_addUses: 99 1 96

update load: 99 0
96 0 

checker_addUses: 100 1 92

update load: 100 0
92 0 

checker_addUses: 101 1 100

update load: 101 0
100 0 

checker_addUses: 102 1 101

update load: 102 0
101 0 

checker_addUses: 103 1 102

update load: 103 0
102 0 

In atomic checker_preStore: 0x7fe7d3d2e258 0 7!
In write: 0x7fff7d800300
In add action: main-2
End add action! main-2
action: main-2
loads: 0 2
update buffer: 0x7fe7d3d32490 0x7fe7d3d2e258 0

Write value1: main-2 0x7fe7d3d2e258 0!
checker_addUses: 104 1 101

update load: 104 0
101 0 

checker_addUses: 105 1 92

update load: 105 0
92 0 

checker_addUses: 106 1 88

update load: 106 0
88 0 

checker_addUses: 108 1 88

update load: 108 0
88 0 

BeginFunc: 0x7fe7d3d24d70
BeginFunc: 0x7fe7d3d24d70
checker_addUses: 240 1 239

update load: 240 0
239 0 

checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 253 1 252

update load: 253 0
252 0 

checker_addUses: 294 1 293
checker_addUses: 295 1 292
checker_addUses: 109 1 89

update load: 109 0
89 0 

BeginFunc: 0x7fe7d3d24d70
checker_addUses: 296 1 291
checker_addUses: 297 1 296
checker_addUses: 240 1 239
checker_addUses: 300 1 299

update load: 240 0
239 0 

checker_addUses: 301 1 300

In checker_thread_begin: 0x103f93000
checker_addUses: 243 1 239

update load: 243 0
239 0 

checker_addUses: 245 1 242

update load: 245 0
242 0 

checker_addUses: 246 2 243

update load: 246 0
243 245 0 

checker_addUses: 247 1 242

update load: 247 0
242 0 

checker_addUses: 248 1 247

update load: 248 0
247 0 

checker_addUses: 249 2 244

update load: 249 0
244 248 0 

Waitting for create thread 0x103f93000
checker_addUses: 252 1 251

update load: 252 0
251 0 

checker_addUses: 294 1 293
checker_addUses: 253 1 252
checker_addUses: 295 1 292
checker_addUses: 296 1 291

update load: 253 0
252 0 

checker_addUses: 297 1 296
checker_addUses: 300 1 299
checker_addUses: 112 1 88
checker_addUses: 301 1 300

In checker_thread_begin: 0x104016000

update load: 112 0
88 0 

checker_addUses: 113 1 112

update load: 113 0
112 0 


In checker_thread_create: 0x7fff7d800300 0x103f93000
Waitting for create thread 0x103f93000
In add action: main-3
End add action! main-3
checker_addUses: 115 1 89

update load: 115 0
89 0 

checker_addUses: 116 1 115

update load: 116 0
115 0 


In checker_thread_create: 0x7fff7d800300 0x104016000
Waitting for create thread 0x104016000
In add action: main-4
End add action! main-4
checker_addUses: 118 1 112

update load: 118 0
112 0 

Waitting for create thread 0x103f93000
In add action: main-5
End add action! main-5
checker_addUses: 120 1 115

update load: 120 0
115 0 

In add action: threadA-0
Waitting for create thread 0x104016000
End add action! threadA-0
checker_addUses: 4 1 3

update load: 4 0
3 0 

checker_addUses: 5 1 4

update load: 5 0
4 0 

checker_addUses: 6 1 5

update load: 6 0
5 0 

In atomic checker_preLoad: 0x7fe7d3d2e258 7 6!
In read action: 0x103f93000
In add action: threadA-1
Tset: 2 2 0x103f93000
0x103f93000 0x7fff7d800300 
End add action! threadA-1
loads: 0 1

add load: 6 threadA-1 1
In add action: main-6
End add action! main-6
In add action: threadB-0
End add action! threadB-0
checker_addUses: 46 1 45
waiting read: 0x103f93000 threadA-1
in update priority: 0x103f93000
update load: 46 0
45 0 


checker_addUses: 47 1 46

update load: 47 0
46 0 

checker_addUses: 48 1 47

update load: 48 0
47 0 

In atomic checker_preLoad: 0x7fe7d3d2e258 7 48!
In read action: 0x104016000
In add action: threadB-1
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-1
loads: 0 1

add load: 48 threadB-1 1
In pre_read action: threadB-1
fetch expect value: 0x7fe7d3d2e258 0
hhhhh1

Read expect value: threadB-1 0x7fe7d3d2e258 0 0 0
End: 0x104016000 threadB-1
waiting read: 0x103f93000 threadA-1
in update priority: 0x103f93000
checker_addUses: 49 1 46

update load: 49 0
46 0 

checker_addUses: 50 1 45

update load: 50 0
45 0 

checker_addUses: 51 1 50

update load: 51 0
50 0 

checker_addUses: 52 1 51

update load: 52 0
51 0 

In atomic checker_preLoad: 0x7fe7d3d2e254 7 52!
In read action: 0x104016000
In add action: threadB-2
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-2
loads: 0 2

add load: 52 threadB-2 1
In pre_read action: threadB-2
fetch expect value: 0x7fe7d3d2e254waiting read:  0x103f930000 
hhhhh1
threadA-1
in update priority: 0x103f93000

Read expect value: threadB-2 0x7fe7d3d2e254 0 0 0
End: 0x104016000 threadB-2
checker_addUses: 53 1 50

update load: 53 0
50 0 

checker_addUses: 54 1 45

update load: 54 0
45 0 

checker_addUses: 55 1 54

update load: 55 0
54 0 

checker_addUses: 56 3 52

update load: 56 2
52 55 48 0 
threadB-1 threadB-2 
nwait: 0, 2, 0
checker_addUses: 57 1 50

update load: 57 0
50 0 

checker_addUses: 58 1 57

update load: 58 0
57 0 

In rmw_add: waiting read: 0x7fe7d3d2e2540x103f93000  1threadA-1 
7in update priority: 
0x103f93000
In add action: threadB-3
Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadB-3

add load: 58 threadB-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3f18e40 3 1 0
hhhhh1

expect value rmw_add: threadB 3 0 !1!

update buffer: 0x7fe7d3d3b6b0 0x7fe7d3d2e254 1
update buffer: 0x7fe7d3f19fc0 0x7fe7d3d2e254 1
update buffer: 0x7fe7d3d19260 0x7fe7d3d2e254 1
checker_addUses: 59 1 50

update load: 59 0
50 0 

checker_addUses: 60 1 54
waiting read: 0x103f93000 
update load: 60 0
54 0 

threadA-1checker_addUses: 61 1 60

in update priority: 0x103f93000
In pre_read action: 
update load: 61 0
60 0 

threadA-1
checker_addUses: 62 2 58

update load: 62 1
58 61 0 
threadB-3 
fetch expect value: 0x7fe7d3d2e258 0
checker_addUses: 63 1 62
hhhhh1

update load: 63 1
62 0 
threadB-3 

Read expect value: threadA-1 0x7fe7d3d2e258 0 0 0
End: 0x103f93000 threadA-1
checker_addUses: 7 1 4
checker_addUses: 72 1 46

update load: 7 0
4 0 


update load: 72 0
46 0 64 76 

checker_addUses: 8 1 3
checker_addUses: 73 1 72

update load: 8 0
3 0 

checker_addUses: 9 1 8

update load: 73 0
72 0 64 76 

In atomic checker_preLoad: 0x7fe7d3d2e258 7 73!

update load: 9 0
8 0 

In read action: 0x104016000
checker_addUses: 10 1 9
In add action: threadB-4

update load: 10 0
9 0 

In atomic checker_preLoad: 0x7fe7d3d2e254 Tset: 3 3 0x104016000
0x103f93000 0x104016000 0x7fff7d800300 
7 10!
In read action: 0x103f93000
End add action! threadB-4
loads: 0 4

add load: 73 threadB-4 1
In add action: threadA-2
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadA-2
loads: 0 2

add load: 10 threadA-2 1
In pre_read action: threadA-2
fetch expect value: 0x7fe7d3d2e254 1
hhhhh1

Read expect value: threadA-2 0x7fe7d3d2e254 1 1 1
End: 0x103f93000 threadA-2
checker_addUses: 11 1 8

update load: 11 0
8 0 

waiting read: checker_addUses: 12 1 3
0x104016000 threadB-4
in update priority: 0x104016000

update load: 12 0
3 0 

checker_addUses: 13 1 12

update load: 13 0
12 0 

checker_addUses: 14 3 10

update load: 14 2
10 13 6 0 
threadA-1 threadA-2 
nwait: 1, 2, 0
checker_addUses: 15 1 8

update load: 15 0
8 0 

checker_addUses: 16 1 15

update load: 16 0
15 0 

In rmw_add: 0x7fe7d3d2e254 1 7
In add action: threadA-3
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadA-3
waiting read: 0x104016000 threadB-4
in update priority: 0x104016000

add load: 16 threadA-3 1
loads: 1 3
set Reachability map 111: 0x7fe7d3d348f0 3 1 0
hhhhh1

expect value rmw_add: threadA 3 1 !1!

update buffer: 0x7fe7d3d3b6b0 0x7fe7d3d2e254 2
update buffer: 0x7fe7d3f19fc0 0x7fe7d3d2e254 2
update buffer: 0x7fe7d3d19260 0x7fe7d3d2e254 2
checker_addUses: 17 1 8

update load: 17 0
8 0 

checker_addUses: 18 1 12

update load: 18 0
12 0 

checker_addUses: 19 1 18

update load: 19 0
18 0 

checker_addUses: 20 2 16

update load: 20 1
16 19 0 
threadA-3 
checker_addUses: 21 1 20

update load: 21 1
20 0 
threadA-3 
checker_addUses: 23 1 8

update load: 23 1
8 0 21 
threadA-3 
waiting read: 0x104016000 threadB-4
in update priority: 0x104016000
checker_addUses: 24 1 23

update load: 24 1
23 0 21 
threadA-3 
In atomic checker_preStore: 0x7fe7d3d2e254 0 7!
In write: 0x103f93000
In add action: threadA-4
End add action! threadA-4
action: threadA-4
loads: 1 4
set Reachability map 111: 0x7fe7d3d348f0 4 1 1
update buffer: 0x7fe7d3d3b6b0 0x7fe7d3d2e254 0
update buffer: 0x7fe7d3f19fc0 0x7fe7d3d2e254 0
update buffer: 0x7fe7d3d19260 0x7fe7d3d2e254 0

Write value1: threadA-4 0x7fe7d3d2e254 0!
checker_addUses: 25 1 8

update load: 25 1
8 0 21 
threadA-3 
checker_addUses: 26 1 4
waiting read: 0x104016000 threadB-4
in update priority: 0x104016000

update load: 26 1
4 0 21 
threadA-3 
In pre_read action: threadB-4
checker_addUses: 27 1 26
fetch expect value: 0x7fe7d3d2e258 0
hhhhh1

Read expect value: threadB-4 0x7fe7d3d2e258 0 0 0

update load: 27 1
26 0 21 
threadA-3 
End: 0x104016000 threadB-4
In rmw_add: 0x7fe7d3d2e258 1 7
checker_addUses: 74 1 46
In add action: threadA-5
Tset: 3 3 0x103f93000
0x103f93000 0x104016000 0x7fff7d800300 
End add action! threadA-5

add load: 27 threadA-5 1
loads: 2 5
set Reachability map 111: 0x7fe7d3d348f0 5 2 2
hhhhh1

expect value rmw_add: threadA 5 0 !1!

update buffer: 0x7fe7d3d357d0 0x7fe7d3d2e258 1
update buffer: 0x7fe7d3f1a020 0x7fe7d3d2e258 1
update buffer: 0x7fe7d3d32490 0x7fe7d3d2e258 1
checker_addUses: 28 1 4

update load: 74 0
46 0 64 76 

checker_addUses: 75 2 73

update load: 28 1
4 0 21 
threadA-3 
In checker_thread_end
Thread_end_action: 0x103f93000

update load: 75 2
73 48 0 64 76 
threadB-1 threadB-4 
erase enabledThreads: threadA-6
checker_addUses: 76 1 75
In add action: threadA-6
End add action! threadA-6

update load: 76 2
75 0 64 76 
threadB-1 threadB-4 
checker_addUses: 303 1 292
In thread_yield_action!
checker_addUses: 304 1 292
Begin thread yield!
In thread yield!
checker_addUses: 305 1 303
In add action: threadB-5
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3d24d70
End add action! threadB-5
End thread yield!
checker_addUses: 72 1 46

update load: 72 2
46 0 64 76 
threadB-1 threadB-4 
checker_addUses: 73 1 72

update load: 73 2
72 0 64 76 
threadB-1 threadB-4 
In atomic checker_preLoad: 0x7fe7d3d2e258 7 73!
In read action: 0x104016000
In add action: threadB-6
Tset: 2 2 0x104016000
0x104016000 0x7fff7d800300 
End add action! threadB-6
loads: 2 6
set Reachability map 111: 0x7fe7d3f18e40 6 2 1

add load: 73 threadB-6 1
In pre_read action: threadB-6
get value: 0x7fe7d3f1a020 0x7fe7d3d2e258 1

Read expect value: threadB-6 0x7fe7d3d2e258 1 1 1
End: 0x104016000 threadB-6
checker_addUses: 74 1 46

update load: 74 2
46 0 64 76 
threadB-1 threadB-4 
checker_addUses: 75 2 73

update load: 75 3
73 48 0 64 76 
threadB-1 threadB-4 threadB-6 
checker_addUses: 76 1 75

update load: 76 3
75 0 64 76 
threadB-1 threadB-4 threadB-6 
checker_addUses: 85 1 84

update load: 85 1
84 0 63 
threadB-3 
var = 1
In checker_thread_end
Thread_end_action: 0x104016000
erase enabledThreads: threadB-7
In add action: threadB-7
End add action! threadB-7
checker_addUses: 303 1 292
checker_addUses: 304 1 292
checker_addUses: 305 1 303
checker_addUses: 306 1 305
BeginFunc: 0x7fe7d3d24d70
In checker_thread_end
Thread_end_action: 0x7fff7d800300
erase enabledThreads: main-7
In add action: main-7
End add action! main-7
Current Trace: 3
threadA-1 0
threadA-2 1
threadA-3 1
threadA-4 0
threadA-5 0
threadB-1 0
threadB-2 0
threadB-3 0
threadB-4 0
threadB-6 1
main-1 0
main-2 0
In generateModel2!: 3
curSch: 0x7fe7d3d33fc0
vec1: 0 5
vec1: 1 9
vec1: 0 9
add prefix: threadA-1
add prefix: threadA-2
add prefix: threadA-3
add prefix: threadA-4
add prefix: threadA-5
vec2: threadA 0 5
add prefix: threadB-1
add prefix: threadB-2
add prefix: threadB-3
add prefix: threadB-4
add prefix: threadB-6
vec2: threadB 0 10
vec2: main 0 10
add value: threadB-6 1
add value: threadB-6 0
fMap: threadB 6 0
fMap: threadA 1 0
fMap: threadB 1 0
fMap: threadB 2 0
fMap: threadB 3 0
fMap: threadB 4 0
fMap: threadA 5 0
fMap: threadA 2 1
fMap: threadA 3 1
fMap: threadA 4 0
checking: read:val
0: threadB-6 : 0
prefix & reads: 9 1
enforce1: 0x7fe7d3d34a40 threadA-1 0 
enforce1: 0x7fe7d3d34ae0 threadB-1 0 
enforce1: 0x7fe7d3d34b80 threadB-2 0 
enforce1: 0x7fe7d3d34d50 threadB-3 0 
enforce1: 0x7fe7d3d34ff0 threadB-4 0 
enforce1: 0x7fe7d3e22650 threadA-5 0 
enforce1: 0x7fe7d3e23160 threadA-2 1 
enforce1: 0x7fe7d3e247c0 threadA-3 1 
enforce1: 0x7fe7d3e25270 threadA-4 0 
enforce0: 0x7fe7d3e175c0 threadB-6 0 
enforce2: 0x7fe7d3d34ae0 threadB-1 0 
enforce2: 0x7fe7d3d34ff0 threadB-4 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile0_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 10
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e27a00
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e27a00 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e27b50
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e27b50 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28390
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e28390 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e278c0
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3e278c0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e282d0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e282d0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28660
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e28660 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28260
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3e28260 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e285f0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e285f0 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-4 0
In addRWRelation: 

xxxx read: threadB-4 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e289e0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e289e0 main-2 threadB-4
xxx: threadB-4 (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
ttt: (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
Add RW: threadB-6 0
In addRWRelation: 

xxxx read: threadB-6 1 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-6 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28140
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e28140 main-2 threadB-6
xxx: threadB-6 (or  (and  (= RF_threadB-6_main-2 1) (= B_threadB-6_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-6 1)))))
ttt: (or  (and  (= RF_threadB-6_main-2 1) (= B_threadB-6_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-6 1)))))
Add RW: threadA-5 0
In addRWRelation: 

xxxx read: threadA-5 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e290e0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e290e0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28da0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e28da0 main-2 threadA-5
xxx: threadA-5 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e291b0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e291b0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-3 1
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d35710
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d35710 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Add RW: threadA-4 0
In addRWRelation: 

xxxx read: threadA-4 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-4 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d362d0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d362d0 main-1 threadA-4
xxx: threadA-4 (or  (and  (= RF_threadA-4_main-1 1) (= B_threadA-4_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-4 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-4 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-4 1)))))
ttt: (or  (and  (= RF_threadA-4_main-1 1) (= B_threadA-4_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-4 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-4 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-4 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))))) (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1))))) (or  (and  (= RF_threadB-6_main-2 1) (= B_threadB-6_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-6 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1))))) (or  (and  (= RF_threadA-4_main-1 1) (= B_threadA-4_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-4 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-4 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-4 1)))))):named RW))

Adding SW Constraints: 15
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 1063 column 10: model is not available") 0
[Solver] (error "line 1063 column 10: model is not available")


(RW ASW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 10
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 1
threadA 4 0
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
test2
ccc7
Checking previous unsat schedules: 26
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3d34ae0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile1_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d43770
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d43770 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 1
In addRWRelation: 

xxxx read: threadB-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d43e60
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d43e60 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-1 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d432f0
111: 10
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-5
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3d432f0 threadA-5 threadB-1
xxx: threadB-1 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-1_threadA-5 1) (= B_threadB-1_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-1 1)))))):named RW))

Adding SW Constraints: 3
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 2127 column 10: model is not available") 0
[Solver] (error "line 2127 column 10: model is not available")


(SCConsistent RW CORF) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 0
prefix & reads: 0 2
enforce0: 0x7fe7d3d34a40 threadA-1 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile2_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 2
Pre check!
checking: read:val
0: threadA-1 : 1
1: threadB-1 : 1
prefix & reads: 0 2
enforce0: 0x7fe7d3d34a40 threadA-1 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile3_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 2
Add RW: threadA-1 1
In addRWRelation: 

xxxx read: threadA-1 0 1

write: threadA-5 1

write: main-2 0
writeset: 2
xxx: threadA-1 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-1 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile4_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d441d0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d441d0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d43f00
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d43f00 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile5_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28f70
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e28f70 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1ca50
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e1ca50 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e287c0
111: 8
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3e287c0 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e1cac0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e1cac0 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))):named RW))

Adding SW Constraints: 4
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 3191 column 10: model is not available") 0
[Solver] (error "line 3191 column 10: model is not available")


(RW CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 1
prefix & reads: 0 4
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 2 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile6_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e18460
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e18460 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e18710
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e18710 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 1
In addRWRelation: 

xxxx read: threadB-2 0 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 4
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadB-1 : 0
3: threadB-2 : 2
prefix & reads: 0 4
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 2 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile7_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 4
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3ee90
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d3ee90 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3f3a0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d3f3a0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 2
In addRWRelation: 

xxxx read: threadB-2 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3f440
111: 8
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3d3f440 threadA-3 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-3 1) (= B_threadB-2_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-2 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 2 
enforce0: 0x7fe7d3e247c0 threadA-3 1 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 2 
enforce2: 0x7fe7d3d34d50 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile8_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0fce0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f0fce0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0fe40
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f0fe40 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
Gurantee end: threadA-4 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f0fdb0
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3f0fdb0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06bc0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f06bc0 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f06c30
111: 8
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3f06c30 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 8
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadA-5 : 0
4: threadB-1 : 0
5: threadB-2 : 0
6: threadB-3 : 0
7: threadB-4 : 1
prefix & reads: 0 8
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 2 
enforce0: 0x7fe7d3e247c0 threadA-3 1 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3e22650 threadA-5 0 
enforce2: 0x7fe7d3e22650 threadA-5 0 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 0 
enforce2: 0x7fe7d3d34d50 threadB-3 0 
enforce0: 0x7fe7d3d34ff0 threadB-4 1 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile9_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 8
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42120
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d42120 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42280
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d42280 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d429c0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d429c0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d421f0
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3d421f0 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42350
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d42350 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42dd0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d42dd0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42ea0
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3d42ea0 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42600
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d42600 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-4 1
In addRWRelation: 

xxxx read: threadB-4 0 1

write: threadA-5 1

write: main-2 0
writeset: 2

write: threadA-5 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d43550
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d43550 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-4 threadA-5
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-5
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42670
111: 10
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-5
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3d42670 threadA-5 threadB-4
xxx: threadB-4 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-4_threadA-5 1) (= B_threadB-4_threadA-5 0) (= false (and (= B_threadA-5_main-2 1) (= B_main-2_threadB-4 1)))))
Add RW: threadA-5 0
In addRWRelation: 

xxxx read: threadA-5 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d42860
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3d42860 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d43bb0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3d43bb0 main-2 threadA-5
xxx: threadA-5 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 9
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 2
2: threadA-3 : 1
3: threadA-5 : 0
4: threadB-1 : 0
5: threadB-2 : 0
6: threadB-3 : 0
7: threadB-4 : 0
8: threadB-6 : 0
prefix & reads: 0 9
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 2 
enforce0: 0x7fe7d3e247c0 threadA-3 1 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3e22650 threadA-5 0 
enforce2: 0x7fe7d3e22650 threadA-5 0 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 0 
enforce2: 0x7fe7d3d34d50 threadB-3 0 
enforce0: 0x7fe7d3d34ff0 threadB-4 0 
enforce0: 0x7fe7d3e175c0 threadB-6 0 
enforce2: 0x7fe7d3d34ae0 threadB-1 0 
enforce2: 0x7fe7d3d34ff0 threadB-4 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile10_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 9
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1a790
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f1a790 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f18bd0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f18bd0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1ac20
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3f1ac20 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1ae90
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3f1ae90 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1ab00
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f1ab00 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1b0c0
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3f1b0c0 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-4 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1a390
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3f1a390 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1b020
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f1b020 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadB-4 0
In addRWRelation: 

xxxx read: threadB-4 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-4 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1b590
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f1b590 main-2 threadB-4
xxx: threadB-4 (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
ttt: (or  (and  (= RF_threadB-4_main-2 1) (= B_threadB-4_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-4 1)))))
Add RW: threadB-6 0
In addRWRelation: 

xxxx read: threadB-6 1 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-6 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f18940
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f18940 main-2 threadB-6
xxx: threadB-6 (or  (and  (= RF_threadB-6_main-2 1) (= B_threadB-6_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-6 1)))))
ttt: (or  (and  (= RF_threadB-6_main-2 1) (= B_threadB-6_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-6 1)))))
Add RW: threadA-5 0
In addRWRelation: 

xxxx read: threadA-5 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-5 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-3 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1b930
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3f1b930 threadB-3 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
Gurantee end: threadA-5 (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-5 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1b680
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f1b680 main-2 threadA-5
xxx: threadA-5 (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
ttt: (or  (and  (and (or  (and  (= RF_threadA-3_threadB-3 1) (= B_threadA-3_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-3 1)))))) (= RF_threadA-5_main-2 1) (= B_threadA-5_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-5 1)))))
Add RW: threadA-2 2
In addRWRelation: 

xxxx read: threadA-2 1 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Checking fMap: 6
Checking fMap: 6
Checking fMap: 8
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 0
prefix & reads: 0 6
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 1 
enforce0: 0x7fe7d3e247c0 threadA-3 0 
enforce2: 0x7fe7d3e247c0 threadA-3 0 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 0 
enforce2: 0x7fe7d3d34d50 threadB-3 0 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile11_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1c4b0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f1c4b0 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1c610
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3f1c610 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1c580
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3f1c580 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f135c0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3f135c0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 0
In addRWRelation: 

xxxx read: threadB-3 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28520
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3e28520 threadA-4 threadB-3

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28ef0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e28ef0 main-1 threadB-3
xxx: threadB-3 (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadB-3 1
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
end guarantee!
In isEnforcesSWRelation: threadA-2 threadB-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadB-3
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e28460
111: 9
xx: main-0
xx: main-1
xx: main-2
xx: threadB-1
xx: threadB-2
xx: threadB-3
xx: threadB-0
xx: main-3
xx: main-4
222
Add swRelation: 0x7fe7d3e28460 threadB-3 threadA-2
xxx: threadA-2 (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
ttt: (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1)))))
Add RW: threadA-3 0
In addRWRelation: 

xxxx read: threadA-3 1 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: main-1 0
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-3 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e27c20
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e27c20 main-1 threadA-3
xxx: threadA-3 (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
ttt: (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))
RW: (assert (! (and  (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1))))) (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1))))) (or  (and  (and (= 1 0)) (= RF_threadB-3_threadA-4 1) (= B_threadB-3_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-3 1)))) (and  (= RF_threadB-3_main-1 1) (= B_threadB-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-3 1))))) (or  (and  (= RF_threadA-2_threadB-3 1) (= B_threadA-2_threadB-3 0) (= false (and (= B_threadB-3_threadA-3 1) (= B_threadA-3_threadA-2 1))) (= false (and (= B_threadB-3_threadA-4 1) (= B_threadA-4_threadA-2 1))) (= false (and (= B_threadB-3_main-1 1) (= B_main-1_threadA-2 1))))) (or  (and  (= RF_threadA-3_main-1 1) (= B_threadA-3_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadA-3 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadA-3 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadA-3 1)))))):named RW))

Adding SW Constraints: 8
mhb0
action: main-3
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: main-4
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadB-7
msss!
mhb1: 0x7fe7d3f18e40
mhb2
mhb3
mhb4
mhb5
mhb0
action: threadA-6
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
End adding SW Constraints!
ccc5
begin checksat!


 0


MEMORY-ORDER CONSTRAINTS ----- 0


unsat 0
[Solver] Model Satisfiability: unsat


(error "line 4255 column 10: model is not available") 0
[Solver] (error "line 4255 column 10: model is not available")


(RW CORR CORW) 0
end checksat!
ccc6
test1
0x7fe7d3d24d70 0x7fe7d3d00000 0
In addCheckSatFailedSchs!
test2
ccc7
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 0
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 1 
enforce0: 0x7fe7d3e247c0 threadA-3 0 
enforce2: 0x7fe7d3e247c0 threadA-3 0 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 2 
enforce2: 0x7fe7d3d34d50 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile12_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2b620
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e2b620 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2b780
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e2b780 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
Inconsistency from guarantee!
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2b850
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3e2b850 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2b6f0
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3e2b6f0 main-1 threadB-2
xxx: threadB-2 (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (and (= 1 0)) (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadB-3 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadB-3 2
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 6
Pre check!
checking: read:val
0: threadA-1 : 0
1: threadA-2 : 1
2: threadA-3 : 1
3: threadB-1 : 0
4: threadB-2 : 0
5: threadB-3 : 2
prefix & reads: 0 6
enforce0: 0x7fe7d3d34a40 threadA-1 0 
enforce0: 0x7fe7d3e23160 threadA-2 1 
enforce0: 0x7fe7d3e247c0 threadA-3 1 
enforce2: 0x7fe7d3e247c0 threadA-3 1 
enforce0: 0x7fe7d3d34ae0 threadB-1 0 
enforce0: 0x7fe7d3d34b80 threadB-2 0 
enforce0: 0x7fe7d3d34d50 threadB-3 2 
enforce2: 0x7fe7d3d34d50 threadB-3 2 
ccc1
ccc2
ccc3
Opening file: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3d24d70
Adding Binary HB constraints: /Users/aser/Dropbox/papers/C++11/Checker11/examples/mo_relaxed2/formulaFile13_0x7fe7d3d24d70
Adding sc constraints: 12
In addLockConstraints: 0
ccc4
AddRWRelations: 6
Add RW: threadA-1 0
In addRWRelation: 

xxxx read: threadA-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadA-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2a640
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e2a640 main-2 threadA-1
xxx: threadA-1 (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
ttt: (or  (and  (= RF_threadA-1_main-2 1) (= B_threadA-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadA-1 1)))))
Add RW: threadB-1 0
In addRWRelation: 

xxxx read: threadB-1 0 0

write: threadA-5 1

write: main-2 0
writeset: 2

write: main-2 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-1 main-2
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-2
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3e2a7a0
111: 3
xx: main-0
xx: main-1
xx: main-2
222
Add swRelation: 0x7fe7d3e2a7a0 main-2 threadB-1
xxx: threadB-1 (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
ttt: (or  (and  (= RF_threadB-1_main-2 1) (= B_threadB-1_main-2 0) (= false (and (= B_main-2_threadA-5 1) (= B_threadA-5_threadB-1 1)))))
Add RW: threadB-2 0
In addRWRelation: 

xxxx read: threadB-2 0 0

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-4 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-4 1
list: threadA-3
guarantee: threadA-3 1
just before!
In addRWRelation: 

xxxx read: threadA-3 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-3 (or )
Identify inconsistency1!
Gurantee end: threadA-4 
end guarantee!
In isEnforcesSWRelation: threadB-2 threadA-4
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-4
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3f1a800
111: 9
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: threadA-4
xx: main-3
222
Add swRelation: 0x7fe7d3f1a800 threadA-4 threadB-2

write: main-1 0
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d26610
end guarantee!
In isEnforcesSWRelation: threadB-2 main-1
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: main-1
msss!
mhb1: 0x7fe7d3d26610
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3d3dd00
111: 2
xx: main-0
xx: main-1
222
Add swRelation: 0x7fe7d3d3dd00 main-1 threadB-2
xxx: threadB-2 (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
ttt: (or  (and  (= RF_threadB-2_threadA-4 1) (= B_threadB-2_threadA-4 0) (= false (and (= B_threadA-4_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_threadA-4_threadB-3 1) (= B_threadB-3_threadB-2 1))) (= false (and (= B_threadA-4_main-1 1) (= B_main-1_threadB-2 1)))) (and  (= RF_threadB-2_main-1 1) (= B_threadB-2_main-1 0) (= false (and (= B_main-1_threadA-3 1) (= B_threadA-3_threadB-2 1))) (= false (and (= B_main-1_threadA-4 1) (= B_threadA-4_threadB-2 1))) (= false (and (= B_main-1_threadB-3 1) (= B_threadB-3_threadB-2 1)))))
Add RW: threadB-3 2
In addRWRelation: 

xxxx read: threadB-3 0 2

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4

write: threadA-3 2
eeeee1
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3f18e40
ssfdfsfd3!
Guarantee begin: threadB-3 0
Gurantee end: threadB-3 
eeeee2
begin guarantee!
ssfdfsfd!
ssfdfsfd1!
ssfdfsfd2: 0x7fe7d3d348f0
ssfdfsfd3!
Guarantee begin: threadA-3 0
Gurantee end: threadA-3 
end guarantee!
In isEnforcesSWRelation: threadB-3 threadA-3
xxxx
xxxx1
xxxx2
fence1
fence2
fence3
fence4
xxxx3
xxxx4
xxxx5
xxxx6
mhb0
action: threadA-3
msss!
mhb1: 0x7fe7d3d348f0
mhb2
mhb3
mhb4
mhb5
set hblist: 0x7fe7d3c21350
111: 8
xx: main-0
xx: threadA-0
xx: main-1
xx: main-2
xx: threadA-1
xx: threadA-2
xx: threadA-3
xx: main-3
222
Add swRelation: 0x7fe7d3c21350 threadA-3 threadB-3
xxx: threadB-3 (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
ttt: (or  (and  (= RF_threadB-3_threadA-3 1) (= B_threadB-3_threadA-3 0) (= false (and (= B_threadA-3_threadA-4 1) (= B_threadA-4_threadB-3 1))) (= false (and (= B_threadA-3_threadB-3 1) (= B_threadB-3_threadB-3 1))) (= false (and (= B_threadA-3_main-1 1) (= B_main-1_threadB-3 1)))))
Add RW: threadA-2 1
In addRWRelation: 

xxxx read: threadA-2 1 1

write: threadA-3 2

write: threadA-4 0

write: threadB-3 1

write: main-1 0
writeset: 4
xxx: threadA-2 (or )
Identify inconsistency1!
ttt: 
eeeeeee: threadA-2 1
Identify inconsistency2!
In addCheckSatFailedSchs!
Checking fMap: 10
set new failed sch: 26 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 0
In addCheckSatFailedSchs!
bbbb
threadA 1 1
threadB 1 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadB 1 0
threadB 2 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 0
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 1
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 2
threadA 3 1
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 2
threadB 1 0
threadB 2 2
threadB 3 1
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 0
threadA 3 0
threadA 4 1
threadB 1 0
threadB 2 2
threadB 3 1
threadB 5 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 0
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 0
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 1
threadB 1 0
threadB 2 0
threadB 3 2
In addCheckSatFailedSchs!
bbbb
threadA 1 0
threadA 2 1
threadA 3 1
threadA 4 0
threadA 5 0
threadB 1 0
threadB 2 0
threadB 3 0
threadB 4 0
threadB 6 0
In generateModel2 End!
### Solver Time: 2269.59
